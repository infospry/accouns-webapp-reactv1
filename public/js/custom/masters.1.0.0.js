var SearchWizardId, SearchParam = "[{EmpId:'0'}]", JobStatus = "", JobType = 'N-L';
var totalCount = 0, PageNumber = 1, PageSize = 100, LoadMoreCount = 10;
var msg_bond = 'inbox', msg_type = '', archive = 0, deleted = 0;
var pagenumber = 0, pagesize = 10;
var ProfileType = "", parent_id = 0, RequestedPage = "";
var OrgStatus = "", Tabrequest = "", UserStatus = "";
var IsActive = '', deletestatus = 0, j = 1, SingleRowEditcounter = 1, mediapagesize = 3, totalmediacount = 0, k = 0; counterIndex = 0, lastrownum = 0;
var lastsortorderval = '', fieldlabel = '', Wizard_id = '', StoreRoleId = [], Wizard_Role_Setting_Type = 1, AddNewFieldCounter = 0;
var Counter = 0, SerialNo = 1;

var comingSoon = 'This action is Under Process. We will update soon...';

var parametersT, parametersP, serverResponse, tblHeadRow, tabStatus = 'T', rNumber;
var locationOptions, clientName = [], arrPostedJob = [], arrPostedJobPrev = [], arrBookedJob = [], arrtblJobs = [], arrJobType = [], validatedPostedJobsCounter = 0;
var idCounter = 0, editJobDetail;
var actionJobType, actionJobData;

var agency_id = 0, employee_id = 0, job_age = '', location_id = 0, Role_id =0;

//Employer's Candidate
var page_number = 0, page_size = 10;
var emp_location_ids = '', emp_role_id = 0, emp_search = '', absence_id = 0, dynamic_id = 0, contacts_update_id = 0; cnd_profile_block = '', cnd_sub_type = 'All', cnd_profile_absence_start_date = '', cnd_profile_absence_end_date = '', cnd_profile_action_from = '';
var bindLocationPopup = false, account_status = 0;
var arrDocAttachFiles_Data = [], attchFile_IdCounter = 0;
var payrolltype = 'perm';
var editor;
$(document).ready(function () {  

    if ($('#UserNav_Placeholder li').length == 0) {      
        ns_users.getUserNav();
    }

    $(document).on('click', ".clsCallPage", function () {
        var wzid = jQuery(this).attr('id');
        var pageurl = jQuery(this).attr('data-page');
        var datakey = jQuery(this).attr('data-key');
        eraseCookie('wzid');
        eraseCookie('datakey');
        createCookie('wzid', wzid, 1);
        createCookie('datakey', datakey, 1);
        window.location.replace(pageurl);
    });
    $('[data-toggle="tooltip"]').tooltip();
    $(".btnPrev").click(function () {
        PageNumber--;
        ns_roleMaster.getAllRolesDetails(ProfileType);
    });
    $(".btnNext").click(function () {
        PageNumber++;
        ns_roleMaster.getAllRolesDetails(ProfileType);
    });
    $(document).on('click', ".applyBtn", function () {
        $('.clsApply').click();
    });

    $(document).on('keypress', '.decimal2', function (event) {
        return isDecimal(event, this);    
    });
    //$(document).on('keypress', '.decimal', function (event) {
    //    //return isDecimal(event, this);
       
    //    return isDecimalTwoPlace(event, this);
        
    //});

    $('.decimal').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
            ((event.which < 48 || event.which > 57) &&
                (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if ((event.which == 46) && (text.indexOf('.') == -1)) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
        }

        if ((text.indexOf('.') != -1) &&
            (text.substring(text.indexOf('.')).length > 2) &&
            (event.which != 0 && event.which != 8) &&
            ($(this)[0].selectionStart >= text.length - 2)) {
            event.preventDefault();
        }
    });

    $('.decimal').bind("paste", function (e) {
        var text = e.originalEvent.clipboardData.getData('Text');
        if ($.isNumeric(text)) {
            if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                e.preventDefault();
                $(this).val(text.substring(0, text.indexOf('.') + 3));
            }
        }
        else {
            e.preventDefault();
        }
    });

    

    $(document).on('keypress', '.number', function (event) {
        return IsNumber(event, this);
    });


    //**********************Job Board***************************
    $(document).on('click', '.clsshowfulladdress', function () {
        var id = $(this).attr('id');
        var status = $(this).attr('data-status');
        var ArrayAdr = $(this).attr('data-value');
        var location = ArrayAdr.split("##")[0];
        var address = ArrayAdr.split("##")[1];
        if (status == 'location') {
            $(this).show('slow');
            $(this).attr('data-status', 'address');
            $(this).html(location + '<br>' + address);
        }
        else {
            $(this).show('slow');
            $(this).attr('data-status', 'location');
            $(this).html(location);
        }
    });
    $(document).on('click', '.clsshowfulladdressDetails', function () {
        var id = $(this).attr('id');
        var status = $(this).attr('data-status');
        var ArrayAdr = $(this).attr('data-value');
        var location = ArrayAdr.split("##")[0];
        var address = ArrayAdr.split("##")[1];

        if (status == 'location') {
            $(this).show('slow');
            $(this).attr('data-status', 'address');
            $(this).html(location + ', ' + address.trim());

        }
        else {
            $(this).show('slow');
            $(this).attr('data-status', 'location');
            $(this).html(location + '. . .');
        }
    });
    $(document).on('click', '.clsshowCndDetails', function () {
        var id = $(this).attr('id');
        var status = $(this).attr('data-status');
        var ArrayAdr = $(this).attr('data-value');
        var candidate = ArrayAdr.split("#")[0];
        var mobile = ArrayAdr.split("#")[1];
        var email = ArrayAdr.split("#")[2];
        if (status == 'cnd') {            
            $(this).show('slow');
            $(this).attr('data-status', 'contact');
            $(this).html(candidate + '<br><i class="zmdi zmdi-phone">&nbsp;</i>' + mobile + '<br><i class="zmdi zmdi-email">&nbsp;</i>' + email);
        }
        else {
            $(this).show('slow');
            $(this).attr('data-status', 'cnd');
            $(this).html(candidate);
        }
    });

    $(document).on('click', ".ul-main-tabs li a", function () {
        JobType = jQuery(this).attr('data-job-type');
        ns_jobs.LoadJobBorad();
    });
    $(document).on('click', ".ul-records-tabs li a", function () {
        JobStatus = jQuery(this).attr('data-status');
        ns_jobs.LoadJobBorad();
    });
    $(document).on('click', ".btnRefreshMainGrid", function () {
        ns_jobs.LoadJobBorad();
    });
  
    $(document).on('click', '.clsViewJobFile', function () {
        $('#ViewJobFile').modal('show');
        var fileId = $(this).attr('data-file-id');
        var fileName = $(this).attr('data-file-name');
        var fileTitle = $(this).attr('data-file-title');
        $('#spanJobFileTitle').html('VIEW ' + fileTitle + ' FILE');
        ns_jobs.getJobFileAndTimesheet(fileId, fileName, fileTitle);
    });
    $(document).on('click', '#tabshowHistory', function () {
        ns_jobs.getJobDetails($("#spanDetailJobId").html(), "jobHistory");
    });
    //Timesheet & File
    $(document).on('click', '#btnCancelUpldJobFile', function () {
        $('#txtFileDescription').val('');
        $('#UploadedJobFile').val('');
    });
    $(document).on('click', '#btnSubmitUploadJobFile', function () {
        var jobid = $(this).attr('data-job-id');
        var jobAction = $(this).attr('data-action');
        var UploadedJobFile = $('#UploadedJobFile').get(0).files;
        var fileDesc = $('#txtFileDescription').val();
        var fileType = (jobAction == 'timesheet' ? 'T' : 'J');
        var fileId = "#UploadedJobFile";
        if ($('#UploadedJobFile').val() == "") {
            ShowAlertMessage("Message", "Browse a file", 'A');
            $('#UploadedJobFile').focus();
            return false;
        }
        else if ($('#ddlFiletype').val() == "") {
            ShowAlertMessage("Message", "Select file type", 'A');
            $('#ddlFiletype').focus();
            return false;
        }
        else if (ValidateFileExtn(fileId))
            return false;

        else if (ValidateFileSize(fileId))
            return false;
        else {
            var data = new FormData();
            data.append("jobId", jobid);
            data.append("jobAction", jobAction);
            data.append("UploadedJobFile", UploadedJobFile[0]);
            data.append("fileDesc", fileDesc);
            data.append("fileType", fileType);
            ns_jobs.UploadJobFile(data, jobid, jobAction, fileDesc);
        }
    });
    $(document).on('click', '.clsDownloadJobFile', function () {
        var fileId = $(this).attr('data-file-id');
        var fileName = $(this).attr('data-file-name');
        var fileType = $(this).attr('data-file-type');
        ns_jobs.DownloadFile(fileId, fileName, fileType);
    });
    $(document).on('click', '.clsDeleteJobFile', function () {
        var fileId = $(this).attr('data-file-id');
        var fileTitle = $(this).attr('data-file-title');
        var result = confirm("Are you sure want to delete this");
        if (result) {
            ns_jobs.DeleteJobFile(fileId, fileTitle);
        }
        else
            return false;
    });
    $(document).on('click', '.filetab', function () {
        var jobAction = jQuery(this).attr('data-action');
        var jobid = jQuery(this).attr('data-job-id');
        var fileDeleteStatus = jQuery(this).attr('data-status');
        ns_jobs.GetUploadedJobFiles(jobAction, jobid, fileDeleteStatus);
    });
    $(document).on('click', '.btnViewTimesheet', function () {
        var fileId = $(this).attr('data-file-id');
        var fileName = $(this).attr('data-file-name');
        var jobAction = $(this).attr('data-action');
        $('#spanJobFileTitle').html(jobAction.toUpperCase());
        ns_jobs.getJobFileAndTimesheet(fileId, fileName, jobAction);
    });

    //**********************Job Actions*************************** 

    $(document).on('click', "#btnOptional", function () {
        if ($(".editRowOptional").css("display") == 'none') {
            $(".editRowOptional").show('slow');
            if (tabStatus == "P")
                $(".editRowOptionalP").show('slow');
            else
                $(".editRowOptionalP").hide('slow');
            $("#btnOptionalIcon").removeClass("zmdi zmdi-plus mrgn-t5").addClass("zmdi zmdi-minus mrgn-t5");
        }
        else {
            $(".editRowOptionalP").hide('slow');
            $(".editRowOptional").hide('slow');
            $("#btnOptionalIcon").removeClass("zmdi zmdi-minus mrgn-t5").addClass("zmdi zmdi-plus mrgn-t5");
        }
    });
    $(document).on('click', "#btnHistory", function () {
        $('.tbodyJobHistory').html('');
        if ($(".tblHistory").css("display") == 'none') {
            $(".tblHistory").show('slow');
            $("#btnHistoryIcon").removeClass("zmdi zmdi-plus mrgn-t5").addClass("zmdi zmdi-minus mrgn-t5");
            if ($("#btnHistoryIcon").text() == "View Audit History")
                ns_jobs.getJobDetails($("#lblEditJobId").text().split("/")[0], "auditHistory");
            else {
                ns_jobs.getJobDetails($("#lblEditJobId").text().split("/")[0], "jobHistory");
            }
        }
        else {
            $(".tblHistory").hide('slow');
            $("#btnHistoryIcon").removeClass("zmdi zmdi-minus mrgn-t5").addClass("zmdi zmdi-plus mrgn-t5");;
        }
    });
    $(document).on('click', "#btnEditSave", function () {
        var btnAction = $(this).attr('data-action');
       
        actionJobType = "";
        actionJobData = "";
        actionJobType = {
            "Action": "Actions",
            "Job_Type": tabStatus
        }
        if (btnAction == 'complete' || btnAction == 'recomplete') {
            var noOfActHmVist = 0, breakActInMin = 0;
            if ($('#txtEditActBreakInMin').css('display') == 'block')
                breakActInMin = $("#txtEditActBreakInMin").val() == 0 ? 0 : $("#txtEditActBreakInMin").val();
            else
                breakActInMin = 0;
            if ($('#txtEditActNoOfHomeVisit').css('display') == 'block')
                noOfActHmVist = $("#txtEditActNoOfHomeVisit").val() == 0 ? 0 : $("#txtEditActNoOfHomeVisit").val();
            else
                noOfActHmVist = 0;

            //Role
            var roleid = '0', locationid = '0';
            jstatus = $('#lblEditJobStatus').html();
            if (jstatus == 'OFFLINE' || jstatus == 'LIVE' || jstatus == 'APPLIED');
            {
                var currentRoleId = $('#txtjobRoleEdit').attr('data-current-role-id');
                var selectedRoleId = $('#txtjobRoleEdit').val();
                if (currentRoleId !== selectedRoleId)
                    roleid = selectedRoleId;
            }
            //Location
            var currentLocationId = $('#ddlLocationEdit').attr('data-current-location-id');
            var selectedLocationId = $('#ddlLocationEdit').val();
            if (currentLocationId !== selectedLocationId)
                locationid = selectedLocationId;

            var updateFlag = ns_jobs.IsJobDetailsEdited();
            actionJobData = {
                "Action": "Complete",
                "Emp_Id": $("#lblEditClient").attr('data-id'),
                "job_Id": $(this).attr('data-val'),
                "updateFlag": updateFlag,

                "location_id": locationid,
                "role_id": roleid,
                //Temporary
                "Start_DateTime": ConvertDateFormate($('#txtEditStartDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditStartTime').val()),
                "End_DateTime": ConvertDateFormate($('#txtEditEndDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditEndTime').val()),
                "Client_Rate": $('#txtEditClientRate').val(),
                "Candidate_Rate": $('#txtEditClientRate').val(),//$('#txtEditAssignedCndRate').val(),
                "Description": $('#txtEditDescription').val(),
                //"It_System_Id": editJobDetail.job_it_System_Id,
                //"Shift_Type_Id": editJobDetail.job_shift_id,
                //"speciality_id": editJobDetail.job_speciality_id,
                //"grade_id": editJobDetail.job_grade,
                //"fast_pay": editJobDetail.job_fast_pay,
                //"onsite_parking": editJobDetail.job_onsite_parking,

                "Break_Time": $('#rdoEditBreakPaid').prop('checked') == true ? $('#txtEditBreakInMin').val() : 0,
                "Vat_Amount_In_Percent": $('#txtEditVatAmt').attr('data-val'),
                "Admin_Fees_In_Percent": $("#txtEditAdminFees").attr('data-val'),
                "Break_Required": ($('#rdoEditBreakPaid').prop('checked') == true ? 1 : 0),
                "Smart_Card_Required": ($('#chkSmartCard').prop('checked') == true ? 1 : 0),
                "Admin_Work_Required": ($('#chkAdminWork').prop('checked') == true ? 1 : 0),
                "Vat_Required": ($('#chkVatYes').prop('checked') == true ? 1 : 0),
                "On_Call_Required": ($('#chkOnCall').prop('checked') == true ? 1 : 0),
                "Home_Visit_Required": ($('#chkHomeVisit').prop('checked') == true ? 1 : 0),
                "Home_Visit_Amount": ($('#chkHomeVisit').prop('checked') == true ? $("#txtEditHomeVisitAmt").val() : 0),
                // Permanent
                "Job_Url": ((tabStatus == "P") ? $("#txtEditJobUrlP").val() : ""),
                "Job_Ref_No": ((tabStatus == "P") ? $("#txtEditJobReferenceP").val() : ""),
                "Job_Pay_Scheme": ((tabStatus == "P") ? $("#txtEditPaySchemeP").val() : ""),
                "Job_Staff_Group": ((tabStatus == "P") ? $("#txtEditGroupReferenceP").val() : ""),
                "Department": ((tabStatus == "P") ? $("#txtEditDepartmentP").val() : ""),
                "Job_Working_Pattern": ((tabStatus == "P") ? $("#txtEditWorkingPatternP").val() : ""),
                "Job_Pay_Band": ((tabStatus == "P") ? $("#txtEditPayBandP").val() : ""),
                // Actual Datetime and NoOfHomeVisit
                "start_datetime_actual": ConvertDateFormate($('#txtEditActStartDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditActStartTime').val()),
                "end_datetime_actual": ConvertDateFormate($('#txtEditActEndDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditActEndTime').val()),
                "taking_break_by_candidate": breakActInMin,
                "no_of_home_visit": noOfActHmVist
            };

        }
        else if (btnAction == 'audit') {
            if ($("#txtJobAuditComment").val().length == 0) {
                $("#txtJobAuditComment").focus();
                ShowAlertMessage("Message", "Please enter audit comment", "A");
                return false;
            }
            else {
                actionJobData = {
                    "Action": "Audit",
                    "job_Id": $(this).attr('data-val'),
                    "comment": $("#txtJobAuditComment").val()
                };
            }
        }
        else if (btnAction == 'update') {
            if ($("#rdoEditBreakPaid").prop("checked") == true) {
                if (parseInt($("#txtEditBreakInMin").val()) == 0) {
                    $("#txtEditBreakInMin").focus();
                    ShowAlertMessage("Message", "Please enter break time", "A");
                    return false;
                }
            }
            if ($("#chkHomeVisit").prop("checked") == true) {
                if (parseInt($("#txtEditHomeVisitAmt").val()) == 0) {
                    $("#txtEditHomeVisitAmt").focus();
                    ShowAlertMessage("Message", "Please enter home visit amount", "A");
                    return false;
                }
            }
            if (ns_jobs.fn_IsJobDetailsEdited() == true) {
                var roleid = '0', locationid = '0';
                jstatus = $('#lblEditJobStatus').html();
                if (jstatus == 'OFFLINE' || jstatus == 'LIVE' || jstatus == 'APPLIED');
                {
                    var currentRoleId = $('#txtjobRoleEdit').attr('data-current-role-id');
                    var selectedRoleId = $('#txtjobRoleEdit').val();
                    if (currentRoleId !== selectedRoleId)
                        roleid = selectedRoleId;
                }

                //Location
                var currentLocationId = $('#ddlLocationEdit').attr('data-current-location-id');
                var selectedLocationId = $('#ddlLocationEdit').val();
                if (currentLocationId !== selectedLocationId)
                    locationid = selectedLocationId;

                actionJobData = {
                    "Action": "Edit",
                    "job_Id": $(this).attr('data-val'),
                    "Emp_Id": $("#lblEditClient").attr('data-id'),
                    "location_id": locationid,
                    "role_id": roleid,
                    //Temporary
                    "Start_DateTime": ConvertDateFormate($('#txtEditStartDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditStartTime').val()),
                    "End_DateTime": ConvertDateFormate($('#txtEditEndDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditEndTime').val()),
                    "Client_Rate": $('#txtEditClientRate').val(),
                    "Candidate_Rate": $('#txtEditClientRate').val(),//$('#txtEditAssignedCndRate').val(),
                    "Description": $('#txtEditDescription').val(),

                    "Shift_Type_Id": editJobDetail.job_shift_id,
                    "It_System_Id": editJobDetail.job_it_System_Id,
                    "speciality_id": editJobDetail.job_speciality_id,
                    "grade_id": editJobDetail.job_grade,
                    "fast_pay": editJobDetail.job_fast_pay,
                    "onsite_parking": editJobDetail.job_onsite_parking,
                    
                    "Break_Time": $('#rdoEditBreakPaid').prop('checked') == true ? $('#txtEditBreakInMin').val() : 0,
                    "Vat_Amount_In_Percent": $('#txtEditVatAmt').attr('data-val'),
                    "Admin_Fees_In_Percent": $("#txtEditAdminFees").attr('data-val'),
                    "Break_Required": ($('#rdoEditBreakPaid').prop('checked') == true ? 1 : 0),
                    "Smart_Card_Required": ($('#chkSmartCard').prop('checked') == true ? 1 : 0),
                    "Admin_Work_Required": ($('#chkAdminWork').prop('checked') == true ? 1 : 0),
                    "Vat_Required": ($('#chkVatYes').prop('checked') == true ? 1 : 0),
                    "On_Call_Required": ($('#chkOnCall').prop('checked') == true ? 1 : 0),
                    "Home_Visit_Required": ($('#chkHomeVisit').prop('checked') == true ? 1 : 0),
                    "Home_Visit_Amount": ($('#chkHomeVisit').prop('checked') == true ? $("#txtEditHomeVisitAmt").val() : 0),
                    "no_of_home_visit": 0,//($("#txtEditHomeVisitAmt").val() == '0' ? 0 : 1),

                    // Permanent
                    "Job_Url": ((tabStatus == "P") ? $("#txtEditJobUrlP").val() : ""),
                    "Job_Ref_No": ((tabStatus == "P") ? $("#txtEditJobReferenceP").val() : ""),
                    "Job_Pay_Scheme": ((tabStatus == "P") ? $("#txtEditPaySchemeP").val() : ""),
                    "Job_Staff_Group": ((tabStatus == "P") ? $("#txtEditGroupReferenceP").val() : ""),
                    "Department": ((tabStatus == "P") ? $("#txtEditDepartmentP").val() : ""),
                    "Job_Working_Pattern": ((tabStatus == "P") ? $("#txtEditWorkingPatternP").val() : ""),
                    "Job_Pay_Band": ((tabStatus == "P") ? $("#txtEditPayBandP").val() : ""),
                };
            }
            else {
                ShowAlertMessage("Message", "Nothing has been changed", "A");
                return false;
            }
        }
        else if (btnAction == 'createinvoice') {

            var noOfActHmVist = 0, breakActInMin = 0;
            if ($('#txtEditActBreakInMin').css('display') == 'block')
                breakActInMin = $("#txtEditActBreakInMin").val() == 0 ? 0 : $("#txtEditActBreakInMin").val();
            else
                breakActInMin = 0;
            if ($('#txtEditActNoOfHomeVisit').css('display') == 'block')
                noOfActHmVist = $("#txtEditActNoOfHomeVisit").val() == 0 ? 0 : $("#txtEditActNoOfHomeVisit").val();
            else
                noOfActHmVist = 0;

            var roleid = '0', locationid = '0';
            //Role
            jstatus = $('#lblEditJobStatus').html();
            if (jstatus == 'OFFLINE' || jstatus == 'LIVE' || jstatus == 'APPLIED');
            {
                var currentRoleId = $('#txtjobRoleEdit').attr('data-current-role-id');
                var selectedRoleId = $('#txtjobRoleEdit').val();
                if (currentRoleId !== selectedRoleId)
                    roleid = selectedRoleId;
            }
            //Location
            var currentLocationId = $('#ddlLocationEdit').attr('data-current-location-id');
            var selectedLocationId = $('#ddlLocationEdit').val();
            if (currentLocationId !== selectedLocationId)
                locationid = selectedLocationId;

            var jobAction = $("input[name='rdoInvAuth']:checked").val();
            var comments = $('#txtCommentsAuth').val();
            if (jobAction == 'undefined') {
                ShowAlertMessage("Message", 'First Select Create Invoice Option', "A");
                $("input[name='rdoInvAuth']:checked").focus();
                return false;
            }
            else if (jobAction == '0' && comments == '') {
                ShowAlertMessage("Message", 'Enter reason for unauthorization.', "A");
                $('#txtCommentsAuth').focus();
                return false;
            }
            else if ($('#chkCreateInv').is(':checked') == false) {
                ShowAlertMessage("Message", 'Are you sure you to proceed ?', "A");
                $('#chkCreateInv').focus();
                return false;
            }
            else {
                var updateFlag = ns_jobs.IsJobDetailsEdited();
                var actionJobData = {
                    "Action": "CreateInvoice",
                    "job_Id": $(this).attr('data-val'),
                    "Emp_Id": $("#lblEditClient").attr('data-id'),

                    "location_id": locationid,
                    "role_id": roleid,
                    //Temporary
                    "Start_DateTime": ConvertDateFormate($('#txtEditStartDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditStartTime').val()),
                    "End_DateTime": ConvertDateFormate($('#txtEditEndDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditEndTime').val()),
                    "Client_Rate": $('#txtEditClientRate').val(),
                    "Candidate_Rate": $('#txtEditClientRate').val(),//$('#txtEditAssignedCndRate').val(),
                    "Description": $('#txtEditDescription').val(),
                    "Shift_Type_Id": editJobDetail.job_shift_id,
                    "It_System_Id": editJobDetail.job_it_System_Id,
                    "speciality_id": editJobDetail.job_speciality_id,
                    "grade_id": editJobDetail.job_grade,
                    "fast_pay": editJobDetail.job_fast_pay,
                    "onsite_parking": editJobDetail.job_onsite_parking,
                    "Break_Time": $('#rdoEditBreakPaid').prop('checked') == true ? $('#txtEditBreakInMin').val() : 0,
                    "Vat_Amount_In_Percent": $('#txtEditVatAmt').attr('data-val'),
                    "Admin_Fees_In_Percent": $("#txtEditAdminFees").attr('data-val'),
                    "Break_Required": ($('#rdoEditBreakPaid').prop('checked') == true ? 1 : 0),
                    "Smart_Card_Required": ($('#chkSmartCard').prop('checked') == true ? 1 : 0),
                    "Admin_Work_Required": ($('#chkAdminWork').prop('checked') == true ? 1 : 0),
                    "Vat_Required": ($('#chkVatYes').prop('checked') == true ? 1 : 0),
                    "On_Call_Required": ($('#chkOnCall').prop('checked') == true ? 1 : 0),
                    "Home_Visit_Required": ($('#chkHomeVisit').prop('checked') == true ? 1 : 0),
                    "Home_Visit_Amount": ($('#chkHomeVisit').prop('checked') == true ? $("#txtEditHomeVisitAmt").val() : 0),

                    // Permanent
                    "Job_Url": ((tabStatus == "P") ? $("#txtEditJobUrlP").val() : ""),
                    "Job_Ref_No": ((tabStatus == "P") ? $("#txtEditJobReferenceP").val() : ""),
                    "Job_Pay_Scheme": ((tabStatus == "P") ? $("#txtEditPaySchemeP").val() : ""),
                    "Job_Staff_Group": ((tabStatus == "P") ? $("#txtEditGroupReferenceP").val() : ""),
                    "Department": ((tabStatus == "P") ? $("#txtEditDepartmentP").val() : ""),
                    "Job_Working_Pattern": ((tabStatus == "P") ? $("#txtEditWorkingPatternP").val() : ""),
                    "Job_Pay_Band": ((tabStatus == "P") ? $("#txtEditPayBandP").val() : ""),
                    "comment": comments,
                    "updateFlag": updateFlag,
                    "jobAction": jobAction,

                    // Actual Datetime and NoOfHomeVisit
                    "start_datetime_actual": ConvertDateFormate($('#txtEditActStartDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditActStartTime').val()),
                    "end_datetime_actual": ConvertDateFormate($('#txtEditActEndDate').val()) + " " + (tabStatus === "P" ? '00:00' : $('#txtEditActEndTime').val()),
                    "taking_break_by_candidate": breakActInMin,
                    "no_of_home_visit": noOfActHmVist
                };
                var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
                ns_jobs.jobs_actions(strFinal);
            }
        }
        var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
        ns_jobs.jobs_actions(strFinal);
    });
    $(document).on('click', "#btnBookedSave", function () {
        actionJobType = "";
        actionJobData = "";
        actionJobType = {
            "Action": "Actions",
            "send_email_to_employer": ($("#chkSendMailToClient").prop("checked") == true ? 1 : 0),
            "send_email_to_candidate": ($("#chkSendMailToCnd").prop("checked") == true ? 1 : 0),
            "Job_Type": tabStatus,
        }
        var btnAction = $(this).attr('data-action');
        if (btnAction == "swap") {

            if ($("#txtEmpRate").val() == '' || parseFloat($("#txtEmpRate").val()) == 0) {
                $("#txtEmpRate").focus();
                ShowAlertMessage("Message", "Please enter job rate !", "A");
                return false;
            }
            if ($("#txtNewCandidate").val() == '') {
                $("#txtNewCandidate").focus();
                ShowAlertMessage("Message", "Please enter new candidate !", "A");
                return false;
            }
            if ($("#txtNewCandidate").attr('data-val') === $("#lblBookedCandidate").attr('data-val')) {
                $("#txtNewCandidate").focus();
                ShowAlertMessage("Message", "This candidate already assigned to this job !", "A");
                return false;
            }

            if ($("#txtCNDRate").val() == '' || parseFloat($("#txtCNDRate").val()) == 0) {
                $("#txtCNDRate").focus();
                ShowAlertMessage("Message", "Please enter candidate rate !", "A");
                return false;
            }
            if (parseFloat($("#txtCNDRate").val()) > parseFloat($("#txtEmpRate").val())) {
                $("#txtCNDRate").focus();
                ShowAlertMessage("Message", "Candidate rate can't be greater than employer rate !", "A");
                return false;
            }
            if ($("#txtJobComment").val() === "") {
                $("#txtJobComment").focus();
                ShowAlertMessage("Message", "Please enter job swapping reason !", "A");
                return false;
            }
            actionJobData = {
                "Job_Id": $(this).attr('data-val'),
                "Action": "Swap",
                "Candidate_Id": $("#lblBookedCandidate").attr('data-val'),
                "new_candidate_id": $("#txtNewCandidate").attr('data-val'),
                "client_rate": $("#txtEmpRate").val(),
                "candidate_rate": $("#txtCNDRate").val(),
                "comment": $("#txtJobComment").val()
            }
        }
        else if (btnAction === 'assign') {
            if ($("#txtEmpRate").val() == '' || parseFloat($("#txtEmpRate").val()) == 0) {
                $("#txtEmpRate").focus();
                ShowAlertMessage("Message", "Please enter employer rate !", "A");
                return false;
            }
            if ($("#txtNewCandidate").val() == '') {
                $("#txtNewCandidate").focus();
                ShowAlertMessage("Message", "Please enter candidate !", "A");
                return false;
            }
            if ($("#txtCNDRate").val() == '' || parseFloat($("#txtCNDRate").val()) == 0) {
                $("#txtCNDRate").focus();
                ShowAlertMessage("Message", "Please enter candidate rate !", "A");
                return false;
            }
            if (parseFloat($("#txtCNDRate").val()) > parseFloat($("#txtEmpRate").val())) {
                $("#txtCNDRate").focus();
                ShowAlertMessage("Message", "Candidate rate can't be greater than employer rate !", "A");
                return false;
            }
            actionJobData = {
                "Job_Id": $(this).attr('data-val'),
                "Action": "Assign",
                "Candidate_Id": $("#txtNewCandidate").attr('data-val'),
                "client_rate": $("#txtEmpRate").val(),
                "candidate_rate": $("#txtCNDRate").val()
            }
        }
        else if (btnAction === 'cancel') {
            if ($("#txtJobComment").val() === "") {
                $("#txtJobComment").focus();
                ShowAlertMessage("Message", "Please enter job cancel reason !", "A");
                return false;
            }
            actionJobData = {
                "Job_Id": $(this).attr('data-val'),
                "Action": "Cancel",
                "keep_job": ($("#chkKeepJob").prop("checked") != true) ? 0 : 1,
                "comment": $("#txtJobComment").val()
            }
        }
        var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
        ns_jobs.jobs_actions(strFinal);
    });
    $(document).on('blur', "#txtEditClientRate", function () {
        if ($(this).val().trim().length === 0) {
            ShowAlertMessage("Message", "Shift rate can't be null", "A");
            $(this).focus();
        }
        //else {
          
        //    if (parseFloat($(this).val()) < parseFloat($("#txtEditAssignedCndRate").val())) {
        //        ShowAlertMessage("Message", "Job rate should be greater than CND rate", "A");
        //        $(this).focus();
        //    }
        //}
    });
    $(document).on('blur', "#txtEditAssignedCndRate", function () {
        if ($(this).val().trim().length === 0) {
            ShowAlertMessage("Message", "Client rate can't be null", "A");
            $(this).focus();
        }
        //else {
        //    if (parseFloat($(this).val()) > parseFloat($("#txtEditClientRate").val())) {
        //        ShowAlertMessage("Message", "CND rate should be less than job rate", "A");
        //        $(this).focus();
        //    }
        //}
    });
    $(document).on('change', "#chkVatYes", function () {
        if ($(this).prop("checked") == true) {
            $("#chkVt").val('visit');
            if ($("#lblEditVatRule").val() == "VOM")
                ns_jobs.fn_calculate_amount($("#chkVatYes"));
        }
        else {
            $("#chkVt").val('unvisit');
            $("#txtEditVatAmt").val(0);
            ns_jobs.fn_calculate_amount($("#chkVatYes"));
        }
    });
    //$(document).on('change', "#txtEditAdminFees", function (event) {   
    //    return isDecimal(event, this);
    //});
    //$(document).on('input', "#txtEditAdminFees", function () {

    //    var fee = $(this).val();      
    //    var shiftcost = $('#txtEditShiftCost').val();
    //    var duration = $("#txtEditDuration").val();
    //    var agency_fee = parseFloat(fee) * parseFloat(duration);
      
    //    if (parseFloat(agency_fee) > 0)
    //        $('#txtEditShiftCost').val(parseFloat(shiftcost) + parseFloat(agency_fee));
    //    else
    //        $('#txtEditShiftCost').val(shiftcost);
    //});




    $(document).on('change', "#chkHomeVisit", function () {
        if ($(this).prop("checked") == true) {
            $("#tdHomeVisit").show('slow');
            $("#chkHmVst").val('visit');
        }
        else {
            $("#tdHomeVisit").hide('slow');
            $("#chkHmVst").val('unvisit');
        }
    });
    $(document).on('change', "#chkSmartCard", function () {
        if ($(this).prop("checked") == true) {
            $("#chkSmtCrd").val('visit');
        }
        else {
            $("#chkSmtCrd").val('unvisit');
        }
    });
    $(document).on('change', "#chkAdminWork", function () {
        if ($(this).prop("checked") == true) {
            $("#chkAdWrk").val('visit');
        }
        else {
            $("#chkAdWrk").val('unvisit');
        }
    });
    $(document).on('change', "#chkOnCall", function () {
        if ($(this).prop("checked") == true) {
            $("#chkOnCal").val('visit');
        }
        else {
            $("#chkOnCal").val('unvisit');
        }
    });
    $(document).on('change', ".break", function () {
        if ($(this).prop("checked") == true && this.id == "rdoEditBreakPaid") {
            $("#tdBreakInMin").show('slow');
            $("#rdoBreak").val('paid');
        }
        else {
            $("#tdBreakInMin").hide('slow');
            $("#rdoBreak").val('unpaid');
        }
    });
    $(document).on('change', ".calculateAmount", function () {
        ns_jobs.fn_calculate_amount(this);
    });
    $(document).on('keyup', ".calculateAmount", function () {
        ns_jobs.fn_calculate_amount(this);
    });
    $(document).on('click', ".btn-outline-danger", function () {
        $('.modeledit').modal('hide');
        $('.modelcomments').modal('hide');
        $('.ModalCreateInvoice').modal('hide');
        $(".modal-backdrop").css('display', 'none');
    });
    $(document).on('click', ".delete", function () {
        if ($(this).attr("data-text") == "Yes") {
            actionJobType = "";
            actionJobData = "";
            actionJobType = {
                "Action": "Actions",
                "Job_Type": tabStatus
            }
            actionJobData = {
                "Action": ($(this).attr('data-action') == "delete" ? 'Delete' : 'Restore'),
                "job_Id": $(this).attr('data-val'),
            };

            var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
            ns_jobs.jobs_actions(strFinal);
        }
        else {
            $('.modeldelete').modal('hide');
            $(".modal-backdrop").css('display', 'none');
        }
    });
    $(document).on('click', "#chkAll", function () {
        tblJobsBooked = "";
        tblJobsBooked = $("#tblJobBookedMaster tbody tr");
        tblJobsBooked.each(function (row, tr) {
            var chkBox = $("#chk" + row);
            if ($("#chkAll").prop("checked") == true)
                chkBox.prop("checked", "checked");
            else
                chkBox.prop("checked", "");
        });
    });
    $(document).on('click', "#btnDeleteAll", function () {
        var job_Ids = "";
        var chkBox = "";
        actionJobType = "";
        actionJobData = "";
        actionJobType = {
            "Action": "Actions",
            "Job_Type": tabStatus
        }

        var idsVall = [];
        $('.chkgrdJob:checked').each(function () {
            idsVall.push(this.id.replace("chkgrdJob", ''));
        });
        job_Ids = idsVall.join(',');

        if (job_Ids == "")
            ShowAlertMessage("Message", "Please select the jobs that you want to delete !", "A");
        else {
            ns_jobs.fn_Delete_Restore_Detail(job_Ids, 'delete', "Delete All");
            if ($(this).attr("data-text") == "Yes") {
                actionJobData = {
                    "Job_Id": job_Ids,
                    "Action": "Delete"
                }
                var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
                ns_jobs.jobs_actions(strFinal);
            }
        }
    });
    //Offline or Live
    $(document).on('click', "#clsOfflineLive", function () {
        var action = $(this).attr('data-action');
        var job_Ids = "";
        var chkBox = "";
        actionJobType = "";
        actionJobData = "";
        actionJobType = {
            "Action": "Actions",
            "Job_Type": tabStatus
        }
        var idsVall = [];
        $('.chkgrdJob:checked').each(function () {
            idsVall.push(this.id.replace("chkgrdJob", ''));
        });
        job_Ids = idsVall.join(',');

        if (job_Ids == "")
            ShowAlertMessage("Message", "Please select the jobs that you want to " + action.toUpperCase() + " !", "A");
        else {
            ns_jobs.fn_Delete_Restore_Detail(job_Ids, action, action.toUpperCase() + " All");
            if ($(this).attr("data-text") == "Yes") {
                actionJobData = {
                    "Job_Id": job_Ids,
                    "Action": action
                }
                var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
                ns_jobs.jobs_actions(strFinal);
            }
        }
    });
    //Edit job role
    $(document).on('click', "#btnEditrole", function () {
        var act = $(this).attr('data-action');
        if (act == 'edit') {
            $('#spaneditjobroleLbl').hide();
            $('#spaneditjobroleDdl').show('slow');
            $(this).attr('data-action', 'cancel');
            $(this).attr('title', 'Cancel');
            $(this).html('<i class=" col-red zmdi zmdi-close" style="padding-top: 5px; font-size: 24px;"></i>');
            $('#txtjobRoleEdit').val($('#txtjobRoleEdit').attr('data-current-role-id'));
        }
        else if (act == 'cancel') {
            $('#spaneditjobroleDdl').hide();
            $('#spaneditjobroleLbl').show('slow');
            $(this).attr('data-action', 'edit');
            $(this).attr('title', 'Edit Job Role');
            $(this).html('<i class="zmdi zmdi-edit"></i>Edit');
        }
    });
    $(document).on('change', "#txtjobRoleEdit", function () {
        var rolename = $(this).find(":selected").text();
        var roleid = $(this).find(":selected").val();
        if (roleid > 0) {
            var CndRate = 50;
            var adminFee = 32;
            var adminPercent = 16.73;
            var vatAmt = 18;
            var vatPercent = 20;
        }
    });
    $(document).on('click', "#btnEditLocation", function () {
        var act = $(this).attr('data-action');
        if (act == 'edit') {
            $('#spaneditjobLocationLbl').hide();
            $('#spaneditjobLocationDdl').show('slow');
            $(this).attr('data-action', 'cancel');
            $(this).attr('title', 'Cancel');
            $(this).html('<i class=" col-red zmdi zmdi-close" style="padding-top: 5px; font-size: 24px;"></i>');
            $('#ddlLocationEdit').val($('#ddlLocationEdit').attr('data-current-location-id'));
        }
        else if (act == 'cancel') {
            $('#spaneditjobLocationDdl').hide();
            $('#spaneditjobLocationLbl').show('slow');
            $(this).attr('data-action', 'edit');
            $(this).attr('title', 'Edit Job Location');
            $(this).html('<i class="zmdi zmdi-edit"></i>Edit');
        }
    });
    //job Application(s)
    $(document).on('click', '.clsViewCndProfile', function () {
        var cndId = $(this).attr('data-cnd-id');
        ns_CandidateProfile.getCandidateShortDetails(cndId);
    });

    //**********************JOB POSTING & BOOKING**********************
    $(document).on('click', "#add_row", function () {
        ns_table_template.add_new_row(serverResponse);
    });
    $(document).on('click', "#tabTemporary", function () {
        idCounter = 0;
        tabStatus = "T";
        parametersT = "dro=s-dr-dsf-its-jbs-tcls&tp=T&si=0";
        $('#tblHead').empty();
        $('#tblBody').empty();
        $('#tblFooter').empty();
        ns_jobs.load_dropdowns(parametersT);
    });
    $(document).on('click', "#tabPermanent", function () {
        idCounter = 0;
        tabStatus = "P";
        parametersP = "dro=s-dr-dsp-dg-tcls&tp=" + tabStatus + "&si=0";
        $('#tblHead').empty();
        $('#tblBody').empty();
        $('#tblFooter').empty();
        ns_jobs.load_dropdowns(parametersP);

    });
    $(document).on('click', "#tabTemporaryBooked", function () {
        idCounter = 0;
        tabStatus = "T";
        parametersT = "tp=" + tabStatus;
        $('#tblBookedHead').empty();
        $('#tblBookedBody').empty();
        $('#tblBookedFooter').empty();
        ns_jobs.get_jobs_booked(parametersT)
    });
    $(document).on('click', "#tabPermanentBooked", function () {
        idCounter = 0;
        tabStatus = "P";
        parametersP = "tp=" + tabStatus;
        $('#tblBookedHead').empty();
        $('#tblBookedBody').empty();
        $('#tblBookedFooter').empty();
        ns_jobs.get_jobs_booked(parametersP);
    });
    $(document).on('click', "#copy_row", function () {
        ns_table_template.copy_row();

    });
    $(document).on('click', "#tabFindJob", function () {
        $('#previewTbl').css('display', 'none');
        $('#findTbl').css('display', '');
        $('#rowAddNew').css('display', '');
        $('#rowJobSource').css('display', '');
        $('#rowBtnContinue').css('display', '');
    });
    $(document).on('click', "#btnContinue", function () {
        arrtblJobs.length = 0;
        arrPostedJob.length = 0;
        arrPostedJobPrev.length = 0;
        $("#tblJobMaster tbody tr").each(function (row, tr) {
            var hiddenRow = $(tr).attr('class');
            if (hiddenRow !== 'ClsDatepair format-strikethrough') {
                arrtblJobs.push(row);
            }
        });
        var i;
        for (i = 0; i < arrtblJobs.length; i++) {
            if (ns_jobs.fn_post_jobs_validate(arrtblJobs[i]) == false) {
                arrPostedJob.length = 0;
                arrPostedJobPrev.length = 0;
                validatedPostedJobsCounter = 0;
                return false;
            }
        }

        if (arrPostedJob.length == arrtblJobs.length) {
            $("#tblHeadPreview").empty();
            $("#tblBodyPreview").empty();
            $("#tblHeadPreview").append('<tr><th colspan="11" id="jobPosted"><th></tr>')
            $("#tblHeadPreview").append(ns_table_template.heading_row(serverResponse.tablecolumns));
            $.each(arrPostedJobPrev, function (index, row) {
                var jobsPostedAs = row.Status == "Live" ? 'Job(s) posted as:<span class="text-green">  Live </span><br/><span>    Job Source: <b>' + row.Job_Source + '</b></span>' : 'Job(s) posted as:<span class="text-danger">  Offline</span><br/><span>   Job Source: <b class="text-green">' + row.Job_Source + '</b></span>'
                $("#jobPosted").html(jobsPostedAs);
                $('#tblBodyPreview').append('<tr>');
                $('#tblBodyPreview').append('<td><span>' + row.Sr_No + '<span></td>');
                //$('#tblBodyPreview').append('<td><span><b>' + row.Emp_Name + '</b><span></td>');
                $('#tblBodyPreview').append('<td><span class="col-brown"><i class="zmdi zmdi-pin">' + row.Location + '</i><span></td>');
                $('#tblBodyPreview').append('<td><span class="col-blue">' + row.Start_DateTime + '<span></td>');
                $('#tblBodyPreview').append('<td><span class="col-blue">' + row.End_DateTime + '<span></td>');
                $('#tblBodyPreview').append('<td style="text-align:center;"><span ><b>' + row.Duration + ' </b><span></td>');
                if (tabStatus === "T")
                    $('#tblBodyPreview').append('<td style="text-align:right;"><span class="col-blue">£' + row.Client_Rate + '<span></td>');
                $('#tblBodyPreview').append('<td style="text-align:right;"><span class="text-green">£' + (tabStatus === "P" ? row.Total_Cost : row.Shift_Cost) + '<span></td>');
                $('#tblBodyPreview').append('<td><span><b>' + row.Sector + '</b><span></td>');
                $('#tblBodyPreview').append('<td><span class="text-green">' + row.Role + '<span></td>');
                if (tabStatus === "P") {
                    $('#tblBodyPreview').append('<td><span><b>' + row.Specaility + '</b><span></td>');
                    $('#tblBodyPreview').append('<td><span><b>' + row.Grade + '</b><span></td>');
                    $('#tblBodyPreview').append('<td><span><b>' + row.Department + '</b><span></td>');
                }
                else {
                    $('#tblBodyPreview').append('<td><span>' + row.Shift_Type + '<span></td>');
                    $('#tblBodyPreview').append('<td><span>' + row.It_System + '<span></td>');
                }
                $('#tblBodyPreview').append('<td><span>' + row.others + '<span></td>');
                $("#tblBodyPreview").append("</tr>");
            });
            $("#tabPreviewJob").trigger('click');

        }
    });
    $(document).on('click', "#btnPostJob", function () {
        arrJobType.length = 0;
        jobTypePostOrBook = {
            "Action": "Post",
            "Job_Type": tabStatus
        }
        arrJobType.push(jobTypePostOrBook);
        var strFinal = "[" + JSON.stringify(arrPostedJob) + "," + JSON.stringify(arrJobType) + "]";
        ns_jobs.post_jobs(strFinal);
    });
    $(document).on('click', "#btnEdit", function () {
        arrPostedJob.length = 0;
        arrPostedJobPrev.length = 0;
        validatedPostedJobsCounter = 0;
        $("#tabFindJob").trigger('click');
    });
    $(document).on('click', "#tabPreviewJob", function () {
        $('#findTbl').css('display', 'none');
        $('#previewTbl').css('display', '');
        $('#rowAddNew').css('display', 'none');
        $('#rowJobSource').css('display', 'none');
        $('#rowBtnContinue').css('display', 'none');
    });
    $(document).on('click', "#btnRepeatAdd", function () {
        idCounter--;
        var flag = false;
        if ($("#chkRepeatUntil").prop("checked")) {
            if ($("#txtRepeatUntil").val() !== '') {
                var start = $("#txtStartDate" + idCounter).val();
                var end = $("#txtRepeatUntil").val();
                if (start != '') {
                    var sd = new Date(ConvertDate(start));
                    var ed = new Date(ConvertDate(end));
                    if (sd.toDateString() == ed.toDateString()) {
                        ShowAlertMessage("Message", "Repeat date should be greater", "A");
                        $("#txtRepeatUntil").focus();

                    }
                    else {
                        if (sd < ed) {
                            var days = CalculateDays(start, end);
                            if (days > 30) {
                                ShowAlertMessage("Message", "Maximum 30 days allowded!", "A");
                                $("#txtRepeatUntil").focus();
                            }
                            else {
                                flag = true;
                                idCounter++;
                                var arrDates = GetDateRange(start, end);
                                for (var i = 0; i < arrDates.length - 1; i++) {
                                    ns_table_template.copy_row(true, arrDates[i]);
                                }
                            }
                        }
                        else {
                            ShowAlertMessage("Message", "Start date can't be more greater than repeat date", "A");
                            $("#txtStartDate" + idCounter).focus();
                        }
                    }
                }
                else
                    $("#txtStartDate" + idCounter).focus();

            }
            else {
                $("#txtRepeatUntil").focus();
            }
        }
        else {
            $("#chkRepeatUntil").focus();
            ShowAlertMessage("Message", "Please select repeat until !", "A");
        }
        if (!flag)
            idCounter++;
    });
    $(document).on('click', "#chkRepeatUntil", function () {
        var chkUtill = $(this).prop("checked");
        $("#txtRepeatUntil").val('');
        if (chkUtill == true)
            $('#repeatUntilOption').show("slow");
        else
            $('#repeatUntilOption').hide("slow");
    });

    //**********************INVOICES**********************
    $(document).on('change', 'input[type=radio][name=rdoInvAuth]', function () {
        if (this.value == '1') {
            $('#btnCreateInvoice').html('Authorise');
            $('#invterm').html('Authorise');
            $('#divInvComment').hide('slow');

        }
        else if (this.value == '0') {
            $('#divInvComment').show('slow');
            $('#btnCreateInvoice').html('Unauthorise Now');
            $('#invterm').html('Unauthorise it');
        }
    });
    $(document).on('click', '.btn-inv-action', function () {
        var invid = $(this).attr('data-inv-id');
        var invno = $(this).attr('data-inv_no');
        var jid = $(this).attr('data-id');
        //var emp_id = '37';
        var action = $(this).attr('data-action');
        $('.btn-inv-action-edit').attr('data-inv_no', invno);
        $('.btn-inv-action-edit').attr('data-id', jid);

        if (action == 'timesheet') {
            $('#ddlFiletype').val('');
            $('#UploadedJobFile').val('');
            $('#txtFileDescription').val('');
            $('#btnInvTimesheetFile').attr('data-inv_no', invno);
            $('#btnInvTimesheetFile').attr('data-id', jid);
            ns_jobs.GetUploadedJobFiles(action, jid, 0);
        }
        else if (action == 'memo') {
            $('#tblMemoList').show('slow');
            $('#divCreateMemoBlock').hide();
            var invRefno = $(this).attr('data-inv-ref-no');
            $('.btn-memo-action-edit').attr('data-inv_no', invRefno);
            $('.btn-memo-action-edit').attr('data-id', jid);

            $('#btnCreateMemoNow').attr('data-inv-ref-no', invRefno);
            $('#btnCreateMemoNow').attr('data-memo-type', 'CR');
            $('#btnCreateMemoNow').attr('data-profile-type', 'EMP');
            $('#btnCreateMemoNow').attr('data-profile-type-id', '0');

            ns_memo.getMemos(invRefno);
        }
        else {
            $('#divInvTab').attr('data-inv_no', invno);
            $('#divInvTab').attr('data-id', jid);
            $('#btnInvTimesheetFile').attr('data-inv_no', invno);
            $('#btnInvTimesheetFile').attr('data-id', jid);
            $('#btnInvTrackHistory').attr('data-id', jid);
            $('#spaninvid').attr('data-inv-id', invid);
            $('#txtinvcomments').val('');
            $('#txt_po_number').val('');
            ns_Accounts.CombineInvoiceDetail(invno, action);
        }
    });
    $(document).on('click', '.btn-inv-edit-details', function () {
        var jid = $(this).attr('data-id');
        var empid = $(this).attr('data-emp-org').split('-')[0];
        var orgid = $(this).attr('data-emp-org').split('-')[1];
        var action = $(this).attr('data-action');
        if (action == 'edit_cndaddress') {
            ns_employer.getLocations('ddleditEmpaddress', empid, 'billing');
            $('#divToDetails').hide();
            $('#divToEdit').show('slow');
        }
        else if (action == 'edit_fromaddress') {
            ns_organisation.getLocations('ddlfromaddress', orgid);
            $('#divFromDetails').hide();
            $('#divFromEdit').show('slow');
        }
        else if (action == 'edit_invno') {
            $('.show_150').show(500);
            $('.hide_150').hide(0);
        }
        else if (action == 'view_cnd_inv') {
            var invno = $(this).attr('data-inv_no');
            ns_Accounts.viewCndAgyInvoice(invno, action)
        }
        else if (action == 'view_agy_inv') {
            var invno = $(this).attr('data-inv_no');
            ns_Accounts.viewCndAgyInvoice(invno, action)
        }
        else if (action == 'edit_footernotes') {
            $('#txtfooternotes').val($('#divfooternotesMsg').html());
            $('#divFooter').hide();
            $('#divFooterNotes').show('slow');
        }
        else if (action == 'edit_inv') {
            $('#divinvlistDetails').hide();
            $('#divinvlistedit').show('slow');
        }
        else
            ShowAlertMessage("Message", 'Sorry! Action not found', '');
    });
    $(document).on('click', '.btn-inv-action-edit-cancel', function () {
        var action = $(this).attr('data-action');
        if (action == 'edit_cndaddress') {
            $('#divToEdit').hide();
            $('#divToDetails').show('slow');
        }
        else if (action == 'edit_fromaddress') {
            $('#divFromEdit').hide();
            $('#divFromDetails').show('slow');
        }
        else if (action == 'edit_invno') {
            $('.hide_150').show(500);
            $('.show_150').hide(0);
        }
        else if (action == 'edit_footernotes') {
            $('#divFooterNotes').hide();
            $('#divFooter').show('slow');
        }
        else if (action == 'edit_inv') {
            $('#divinvlistedit').hide();
            $('#divinvlistDetails').show('slow');
        }
        else {


        }
    });
    $(document).on('click', '.btn-inv-action-edit', function () {
        var inv_po_number = '', inv_term = '0', inv_date = '', FooterNotes = ''; comment = '', Emp_Id = '0', Emp_Location_Id = '0', Org_Id = '0', Org_Location_Id = '0';
        var Start_DateTime = '', End_DateTime = '', Client_Rate = '', Candidate_Rate = '', Vat_Required = '', start_datetime_actual = '', end_datetime_actual = '', break_time = '', no_of_home_visit = '';
        var jobtypeInv = $('#spanInvTitle').attr('data-job-type');
        var invno = $(this).attr('data-inv_no');
        var jid = $(this).attr('data-id');
        var action = $(this).attr('data-action');
        var inv_id = $('#spaninvid').attr('data-inv-id');

        $('.btn-inv-action-edit').attr('data-inv_no', invno);
        $('.btn-inv-action-edit').attr('data-id', jid);

        if (action == 'edit_cndaddress') {
            if ($('#ddleditEmpaddress').val() == '0') {
                ShowAlertMessage("Message", "Select To Address", 'A');
                $('#ddleditEmpaddress').focus();
                return false;
            }
            else {
                Emp_Id = $("#ddleditEmpaddress").attr('data-emp-id');
                Emp_Location_Id = $("#ddleditEmpaddress option:selected").val();
            }
        }
        else if (action == 'edit_fromaddress') {
            if ($('#ddlfromaddress').val() == '0') {
                ShowAlertMessage("Message", "Select From Address", 'A');
                $('#ddlfromaddress').focus();
                return false;
            }
            else {
                Org_Id = $("#ddlfromaddress").attr('data-org-id');
                Org_Location_Id = $("#ddlfromaddress option:selected").val();
            }
        }
        else if (action == 'edit_invno') {
            if ($('#txtInvoiceDate').val() == '') {
                ShowAlertMessage("Message", "Enter Invoice Date", 'A');
                $('#txtInvoiceDate').focus();
                return false;
            }
            else if ($('#ddlPaymentTerms').val() == '0') {
                ShowAlertMessage("Message", "Select payment terms", 'A');
                $('#ddlPaymentTerms').focus();
                return false;
            }
            else if ($('#txteditponumber').val() == '') {
                ShowAlertMessage("Message", "Enter P.O Number", 'A');
                $('#txteditponumber').focus();
                return false;
            }
            else {
                inv_date = $('#txtInvoiceDate').val();
                inv_term = $('#ddlPaymentTerms').val();
                inv_po_number = $('#txteditponumber').val();
            }
        }
        else if (action == 'edit_inv') {
            var fromDate = jQuery("#txtInvEditStartDateActual").val();
            var fromTime = jQuery("#txtInvEditStartTimeActual").val();
            var ToDate = jQuery("#txtInvEditEndDateActual").val();
            var ToTime = jQuery("#txtInvEditEndTimeActual").val();
            var OfferedHourlyRateInvoice = jQuery("#txtInvEditClientRate").val();
            var DoctorPayRatePerHourInvoice = jQuery("#txtInvEditCndRate").val();

            if (fromDate == '') {
                ShowAlertMessage("Message", 'Enter actual start date', 'A');
                jQuery("#txtInvEditStartDateActual").focus();
                return false;
            }
            else if (fromTime == '') {
                jQuery("#txtInvEditStartTimeActual").focus();
                return false;
            }
            else if (ToDate == '') {
                ShowAlertMessage("Message", 'Enter actual finish date', 'A');
                jQuery("#txtInvEditEndDateActual").focus();
                return false;
            }
            else if (ToTime == '') {
                ShowAlertMessage("Message", 'Enter actual time finish', 'A');
                jQuery("#txtInvEditEndTimeActual").focus();
                return false;
            }
            else if (OfferedHourlyRateInvoice == '' || OfferedHourlyRateInvoice == '0' || OfferedHourlyRateInvoice == '0.0') {
                ShowAlertMessage("Message", 'Enter job rate', 'A');
                jQuery("#txtInvEditClientRate").focus();
                return false;
            }
            else if (DoctorPayRatePerHourInvoice == '' || DoctorPayRatePerHourInvoice == '0' || DoctorPayRatePerHourInvoice == '0.0') {
                ShowAlertMessage("Message", 'Enter candidate rate', 'A');
                jQuery("#txtInvEditCndRate").focus();
                return false;
            }
            else if (parseFloat(OfferedHourlyRateInvoice) < parseFloat(DoctorPayRatePerHourInvoice)) {
                ShowAlertMessage("Message", 'Candidate Rate can not be greater than Job Rate.', 'A');
                jQuery("#txtInvEditCndRate").focus();
                return false;
            }
            else if (confirm('Are you sure you want to update this Invoice ?') == false) {
                return false;
            }
            else {
                //job datetime
                Start_DateTime = ConvertDateFormate($('#txtInvEditStartDate').val()) + " " + (jobtypeInv === "P" ? '00:00' : $('#txtInvEditStartTime').val());
                End_DateTime = ConvertDateFormate($('#txtInvEditEndDate').val()) + " " + (jobtypeInv === "P" ? '00:00' : $('#txtInvEditEndTime').val());
                Client_Rate = OfferedHourlyRateInvoice;
                Candidate_Rate = DoctorPayRatePerHourInvoice;
                Vat_Required = ($('#chkyes').prop('checked') == true ? 1 : 0);
                //actual datetime
                start_datetime_actual = ConvertDateFormate(fromDate) + " " + (jobtypeInv === "P" ? '00:00' : fromTime);
                end_datetime_actual = ConvertDateFormate(ToDate) + " " + (jobtypeInv === "P" ? '00:00' : ToTime);
                break_time = $('#txtBreakInMins').val();
                no_of_home_visit = $('#txtNoOfHomeVisit').val();
            }
        }
        else if (action == 'edit_comments') {
            if ($('#txtinvcomments').val().trim() == '') {
                ShowAlertMessage("Message", "Enter comments", 'A');
                $('#txtinvcomments').focus();
                return false;
            }
            else
                ShowAlertMessage("Message", comingSoon, '');
        }
        else if (action == 'edit_footernotes') {
            if ($('#txtfooternotes').val().trim() == '') {
                ShowAlertMessage("Message", "Enter footer notes", 'A');
                $('#txtfooternotes').focus();
                return false;
            }
            else {
                FooterNotes = $('#txtfooternotes').val().trim();
            }
        }
        else if (action == 'approve') {
            if ($('#txt_po_number').val().trim() == '') {
                ShowAlertMessage("Message", "Enter P.O. Number to approve the invoice", 'A');
                $('#txt_po_number').focus();
                return false;
            }
            else
                inv_po_number = $('#txt_po_number').val().trim();
        }
        else if (action == 'cancel') {
            if ($('#txtinvcomments').val().trim() == '') {
                ShowAlertMessage("Message", "Enter cancellation Reason", 'A');
                $('#txtinvcomments').focus();
                return false;
            }
            else
                comment = $('#txtinvcomments').val().trim();
        }
        else if (action == 'disapprove') {
            if ($('#txtinvcomments').val().trim() == '') {
                ShowAlertMessage("Message", "Enter Disapprove Reason", 'A');
                $('#txtinvcomments').focus();
                return false;
            }
            else
                comment = $('#txtinvcomments').val().trim();
        }
        if (action !== '') {
            //actionJobType = ""; actionJobData = "";
            actionJobType = {
                "Action": "Actions",
                "Job_Type": jobtypeInv
            }
            //var updateFlag = ns_jobs.IsJobDetailsEdited();             
            actionJobData = {
                "Action": action,
                "inv_id": inv_id,
                "job_id": jid,
                "inv_no": invno,
                //Inv date
                "inv_date": inv_date,
                "inv_terms": inv_term,
                "po_number": inv_po_number,

                //To Address
                "emp_id": Emp_Id,
                "emp_location_id": Emp_Location_Id,
                //From Address
                "org_id": Org_Id,
                "org_location_id": Org_Location_Id,
                //Job Datetime
                "start_datetime": Start_DateTime,
                "end_datetime": End_DateTime,
                "client_rate": Client_Rate,
                "cnd_rate": Candidate_Rate,
                "vat_status": Vat_Required,
                //Actual Datetime
                "start_datetime_actual": start_datetime_actual,
                "end_datetime_actual": end_datetime_actual,
                "break_time": break_time,
                "no_of_home_visit": no_of_home_visit,
                //Others 
                "inv_foot_note": FooterNotes,
                "comments": comment
                //"updateFlag": updateFlag   
            }
            var JsonString = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";

            ns_Accounts.inv_actions(JsonString, action);
        }
    });
    jQuery('.btncancelInv').on('click', function (e) {
        if (confirm('Are you want to close?')) {
            $('#ModalCandidateInvoice').modal('hide');
            $('#ModalAgencyInvoice').modal('hide');
            $(".modal-backdrop").css('display', 'none');
        }
    });
    $('.ClsInvAdjustment').keypress(function (event) {
        return isDecimal(event, this);
    });
    $(document).on('change paste keyup', '#ddlPaymentTerms, #txtInvoiceDate', function () {
        var days = parseInt($('#ddlPaymentTerms').val());
        var Prevdate = ConvertDateFormate($("#txtInvoiceDate").val());
        var date = new Date(Prevdate);
        var newdate = new Date(date);
        newdate.setDate(newdate.getDate() + days);
        var dd = newdate.getDate();
        var mm = newdate.getMonth() + 1;
        var yy = newdate.getFullYear();
        var DueDate = dd + '/' + mm + '/' + yy;
        $("#spaninvDueDate").html(DueDate);
    });
    $(document).on('change', ".calculateInvAmount", function () {
        ns_Accounts.calculateInvAmount(this);
    });
    $(document).on('keyup', ".calculateInvAmount", function () {
        ns_Accounts.calculateInvAmount(this);
    });
    jQuery(document).on('input', ".calculateAmount", function () {
        var total = $("#spanInvTotalAmt").attr('data-amt');
        var vat = 0; //$("#span_totalVATAmtVerify").html();
        var extra = '0'
        if (jQuery(".ClsInvAdjustment").val() !== '') {
            extra = $(".ClsInvAdjustment").val();
        }
        var payable = parseFloat(total) + parseFloat(vat) + parseFloat(extra);
        jQuery("#spanInvNetPayableAmt").html('£' + payable.toFixed(2));

    });
    $(document).on('keyup', ".calculateDuration", function () {     
        ns_Accounts.calculateInvDuration(this);
    });
    $(document).on('change', ".calculateDuration", function () {      
        ns_Accounts.calculateInvDuration(this);
    });


    $(document).on('change', "#txtstarttimePlanner", function () {
        var shiftDuration = timeCalculating('#txtstarttimePlanner', '#txtendtimePlanner');     
        $('#txtdurationPlanner').val(shiftDuration);
    });
    $(document).on('change', "#txtendtimePlanner", function () {
        var shiftDuration = timeCalculating('#txtstarttimePlanner', '#txtendtimePlanner');
        $('#txtdurationPlanner').val(shiftDuration);
    });


    var CommentMaxLength = 3000;
    $('#txtinvcomments').keyup(function () {
        var textlen = CommentMaxLength - $(this).val().length;
        $('#Commentchars').text(textlen);
    });
    var FooterMaxLength = 3000;
    $('#txtfooternotes').keyup(function () {
        var textlen = FooterMaxLength - $(this).val().length;
        $('#Footerchars').text(textlen);
    });

    $(document).on('click', '#btnCancelInvoice', function () {
        $('#ddlFiletype').val('');
        $('#UploadedJobFile').val('');
        $('#txtFileDescription').val('');
        $('#divInvTab').click();
    });
    $(document).on('click', '#btnSubmitUploadJobFileInv', function () {
        var jobid = $(this).attr('data-job-id');
        var jobAction = $(this).attr('data-action');
        var UploadedJobFile = $('#UploadedJobFileInv').get(0).files;
        var fileDesc = $('#txtFileDescription').val();
        var fileType = $('#ddlFiletype').val();
        var fileId = "#UploadedJobFileInv";

        if (fileType == "") {
            ShowAlertMessage("Message", "Select file type", 'A');
            $('#ddlFiletype').focus();
            return false;
        }
        else if ($('#UploadedJobFileInv').val() == "") {
            ShowAlertMessage("Message", "Browse a file", 'A');
            $('#UploadedJobFileInv').focus();
            return false;
        }
        else if (ValidateFileExtn(fileId))
            return false;

        else if (ValidateFileSize(fileId))
            return false;
        else {
            var data = new FormData();
            data.append("jobId", jobid);
            data.append("jobAction", jobAction);
            data.append("UploadedJobFile", UploadedJobFile[0]);
            data.append("fileDesc", fileDesc);
            data.append("fileType", fileType);
            ns_jobs.UploadJobFile(data, jobid, jobAction, fileDesc);
        }
    });
    $(document).on('click', ".btncloseinv", function () {
        $('#view-invoice').modal('hide');
        $(".modal-backdrop").css('display', 'none');
    });
    $(document).on('click', ".btncloseinv", function () {
        $('#view-invoice').modal('hide');
        $(".modal-backdrop").css('display', 'none');
    });
    //**********************Credit Debit Memo**********************
    $(document).on('click', '#btnAddNewMemo', function () {
        $('#createnewmemo').modal('show');
    });
    $(document).on('change', '#ddlProfileTypeMomo', function () {
        memo_id = '0';
        var inv_ref_no = $(this).attr('data-inv_no');
        var memotype = $("input[name='rbtnmemo']:checked").val();
        var profile_type = $('#ddlProfileTypeMomo option:selected').attr('data-type');
        var profile_id = $('#ddlProfileTypeMomo option:selected').val();
        var action = $(this).attr('data-action');
        ns_memo.MemoDetail(memo_id, inv_ref_no, memotype, profile_type, profile_id, action);
    });
    $(document).on('click', '.rbtMemo', function () {
        var memo_id = '0'
        var inv_ref_no = $(this).attr('data-inv_no');
        var memotype = $("input[name='rbtnmemo']:checked").val();
        var profile_type = $('#ddlProfileTypeMomo option:selected').attr('data-type');
        var profile_id = $('#ddlProfileTypeMomo option:selected').val();
        var action = $(this).attr('data-action');
        if ($(this).val() == 'CR')
            $('#CrDrAmtlabel').html('Credit Amount');
        else
            $('#CrDrAmtlabel').html('Debit Amount');

        ns_memo.MemoDetail(memo_id, inv_ref_no, memotype, profile_type, profile_id, action);

    });
    $(document).on('click', '#btnSubmitCrDrMemo', function () {
        var action = $(this).attr('data-action');
        var actionSource = $(this).attr('data-source');
        var memo_id = $('#btnSubmitCrDrMemo').attr('data-memo-id');
        var memo_type = $("input[name='rbtnmemo']:checked").val();
        var send_mail_status = $("#chkMemoSend").prop('checked') ? 1 : 0;


        var profile_type = actionSource == 'memo' ? $('#ddlProfileType').val() : $('#ddlProfileTypeMomo option:selected').attr('data-type');
        var rofile_type_id = actionSource == 'memo' ? $('#txtProfileTypeId').attr('data-item-id') : $('#ddlProfileTypeMomo option:selected').val();
        var invoice_ref_no = $('#txtInvoiceNo').val();
        var memo_date = $('#txtMemodate').val();

        var total_cnd_amt = $('#txtCndTotalMemo').val();
        var total_admin_fees = $('#txtAdmTotalMemo').val();
        var total_vat_amt = $('#txtVatTotalMemo').val();
        var description = $('#txtMemoDescription').val();

        var msg = "", flag = 0;
        if (actionSource == 'memo' && profile_type == "") {
            $("#ddlProfileType").focus();
            flag = 1;
            msg = "Select profile type";
        }
        else if (actionSource == 'memo' && profile_type_id == 0) {
            $("#txtProfileTypeId").focus();
            flag = 1;
            msg = profile_type = "CND" ? 'Enter candidate name' : 'Enter employer name';
        }
        else if (invoice_ref_no == "") {
            $("#txtInvoiceNo").focus();
            flag = 1;
            msg = "Enter invoice ref. no.";
        }
        else if (memo_date == "") {
            $("#txtMemodate").focus();
            flag = 1;
            msg = "Enter memo date";
        }
        else if (total_cnd_amt == "") {
            $("#txtCndTotalMemo").focus();
            flag = 1;
            msg = "Enter total candidate amount";
        }
        else if (total_admin_fees == "" && profile_type == 'EMP') {
            $("#txtAdmTotalMemo").focus();
            flag = 1;
            msg = "Enter a Total Admin Fee";
        }
        else if (total_vat_amt == "" && profile_type == 'EMP') {
            $("#txtVatTotalMemo").focus();
            flag = 1;
            msg = "Enter a total VAT amount";
        }
        if (flag == 0 && action !== '') {
            actionJobType = {
                "Action": "Actions",
                "Job_Type": "Memo"
            }
            actionJobData = {
                "Action": action,
                "action_source": actionSource,
                "memo_id": memo_id,
                "profile_type": profile_type,
                "profile_type_id": rofile_type_id,
                "invoice_ref_no": invoice_ref_no,
                "memo_type": memo_type,
                "memo_date": memo_date,
                "total_cnd_amt": total_cnd_amt,
                "total_admin_fees": total_admin_fees,
                "total_vat_amt": total_vat_amt,
                "description": description,
                "send_mail_status": send_mail_status
            }
            var JsonString = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
            ns_memo.memo_actions(JsonString, action);
        }
        else
            ShowAlertMessage("Message", msg, "A");
    });
    $(document).on('change', '#ddlProfileType', function () {
        var profileType = $(this).val();
        profileType == 'CND' ? $('#txtProfileTypeId').attr("placeholder", "Enter candidate name") : profileType == 'EMP' ? $('#txtProfileTypeId').attr("placeholder", "Enter employer name") : $('#txtProfileTypeId').attr("placeholder", "Select a profile type first");
        ns_memo.FillProfileTypeId(profileType);
    });
    $(document).on('keypress', '#txtCndTotalMemo, #txtAdmTotalMemo, #txtVatTotalMemo', function (event) {
        return isDecimal(event, this);
    });
    $(document).on('keyup change', '#txtCndTotalMemo, #txtAdmTotalMemo, #txtVatTotalMemo', function () {
        var total_cnd = $("#txtCndTotalMemo").val() == '' ? 0 : $("#txtCndTotalMemo").val();
        var total_admin = $("#txtAdmTotalMemo").val() == '' ? 0 : $("#txtAdmTotalMemo").val();
        var total_vat = $("#txtVatTotalMemo").val() == '' ? 0 : $("#txtVatTotalMemo").val();
        var payable = parseFloat(total_cnd) + parseFloat(total_admin) + parseFloat(total_vat);
        jQuery("#spanMemoTotalAmount").html('£' + payable.toFixed(2));
    });
    //Search Memo List
    $(document).on('click', '.memoTab', function () {
        var deleteStatus = $(this).attr('data-delete-status');
        $('#btnSearchMemo').attr('data-delete-status', deleteStatus);
        $('.searchMemoType').attr('data-delete-status', deleteStatus);
        ns_memo.getMemoList(deleteStatus);
    });
    $(document).on('click', '.clsDeleteMemo', function () {
        var action = 'delete';
        var memo_id = this.id.split('-')[1];
        var memo_no = $(this).attr('data-memo-no');
        var deleteStatus = $(this).attr('data-delete-status');
        var result = confirm("Are you sure want to" + (deleteStatus == 0 ? ' delete this' : ' permanent delete this') + "?");
        if (result) {
            actionJobType = {
                "Action": "Actions",
                "Job_Type": "Memo"
            }
            actionJobData = {
                "Action": action,
                "action_source": 'memo',
                "memo_id": memo_id
            }
            var JsonString = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
            ns_memo.memo_actions(JsonString, action);
        }
        else
            return false;
    });
    $('#btnSearchMemo').on('click', function () {
        var deleteStatus = $(this).attr('data-delete-status');
        ns_memo.getMemoList(deleteStatus);
    });
    $(document).on('click', '.applyBtn', function () {
        $('#btnSearchMemo').click();
    });
    $(document).on('click', '.clsRefreshMemo', function () {
        $('.searchMemoType').prop('checked', false);
        $('.clsSearch').val('');
        ns_memo.getMemoList(0);
    });
    $(document).on('change', '.searchMemoType', function () {
        var deleteStatus = $(this).attr('data-delete-status');
        ns_memo.getMemoList(deleteStatus);
    });
    $(document).on('click', '.clsViewMemo', function () {
        $('#viewMemo').modal('show');
        var memo_type = $(this).attr('data-memo-type');
        var inv_ref_no = $(this).attr('data-inv-ref-no');
        var profile_type = $(this).attr('data-profile-type');
        var profile_type_id = $(this).attr('data-profile-type-id');
        $('#titleViewMemo').html((memo_type == 'CR' ? 'Credit' : 'Debit') + ' Memo');
        $('#CrDrTotalAmtMemo').html((memo_type == 'CR' ? 'Credit' : 'Debit') + ' Amount');
        ns_memo.MemoView(inv_ref_no, memo_type, profile_type, profile_type_id);
    });
    $(document).on('click', '.clsEditMemo', function () {
        //$('#createnewmemo').modal('show');
        $('#tblMemoList').hide();
        $('#divCreateMemoBlock').show('slow');
        var memo_id = this.id.split('-')[1];
        var inv_ref_no = $(this).attr('data-inv-ref-no');
        var memotype = $(this).attr('data-memo-type');
        var profile_type = $(this).attr('data-profile-type');
        var profile_id = $(this).attr('data-profile-type-id');
        $('.btn-memo-cancel').attr('data-inv-ref-no', inv_ref_no);
        var action = 'update';
        ns_memo.MemoDetail(memo_id, inv_ref_no, memotype, profile_type, profile_id, action);
    });
    $(document).on('click', '#btnCreateMemoNow', function () {
        $('#tblMemoList').hide();
        $('#divCreateMemoBlock').show('slow');
        var memo_id = '0';
        var inv_ref_no = $(this).attr('data-inv-ref-no');
        var memotype = $(this).attr('data-memo-type');
        var profile_type = $(this).attr('data-profile-type');
        var profile_id = $(this).attr('data-profile-type-id');
        var action = 'create';
        $('.btn-memo-cancel').attr('data-inv-ref-no', inv_ref_no);
        ns_memo.MemoDetail(memo_id, inv_ref_no, memotype, profile_type, profile_id, action);
    });
    $(document).on('click', '.btn-memo-cancel', function () {
        $('#tblMemoList').show('slow');
        $('#divCreateMemoBlock').hide();
        ns_memo.getMemos($(this).attr('data-inv-ref-no'));
    });

    //**********************Notes**********************
    $(document).on('click', '.btnNotes', function () {
        var ProfileId = $(this).attr('data-id');
        var ProfileType = $(this).attr('data-profile-type');
        var Name = $(this).attr('data-name');
        var Role = $(this).attr('data-role');
        $('#spnNotesProfileId').html(ProfileId);
        $('#spnProfileType').html(ProfileType);
        $('#spnNotesProfileName').html(Name);
        $('#spnNotesTimeAndRole').html(GetCurrentTime() + '&nbsp;IST' + '&nbsp;<b class="col-green">' + Role + ' </b>');
        ns_Notes.Clear();
        ns_Notes.DisableControl();
        ns_Notes.GetNotes(ProfileId, ProfileType, 0, 0, 'POP');
    });
    $(document).on('keypress', '#txtNotesDesc', function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            $('#btnNotesSend').click();
        }
    });
    $(document).on('click', '#btnNotesSend', function () {
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        ns_Notes.InsertNotes(ProfileId, ProfileType, 'N', 0, 0, 'POP');
    });
    $(document).on('change', '#ddlNotesRemindMe', function () {
        ($('#ddlNotesRemindMe').val() == 'Custom' || $('#ddlNotesRemindMe').val() == '') ? $('#txtNoteOnDate').prop('disabled', true) : $('#txtNoteOnDate').prop('disabled', false);
        ns_Notes.NotesStringPattern();
    });
    $(document).on('click', '#btnAddNotes', function () {
        $('#btnNotesSend').click();
    });
    $(document).on('click', '#ChkAddTask', function () {
        $('#ChkAddTask').prop('checked') ? ns_Notes.EnableControl() : ns_Notes.DisableControl();
    });
    $(document).on('change', '#ddlNotesReason', function () {
        $('#ddlNotesReason').val() == 'Callback' ? (ns_Notes.EnableControl(), $('#ChkAddTask').prop('checked', true)) : (ns_Notes.DisableControl(), $('#ChkAddTask').prop('checked', false));
        ns_Notes.NotesStringPattern();
    });
    $(document).on('click', '#btnCloseNotes', function () {
        ns_Notes.Clear();
        ns_Notes.DisableControl();
    });
    $(document).on('click', '.btnEditNotes', function () {
        var NoteId = this.id.split('-')[1];
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        var Notes = $('#spnNotesDesc-' + NoteId).html();
        $('#btnNotesSend').attr('data-id', NoteId);
        $('#txtNotesDesc').val(Notes);
        $('#ModalNotes').modal('show');
        ns_Notes.DisableControl();
        ns_Notes.GetNotes(ProfileId, ProfileType, 0, 0, 'POP');
    });
    $(document).on('click', '.btnDeleteNotes', function () {
        var Status = ($('#btnNoteActive').hasClass('active') ? ($('#btnNoteActive').attr('data-status')) : ($('#btnNotesDelete').attr('data-status')));
        var Msg = (Status == 1 ? 'permanent delete' : 'delete');
        var NoteId = this.id.split('-')[1];
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        if (confirm("Are you sure you want to " + Msg + " this note ?")) {
            ns_Notes.ChangeNoteStatus(NoteId, ProfileId, ProfileType, 0, Status, 'POP');
        }
        else return false;
    });
    $(document).on('click', '.pop', function () {
        $('.imagepreview').attr('src', $(this).find('img').attr('src'));
        $('#imagemodal').modal('show');
    });
    $(document).on('change', '#txtNoteOnDate', function () {
        ns_Notes.NotesStringPattern();
    });
    $(document).on('change', '#txtNoteOnTime', function () {
        ns_Notes.NotesStringPattern();
    });
    $(document).on('change', '#txtNoteUtilDate', function () {
        ns_Notes.NotesStringPattern();
    });
    $(document).on('change', '#txtNoteUtilTime', function () {
        ns_Notes.NotesStringPattern();
    });
    $(document).on('click', '.btnNoteStatus', function () {
        var status = ($('#btnNoteActive').hasClass('active') ? ($('#btnNoteActive').attr('data-status')) : ($('#btnNotesDelete').attr('data-status')));
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        ns_Notes.GetNotes(ProfileId, ProfileType, 0, status, 'LIST');
    });
    $(document).on('click', '#btnCreateNewNotes', function () {
        var ProfileId = $('#btnCreateNewNotes').attr('data-id');
        var ProfileType = $('#spnProfileType').html();
        ns_Notes.Clear();
        ns_Notes.DisableControl();
        ns_Notes.GetNotes(ProfileId, ProfileType, 0, 0, 'POP');
    });
    $(document).on('click', '.ulNotes', function () {
        var Status = ($('#btnNoteActive').hasClass('active') ? ($('#btnNoteActive').attr('data-status')) : ($('#btnNotesDelete').attr('data-status')));
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        ns_Notes.GetNotes(ProfileId, ProfileType, 0, Status, 'LIST');
    });
    $(document).on('click', '#btnRefreshShortNotes', function () {
        var ProfileId = $('#spnNotesProfileId').html();
        var ProfileType = $('#spnProfileType').html();
        ns_Notes.GetNotes(ProfileId, ProfileType, 2, 0, 'SHORTNOTES');
    });

    //**********************(Rota)**********************
    //Custome Role 
    $(document).on("click", ".ClsCustomRole", function () {
        var action = $(this).attr('data-action');
        if (action == 'insertupdate') {
            ns_rota.InsertUpdateCustomeRole();
        }
        else if (action == 'edit') {
            var id = this.id.split('-')[1];
            $('#btnCustomRole').attr('data-id', id);
            $('#btnCustomRole').html('Update');
            ns_rota.GetCustomeRoleDetails();
        }
        else if (action == 'changestatus') {
            var id = this.id.split('-')[1];
            var status = $('#Status-' + id).attr('data-status') == 1 ? '0' : '1';
            //if (confirm("Are you sure you want to " + (status == 1 ? 'Activate' : 'Inactive') + " this role ?")) {
            ns_rota.ChangeStatusCustomRole(id, status, 'ROLE_CHANGE_STATUS');
            //}
        }
        else if (action == 'delete') {
            var id = this.id.split('-')[1];
            var status = $('#Status-' + id).attr('data-status');
            var total_jobs = $(this).attr('data-total').split('-')[0];
            var total_shift = $(this).attr('data-total').split('-')[1];
            if (status == 0) {
                if (confirm("Are you sure you want to delete this role ?")) {
                    if (total_jobs == 0) {
                        if (total_shift == 0) {
                            ns_rota.ChangeStatusCustomRole(id, '1', 'ROLE_DELETE');
                        }
                        else
                            ShowAlertMessage("Message", "Sorry ! It cannot be removed because it has <b>" + total_shift + "</b> shift(s).", "A");
                    }
                    else
                        ShowAlertMessage("Message", "Sorry ! It cannot be removed because it has <b>" + total_jobs + "</b> job(s).", "A");

                }
            }
            else
                ShowAlertMessage("Message", "Active role can not be deleted.", "A");
        }
        else if (action == 'refresh') {
            $('#txtfilterSearch').val('');
            ns_rota.ClearRoleCtr();
            ns_rota.GetRolesList();

        }
        else if (action == 'openmodal') {
            ns_rota.ClearRoleCtr();
            //ns_rota.getUniversalRoles('#ddlRoleCategory');
        }
    });
    $(document).on("click", ".btnSearchCustomRole", function () {
        if ($('#txtfilterSearch').val().trim() == '') {
            ShowAlertMessage("Message", "Enter role/alias", "A");        
            $('#txtfilterSearch').focus();
            return false;
        }
        else {
            ns_rota.GetRolesList();
        }
    });
    $(".btnCancelCustomeRole").click(function () {
        $('#ddlfilterrole').val('');
        $('#txtfilterSearch').val('');
        ns_rota.GetRolesList();
    });
    $(document).on('click', ".ClslblMaster", function () {
        var action = $(this).attr('data-action');
        if (action == 'radio') {
            $('.ClslblMaster').prop('checked', false);
            this.checked = true;
            var chkval = $('#' + this.id).val();
            $('#txtLabelColorCode').val(chkval);
            $('.txtLabelColorCode2').val(chkval);
        }
    });




    //Shift Time
    $(document).on("click", ".ClsRotaShiftTimming", function () {

        var action = $(this).attr('data-action');
      
        if (action == 'insertupdate') {
            ns_rota.InsertUpdateShiftTimming();
        }
        else if (action == 'edit') {
            var id = this.id.split('-')[1];
            $('#btnRotaShiftTimming').attr('data-id', id);
            $('#btnRotaShiftTimming').html('Update');
            ns_rota.GetShiftTimmingDetail();
        }
        else if (action == 'refresh') {
            ns_rota.ShiftTimmingClear();
            ns_rota.GetShiftTimmingList();
        }
        else if (action == 'openmodal') {
            ns_rota.ShiftTimmingClear();
            /*    ns_rota.FillDropdownWithCustomRoles('#ddlRoleCustom');*/
            ns_rota.FillDropdownWithCustomRoles('#ddlRoleCustom');
            ns_roleMaster.GetEmployeeRoles('.clsRoleList');
            DatePairFuction();
        }
        else if (action == 'changestatus') {
            var id = this.id.split('-')[1];
            var status = $('#Status-' + id).attr('data-status') == 1 ? '0' : '1';
           /* if (confirm("Are you sure you want to " + (status == 1 ? 'Activate' : 'Inactive') + " this shift ?")) {*/
                ns_rota.ChangeStatusShiftTime(id, status, 'SHIFT_CHANGE_STATUS');
          /*  }*/
        }
        else if (action == 'delete') {
            var id = this.id.split('-')[1];
            var status = $('#Status-' + id).attr('data-status');
            if (status == 0) {
                if (confirm("Are you sure you want to delete this shift ?")) {
                    ns_rota.ChangeStatusShiftTime(id, '1', 'SHIFT_DELETE');
                }
            }
            else
                ShowAlertMessage("Message", "Active shift can not be deleted.", "A");
        }
    });



    $(document).on("click", ".btnSearchShiftTimming", function () {
        //if ($('#txtfilterSearch').val().trim() == '') {
        //    ShowAlertMessage("Message", "Enter shift name", "A");
        //    $('#txtfilterSearch').focus();
        //    return false;
        //}
        //else {
            ns_rota.GetShiftTimmingList();
        /*}*/
    });
   
    $(".btnCancelShiftTimming").click(function () {
        $('#ddlfilterrole').val('');
        $('#txtfilterSearch').val('');
        ns_rota.GetShiftTimmingList();
    });

    //Group 
    $(document).on("click", ".ClsGroupMaster", function () {
        var action = $(this).attr('data-action');
        if (action == 'openmodal') {
            $("#btnGroupMaster").attr('data-id', "0");
            $("#txtGroupName").val('');
        }
        else if (action == 'insertupdate') {
            ns_rota.AddUpdateGroup();
        }
        else if (action == 'edit') {
            var id = this.id.split('-')[1];
            $("#btnGroupMaster").html('Update');
            ns_rota.GetGroupDetails(id);
        }
        else if (action == 'delete') {
            var id = this.id.split('-')[1];
            if (confirm("Are you sure you want to delete this group ?")) {
                ns_rota.DeleteGroup(id);
            }
        }
        else if (action == 'refresh') {
            $("#btnGroupMaster").attr('data-id', "0");
            $("#txtGroupName").val('');
            $("#txtfilterSearch").val('');
            ns_rota.GetGroupList();
        }
    });
    $(".btnSearchGroupMaster").click(function () {
        ns_rota.GetGroupList();
    });
    $(".btnSearchGroupMasterCancel").click(function () {
        $('#txtfilterSearch').val('');
        ns_rota.GetGroupList();
    });

    //Employer Profile

    $(document).on('click', '#btnEmpProfileFindAddress', function () {
        var postcode = $(".txtPostcode").val();
        var townid = $('#txtEmpProfileCity');
        var countyid = $('#txtEmpProfileCouunty');
        var ddladdress = $("#selectList2");
        if (postcode == '') {
            $(".txtPostcode").focus()
            ShowAlertMessage("Message", "Enter Postcode", "A");
            return false;
        }
        else
            AddressFinder.Finder(postcode, townid, countyid, ddladdress);
    });

    $(document).on("click", "#btnRefreshLocation", function () {
        ns_employer.GetProfileDetails('');
    });
    $(document).on("click", ".ClsEmpProfile", function () {
        var action = $(this).attr('data-action');
        if (action == 'add') {
            $('#btnProfileAddUpdate').html('Save');
            ns_employer.ProfileLocationClear();
            ns_employer.BindCandidateAsEmployer('ddlContactPerson', '', action);
        }
        else if (action == 'edit') {
            var locationid = this.id.split('-')[1];
            $('#btnProfileAddUpdate').attr('data-location-id', locationid);
            $('#btnProfileAddUpdate').html('Update');
            ns_employer.GetProfileLocation(locationid);
        }
        else if (action == 'insertupdate') {
            ns_employer.InsertUpdateProfile('Location');
        }
        else if (action == 'paymentinfo') {
            ns_employer.InsertUpdateProfile('PaymentInfo');
        }
        else if (action == 'SETDEFAULTLOCATION') {
            var Locationid = this.id.split('-')[1];
            if (confirm("Are you sure you want to set this location as default ?")) {
                ns_employer.InsertUpdateProfile(action + '#' + Locationid + '#');
            }
        }
        else if (action == 'EMP') {
            var empname = $('#btnEditEmpProfile').attr('data-emp-name');
            var empdisplayname = $('#btnEditEmpProfile').attr('data-emp-display-name');
            var mobile = $('#btnEditEmpProfile').attr('data-mobile');
            var email = $('#btnEditEmpProfile').attr('data-email');
            $('#btnUpdateCndEmpProfile').attr('data-action', action + 'ProfileUpdate');
            $('#txtProMobile').val(mobile);
            $('#txtProEmail').val(email);
            $('#txtEmpName').val(empname);
            $('#txtEmpDisplayName').val(empdisplayname);
            $('#txtFirstName').val('');
            $('#txtLastName').val('');
            $('.clsempname').show();
            $('.clscndname').hide();
        }
        else if (action == 'CND') {
            var firstname = $('#btnEditCndProfile').attr('data-first-name');
            var lastname = $('#btnEditCndProfile').attr('data-last-name');
            var cndmobile = $('#btnEditCndProfile').attr('data-mobile');
            var cndemail = $('#btnEditCndProfile').attr('data-email');
            $('#btnUpdateCndEmpProfile').attr('data-action', action + 'ProfileUpdate');
            $('#txtFirstName').val(firstname);
            $('#txtLastName').val(lastname);
            $('#txtProMobile').val(cndmobile);
            $('#txtProEmail').val(cndemail);
            $('#txtEmpName').val('');
            $('#txtEmpDisplayName').val('');
            $('.clsempname').hide();
            $('.clscndname').show();
        }
        else if (action == 'EMPProfileUpdate') {
            ns_employer.InsertUpdateProfile('BasicProfile#EMP');
        }
        else if (action == 'CNDProfileUpdate') {
            ns_employer.InsertUpdateProfile('BasicProfile#CND');
        }
        else if (action == 'OpenModalPaymentInfo') {
            var pension = $('#btnEditPaymentInfo').attr('data-pension');
            var fastpay = $('#btnEditPaymentInfo').attr('data-fast_pay');
            var paymode = $('#btnEditPaymentInfo').attr('data-pay_mode');
            var vatreg = $('#btnEditPaymentInfo').attr('data-vat_reg');
            var vatnumber = $('#btnEditPaymentInfo').attr('data-vat_number');
            pension == "1" ? $('#rbtnPensionY').prop('checked', true) : $('#rbtnPensionN').prop('checked', true);
            fastpay == "1" ? $('#rbtnFastPayY').prop('checked', true) : $('#rbtnFastPayN').prop('checked', true);
            paymode == "1" ? $('#rbtnPayModeY').prop('checked', true) : $('#rbtnPayModeN').prop('checked', true);
            vatreg == "1" ? $('#rbtnVatRegY').prop('checked', true) : $('#rbtnVatRegN').prop('checked', true);
            vatreg == "1" ? $('#txtVatNumber').show() : $('#txtVatNumber').hide();
            $('#txtVatNumber').val(vatnumber);
        }
        else if (action == 'CHANGE_LOCATION_STATUS') {
            var Locationid = this.id.split('-')[1];
            var status = $('#Status-' + Locationid).attr('data-status');
            var defaultstatus = $('#Status-' + Locationid).attr('data-default-status');
            status = status == 0 ? '1' : '0';
            if (defaultstatus == 1) {
                ShowAlertMessage("Message", 'Status can not be changed because this location is default ?', "A");
                return false;
            }
            else {
             /*   if (confirm("Are you sure you want to " + (status == 1 ? 'Active' : 'Inactive') + " this location ?")) {*/
                    ns_employer.InsertUpdateProfile(action + '#' + Locationid + '#' + status);
              /*  }*/
            }
        }
        else if (action == 'DELETE_LOCATION') {
            var Locationid = this.id.split('-')[1];
            var defaultstatus = $('#btnDel-' + Locationid).attr('data-default-status');
            var status = $('#Status-' + Locationid).attr('data-status');
            if (defaultstatus == 1 || status == 1) {
                ShowAlertMessage("Message", 'Active or default location can not be deleted', "A");
                return false;
            }
            else {
                if (confirm("Are you sure you want to delete this location ?")) {
                    ns_employer.InsertUpdateProfile(action + '#' + Locationid + '#' + '1');
                }
            }
        }

    });
    $(document).on("click", ".Clsbtn", function () {
        var action = $(this).attr('data-action');
        if (action == 'Parking') {
            var type = $(this).attr('data-type');
            if (type == 'available') {
                $('#btnAvailable').addClass('btn-primary').removeClass('btn-outline-primary').attr('data-status', '1');
                $('#btnNA').addClass('btn-outline-primary').removeClass('btn-primary').attr('data-status', '0');
            }
            else {
                $('#btnNA').addClass('btn-primary').removeClass('btn-outline-primary').attr('data-status', '1');;
                $('#btnAvailable').addClass('btn-outline-primary').removeClass('btn-primary').attr('data-status', '0');;
            }
        }
        else if (action == 'vat') {
            if ($('#rbtnVatRegY').prop('checked') == true) {
                $('#txtVatNumber').show('slow');
                $('#txtVatNumber').val('');
            }
            else {
                $('#txtVatNumber').hide('slow');;
                $('#txtVatNumber').val('');
            }
        }
        else {
            var type = $(this).attr('data-type');
            if (type == 'required') {
                $('#btnRequired').addClass('btn-primary').removeClass('btn-outline-primary').attr('data-status', '1');
                $('#btnNot').addClass('btn-outline-primary').removeClass('btn-primary').attr('data-status', '0');
            }
            else {
                $('#btnNot').addClass('btn-primary').removeClass('btn-outline-primary').attr('data-status', '1');;
                $('#btnRequired').addClass('btn-outline-primary').removeClass('btn-primary').attr('data-status', '0');;
            }
        }
    });
    $(document).on("change", "#ddlContactPerson", function () {
        var mobile = '', Email = '';
        if ($('#ddlContactPerson').val() > 0) {
            mobile = $('#ddlContactPerson option:selected').attr('data-mobile');
            Email = $('#ddlContactPerson option:selected').attr('data-email');
            $('#txtContactPersonEmail').val(Email);
            $('#txtContactPersonMobile').val(mobile);
            $('.divcontactperson').show();

        }
        else {
            $('#txtContactPersonEmail').val(Email);
            $('#txtContactPersonMobile').val(mobile);
            $('.divcontactperson').hide();
        }
    });
    $(document).on('change', '#selectList2', function () {
        var address = $(this).val();
        if (address == "") {
            $(".divaddress2").hide();
            $("#txtaddressline2").val('');
        }
        else if (address == "other") {
            $(".divaddress2").show();
            $("#txtaddressline2").val('');
        }
        else {
            $(".divaddress2").show();
            $("#txtaddressline2").val(address);
        }
    });
    $(document).on('click', '#btnPasswordUpdateEmployer', function () {
        ns_employer.update_password();
    });
    $(document).on('click', '#btnCancelPasswordUpdate', function () {
        $('#txtCurrentPassword').val('');
        $('#txtNewPassword').val('');
        $('#txtConfirmPassword').val('');
    });

    //*********************************************Employer's Candidate ************************************************************
    $(".numeric").attr('maxlength', '11')

    $(document).on('click', "#btnAddNewCnd", function () {
     
        $("#ddlCndType").val('P');
        $("#ddlEmpTitle").val('0');
        $("#txtCndFirstName").val('');
        $("#txtCndLastName").val('');
        $("#txtCndEmailId").val('');
        $("#txtCndMobileNumber").val('');
        $("#txtCndWeeklyHours").val('');
        $("#txtCndSalary").val('');
        $("#ddlCndJobRole").val('0');
        $("#txtCndJobTitle").val('');
        $("#s2id_ddlCndLocation").val('');
        
        $("#ddlCndLocation").val('');
        $('#divEmployerAgency').hide();
        ns_employee_template.bindDropdowns("dro=der-dl");     
      
    });

    
    $(document).on('change', "#ddlCndType", function () {     
        var type = $(this).val();
        if (type == 'A') {
            /* ns_candidate.Bind_Parent();*/
            jQuery("#txtCndMobileNumber").val('');
            ns_candidate.Reset();
            $('#divEmployerlocations').hide();
            $('#divEmployerAgency').show('show');
            ns_employee.bindAgency("#ddlAgencies");
            ////ns_employee.Get_JobRole_Location('', '#ddlRole');
            ////$('#divInternalEmployee').hide();
            ////$('#divAgencyEmployee').show('slow');
        }
        else {
            $("#ddlEmpTitle").val('0');       
            $("#txtCndFirstName").val('');
            $("#txtCndLastName").val('');
            $("#txtCndEmailId").val('');
            $("#txtCndMobileNumber").val('');
            $("#txtCndWeeklyHours").val('');
            $("#txtCndSalary").val('');
            $("#ddlCndJobRole").val('0');
            $("#txtCndJobTitle").val('');
            $("#ddlCndLocation").val('');
            $('#divEmployerAgency').hide();
            $('#divEmployerlocations').show();
            //$('#divAgencyEmployee').hide();
            //$('#divInternalEmployee').show('slow');
        }
    });


   
    $(document).on('click', "#btnNewEmpSubmit", function (evt) {
      /*  ns_employee.add('Personal-Info');*/
        ns_employee.add('signup',evt);
    });
    $(document).on('click', "#btnNewEmpClose", function () {
        $('#add_internal').modal('hide');
        $(".modal-backdrop").css('display', 'none');
    });
    $(document).on('click', "#btnFindContactsAddress", function () {
        var postcode = $("#txtContactsPostCode").val();
        if (postcode.length == 0) {
            $("#txtContactsPostCode").focus();
            ShowAlertMessage("Message", "Please enter postcode !", "A");
            return false;
        }
        AddressFinder.Finder(postcode, "#txtContactsCity", "#txtContactsCounty", "#ddlContactsAddressList");
        $('.cnd-addnew-contact-ddl-addresslist').css('display', '');

    });
    $(document).on('click', ".btn-update-terms", function (evt) {
        var action = $(this).attr('data-action');
        if (action.toUpperCase() == 'BANK-INFO') {
            var id = $(this).attr('data-id');
            var action = $(this).attr('data-req');
           
            ns_employee.AddUpdateBankDetail(id, action);
        }
        if (action.toUpperCase() == 'PENSION-INFO') {
            var id = $(this).attr('data-id');
            var action = $(this).attr('data-req');
            ns_candidate.AddUpdateProfile('PENSION', action);
            //ns_employee.AddUpdateBankDetail(id, action);
        }
        else {
            ns_employee.update(action,evt);
        }
    });
    $(document).on('keyup change', "#txtEmployeeStartDate", function () {
        $('#txtPatternStartDate').val($(this).val());
    });
    $(document).on('click', "#btnUpdateProfileInfo", function (evt) {
        ns_employee.update('Personal-Info',evt);
    });
    //$(document).on('click', "#btnUpdateSalaryTerms", function () {
    //    ns_employee.update('Salary-Terms');
    //});
    $(document).on('click', "#btnUpdateSensitiveTerms", function (evt) {
        ns_employee.update('Sensitive-Terms',evt);
    });
    $(document).on('click', "#btnUpdateTerminationTerms", function (evt) {
        ns_employee.update('Termination-Terms',evt);
    });


    $(document).on('click', "#btnAddContacts", function (evt) {
        ns_employee.add('Contacts',evt);
    });
    $(document).on('click', "#btnUpdateWorkSchedule", function (evt) {
        ns_employee.update('Work-Schedule',evt);
    });
    $(document).on('click', "#btnAbsenceAdd", function (evt) {
        ns_employee.add('Absence',evt);
    });
    $(document).on('click', "#txtchangepassempcnd", function (evt) {
        ns_employee.add('Password',evt);
    });
    $(document).on('click', "#btnContactsFindAddress", function () {
        var postcode = $("#txtEditProfilePostCode").val();
        AddressFinder.Finder(postcode, "#txtContactsCity", "#txtContactsCounty", "#ddlContactsAddressList");
    });
    $(document).on('click', "#btnCancelProfileInfo", function () {
        $('.disply_row').hide(0);
        $('.disply_none_row').show(500);
    });
    $(document).on('change', "#ddlEditProfileAddressList", function () {
        $("#txtEditProfileAddressLine1").val($(this).val());
    });
    $(document).on('change', "#ddlContactsAddressList", function () {
        $("#txtContactsAddressLine1").val($(this).val());
    });
    $(document).on('click', "#btnCndProfileAbsenceCountRefresh", function () {
        ns_employee.get('Absence-Count-Refresh');
    });


    $(document).on('click', ".edit-personal-info", function () {
        $('.disply_row').show(500);
        $('.disply_none_row').hide(0);
    });
    $(document).on('click', ".view-personal-info", function () {
        $('.disply_row').hide(0);
        $('.disply_none_row').show(500);
    });
    $(document).on('change', ".ddl-contacts-addresslist", function () {
        var id = $(this).attr('data-val');
        $("#txtContactsAddressLine1" + id).val($(this).val());
    });
    $(document).on('change', ".ddl-profile-addresslist", function () {
        $("#txtContactsAddressLine1PI").val($(this).val());
    });
    $(document).on('click', ".update-contacts-info", function (evt) {
        dynamic_id = $(this).attr('data-id');
        contacts_update_id = $(this).attr('data-val');       
        ns_employee.update('Contacts',evt);
    });
    $(document).on('click', ".contacts-list-header", function () {
        dynamic_id = $(this).attr('data-id');
        if (jQuery('#collapseOne' + dynamic_id).is(":visible") == false) {
            jQuery('#collapseOne' + dynamic_id).show();
        }
        else {
            jQuery('#collapseOne' + dynamic_id).hide();
        }

        $(document).on('click', ".contacts-edit-click" + dynamic_id, function () {
            var evt_hide = $(this).data('hide');
            var evt_show = $(this).data('show');
            if (evt_hide != "") { $(evt_hide).hide(); }
            if (evt_show != "") { $(evt_show).show(); }
        });
    });
    $(document).on('click', ".add-contact-cross", function () {
        $('.addContactForm').hide(0);
        $('.contact-new').show(500)
    });
    $(document).on('click', ".contact-new", function () {
        $('.clearText').val('');
        $('.addContactForm').show(500);
        $(this).hide(0);

        $("#txtContactsFirstName").val('');
        $("#txtContactsLastName").val('');
        $("#txtContactsMobileNumber").val('');
        $("#txtContactsHomeNumber").val('');
        $('#chkContactsIsPrimary').prop('checked', false);
        $("#txtContactsWorkNumber").val('');
        $("#ddlContactsRelationship").val('');
        $("#txtContactsPostCode").val('');
        $("#txtContactsAddressLine1").val('');
        $("#txtContactsAddressLine2").val('');
        $("#txtContactsCity").val('');
        $("#txtContactsCounty").val('');
    });

    //Agenncy Employee ADD/UPDATE Event
    $(document).on("click", ".ClsCndProfile", function () {
        var block = $(this).attr('data-block');
        var action = $(this).attr('data-action');
        if (block == 'BASIC_INFO' || block == 'PERSONAL_STATEMENT' || block == "PENSION" || block == "ADDRESS") {
            var id = $(this).attr('data-id');
            //ns_candidate.AddUpdateProfile(block + '-' + id, action);
            ns_candidate.AddUpdateProfile(block, action);
        }
        else if (block == "DEFAULT_STATUS" || block == "BANK_DEFAULT") {
            var id = $(this).attr('data-id');
            if (confirm("Are you sure you want to set this " + (block == "BANK_DEFAULT" ? 'A/c' : 'location') + " as default ?"))
                ns_candidate.AddUpdateProfile(block + '-' + id, action);
        }

        else if (block == "SOCIAL_PROFILE" || block == "WORK_HISTORY" || block == "QUALIFICATION" || block == "ADDITIONAL_EXP" || block == "REFRENCE") {
            var id = action == 'UPDATE' ? $(this).attr('data-id') : '0';
            ns_candidate.AddUpdateProfile(block + '-' + id, action);
        }
        else if (block == "SUBSCRIPTION") {
            if (!$('#chktagree').prop('checked')) {
                $('#chktagree').focus();
                ShowAlertMessage("Message", "Kindly indicate that you have read and agree to the Terms & Conditions", "A");
            }
            else if (!$('#chkpagree').prop('checked')) {
                $('#chkpagree').focus();
                ShowAlertMessage("Message", "Kindly indicate that you have read and agree to the Privacy Policy", "A");
            }
            else
                ns_candidate.AddUpdateProfile(block, action);
        }
        else if (block == "EXP_FILL_CONTROL") {
            $('#txtExpDetail').Editor();
            if (action == 'UPDATE') {
                $('#txtCategory').val($(this).attr('data-category'));
                $('.Editor-editor').html($(this).attr('data-cat-detail'));
                $('#btnSaveAddExp').html('Update').attr('data-action', 'UPDATE').attr('data-id', $(this).attr('data-id'));
            }
            else {
                $('#txtCategory').val('');
                $('.Editor-editor').html('');
                $('#btnSaveAddExp').html('Save').attr('data-action', 'INSERT').attr('data-id', '0');
            }
        }
        else if (block == "ADDRESS_FILL_CONTROL") {
            if (action == 'UPDATE') {
                $('#txtPostCode').val($(this).attr('data-postcode'));
                $('#txtaddressline2').val($(this).attr('data-address'));
                $('#txtCndCity').val($(this).attr('data-city'));
                $('#txtCndCounty').val($(this).attr('data-county'));
                $('.divaddress2').show();
                $('#spnAddressHeading').html('-<b>Edit Contact Address </b>-');
                $('#btnAddUpdateAddress').html('Update').attr('data-action', 'UPDATE').attr('data-id', $(this).attr('data-id'));
                $('#btnAddUpdateAddress').attr('data-action', 'UPDATE');
                $('#btnAddUpdateAddress').attr('data-id', $(this).attr('data-id'));
            }
            else {
                $('#txtPostCode, #txtaddressline2, #txtCndCity, #txtCndCounty').val('');
                $('.divaddress2').hide();
                $('#selectList2').html('<option value="">select address</option>');
                $('.divselectAddres2').hide();
                $('#spnAddressHeading').html('-<b>Add Contact Address </b>-');
                $('#btnAddUpdateAddress').html('Save');
                $('#btnAddUpdateAddress').attr('data-action', 'INSERT');
                $('#btnAddUpdateAddress').attr('data-id', '0');
            }
        }
        else if (block == "PREFRENCE" || block == "ITSYS" || block == "LANGUAGE") {
            ns_candidate.AddUpdateProfile(block, action);
        }
        else if (block == "CHKPREFRENCE" || block == "CHKLANGUAGE" || block == "CHKITSYS") {
            var ids = $(this).attr('data-ids');
            var txt = block == "CHKPREFRENCE" ? 'chkpref' : block == "CHKLANGUAGE" ? 'ChkLang' : block == "CHKITSYS" ? 'ChkIT' : '';
            for (var i = 0; i < ids.split(',').length; i++) {
                $('#' + txt + '-' + ids.split(',')[i]).prop('checked', true);
            }
        }
        else if (block == "DEL_SOCIAL_PRO" || block == "DEL_WORK_HIST" || block == "DEL_QUALIFICATION" || block == "DEL_ADD_EXP" || block == "DEL_ADDRESS" || block == "DEL_REFRENCE") {
            var id = $(this).attr('data-id');
            var msg = block == "DEL_SOCIAL_PRO" ? 'Social Profile' : block == "DEL_WORK_HIST" ? 'Work History' : block == "DEL_QUALIFICATION" ? 'Qualification' : block == "DEL_ADD_EXP" ? 'Experienced' : block == "DEL_ADDRESS" ? 'address' : block == "DEL_REFRENCE" ? 'REFRENCE' : '';
            if (confirm("Are you sure you want to delete this " + msg + "?"))
                ns_candidate.AddUpdateProfile(block + '-' + id, action);
        }
        else if (block == "BANK_DETAILS") {
            var id = $(this).attr('data-id');
            ns_candidate.AddUpdateBankDetail(id, action);
        }
        else if (block == "DEL_BANK_DETAIL") {
            var id = $(this).attr('data-id');
            if ($('#btnBankdefault-' + id).attr('data-status') == 1) {
                ShowAlertMessage("Message", "Default A/c can not be deleted.", "A");
                return false;
            }
            if (confirm("Are you sure you want to delete this bank detail ?"))
                ns_candidate.AddUpdateProfile(block + '-' + id, action);
        }
    });
    $(document).on('click', '.clsViewcompanyCertification', function () {
        $('#modalviewCompanyCetificate').modal('show');
        var fileName = $(this).attr('data-file-name');
        $('#spanFileTitle').html('Registration Certificate');
        ns_candidate.viewRegcertificate(fileName);
    });

    $(document).on("click", "#btnCndProfileAddress", function () {
        var postcode = $("#txtPostCode").val();
        var townid = $('#txtCndCity');
        var countyid = $('#txtCndCounty');
        var ddladdress = $("#selectList2");
        if (postcode == '') {
            $("#txtPostCode").focus()
            ShowAlertMessage("Message", "Enter Postcode", "A");
            return false;
        }
        else
            AddressFinder.Finder(postcode, townid, countyid, ddladdress);
    });
    //END

    $(document).on('change', ".ddlLeaveFilter", function () {
        var leave_cat_id = $(this).val();
        if (leave_cat_id == 0) {
            $('.leavecat_item').show();
        }
        else {
            $('.leavecat_item').hide();
            $('#leavecat' + leave_cat_id).show();
        }
    });

    $(document).on('click', ".tab-personal-info", function () {
        ns_employee.get('Personal-Info');
    });

    //$(document).on('click', ".tab-terms", function () {
    //    $(".clearText").val('');
    //    cnd_profile_block = "Terms";
    //    ns_employee.get('Terms');
    //});

    $(document).on('click', ".tab-activity", function () {
        ns_employee.ActivityHistoryList();
    });
    $(document).on('click', ".tab-contacts", function () {
        ns_employee.get('Contacts');
    });
    $(document).on('click', ".tab-locations", function () {
        ns_employee.get('Locations');
    });
    $(document).on('click', ".tab-work-schedule", function () {
        ns_employee.get('Work-Schedule');
    });

    $(document).on('click', ".tab-compliance", function (evt) {
        ns_compliance.get('list', evt, '');
    });

   



    $(document).on('change', "#chkAllLocations", function () {
        if ($(this).prop('checked'))
            $('.chk-profile-cnd-location').prop('checked', true);
        else
            $('.chk-profile-cnd-location').prop('checked', false);
    });
    $(document).on('click', ".btnUpdateLocations", function (evt) {
        ns_employee.update('Locations',evt);
    });

    $(document).on("click", ".ClsSetDefaultLocation", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'SETDEFAULTLOCATIONCND') {
            var Locationid = this.id.split('-')[1];
            if (confirm("Are you sure you want to set this location as default ?")) {
                ns_employee.update(action, evt);
                // ns_employer.InsertUpdateProfile(action + '#' + Locationid + '#');
            }
        }
    });



    $(document).on('click', ".modalAddAbsence", function () {
        var leaveCat_id = $(this).attr('data-val');
        $('.clearText').val('');
        $('#ddlLeaveCategory_placeholder').val(leaveCat_id);
        $('#add_timeoff').modal();
        cnd_profile_block = 'absences';
    });
    $(document).on('click', "#btnModalAbsenceCancel", function () {
        $('#add_timeoff').hide(0);
    });
    $(document).on('keypress', ".txt-profile-absence-daterange", function (e) {
        if (e.which == 13) {
            if ($(this).val().length === 0) {
                $(this).focus();
                ShowAlertMessage("Message", "Please enter date !", "A");
                return false;
            }
            cnd_profile_absence_start_date = $("#txtCndProfileDateRange").val().split('-')[0].toString().trim();
            cnd_profile_absence_end_date = $("#txtCndProfileDateRange").val().split('-')[1].toString().trim();
            ns_employee.get('Absence-count');
        }
    });

    $(document).on('change', "#ddlEmployeeLocations", function () {
        emp_location_ids = $('#ddlEmployeeLocations').val();
        page_number = 0; page_size = 10;
        ns_employee.get('Profiles', '');
    });

    $(document).on('change', "#ddlEmployeeRoles", function () {
        emp_role_id = $('#ddlEmployeeRoles').val();
        page_number = 0; page_size = 10;
        ns_employee.get('Profiles', '');
    });

    $(document).on('click', "#btnSearchEmployees", function () {
        emp_search = $('#txtEmployeesname').val();
        page_number = 0; page_size = 10;
        ns_employee.get('Profiles', '');
    });


    $(document).on('click', "#btnExportEmployees", function () {
        ns_employee.get('ProfilesExport', '');
    });

    $(document).on('click', ".btnSearchEmployeesRefresh", function () {
        emp_location_ids = '', emp_role_id = '0', emp_search = '';

        $('#ddlEmployeeLocations').val('0');
        $('#ddlEmployeeRoles').val('0');
        $('#txtEmployeesname').val('');
        page_number = 0; page_size = 10;
        $('#tab_emp_all').click();
     
        $('.cnd-navigation-tabs a').removeClass('active');
        $('#tab_emp_all a').addClass('active');
        ns_employee.get('Profiles', '');
       
    });


    $(document).on('click', ".cnd-navigation-tabs", function () {
        cnd_sub_type = $(this).attr('data-get');
        page_number = 0; page_size = 10;
        ns_employee.get('Profiles', '');
    });

    $(document).on('click', ".loadmoreEmployees", function () {
        page_number = page_number + 10;
        ns_employee.get('Profiles', 'more');
    });

    


    $(document).on('change', "#modalAbsencerdoAbsenceFullDay", function () {
        if ($(this).prop('checked')) {
            $('#modalAbsencetxtAbsenceEndDate').removeAttr('disabled', 'disabled');
            $('#modalAbsencetxtAbsenceStartTime').hide(0);
            $('#modalAbsencetxtAbsenceEndTime').hide(0);
        }

    });
    $(document).on('change', "#modalAbsencerdoAbsencePartial", function () {
        if ($(this).prop('checked')) {
            $('#modalAbsencetxtAbsenceEndDate').attr('disabled', 'disabled');
            $('#modalAbsencetxtAbsenceStartTime').show(500);
            $('#modalAbsencetxtAbsenceEndTime').show(500);
        }

    });
    $(document).on('click', ".btn-add-absence", function (evt) {
        cnd_profile_action_from = $(this).attr('data-action-from');
        ns_employee.add('Absence',evt);
    });
    $(document).on('click', ".rdo-absence-type", function () {
        if ($(this).attr('data-absence-type').toUpperCase() == 'FULLDAY') {
            $("#txtAbsenceEndDate" + $(this).attr('data-val')).removeAttr('disabled', 'disabled');
            $('.absence-time' + $(this).attr('data-val')).css('display', 'none');
        }
        else {
            $("#txtAbsenceEndDate" + $(this).attr('data-val')).attr('disabled', 'disabled');
            $('.absence-time' + $(this).attr('data-val')).css('display', '');
        }
    });
    $(document).on('click', ".btn-update-absence", function (evt) {
        dynamic_id = $(this).attr('data-val');
        ns_employee.update('Absence',evt);
    });
    $(document).on('click', ".tab-absence", function () {
        ns_employee.get('All-Absences');
    });
    $(document).on('click', ".edit-absence", function () {
        dynamic_id = $(this).attr('data-val');
        absence_id = $(this).attr('data-type-id');
        if ($(this).attr('data-absence-type').toUpperCase() == 'FULLDAY') {
            $("#rdoAbsenceFullDay" + dynamic_id).prop('checked', 'checked');
            $('.absence-time' + dynamic_id).css('display', 'none')
        }
        else {
            $('.absence-time' + dynamic_id).css('display', '')
            $("#rdoAbsencePartial" + dynamic_id).prop('checked', 'checked');
        }
        jQuery(".ddlAbsenceType" + dynamic_id).val(dynamic_id);

        //cnd_profile_block = 'all-absences';
        var evt_hide = $(this).data('hide');
        var evt_show = $(this).data('show');
        if (evt_hide != "") { $(evt_hide).hide(); }
        if (evt_show != "") { $(evt_show).show(); }
    });
    $(document).on('click', ".cancel-absence", function () {
        var evt_hide = $(this).data('hide');
        var evt_show = $(this).data('show');
        if (evt_hide != "") { $(evt_hide).hide(); }
        if (evt_show != "") { $(evt_show).show(); }
    });




    $(document).on('click', ".profile-find-addresslist", function () {
        var postcode = $("#txtContactsPostCodePI").val();
        var cityId = "#txtContactsCityPI";
        var countyId = "#txtContactsCountyPI";
        var addressListId = "#ddlContactsAddressListPI";

        if (postcode.length == 0) {
            $("#txtContactsPostCodePI").focus();
            ShowAlertMessage("Message", "Please enter postcode !", "A");
            return false;
        }

        AddressFinder.Finder(postcode, cityId, countyId, addressListId);
        $('.profile-ddl-addresslist').css('display', '');
    });


    $(document).on('click', ".contacts-find-addresslist", function () {
        //this id is dynamically added with each control to make mutliple contacts control id unique
        var id = $(this).attr('data-val');
        var postcode = $("#txtContactsPostCode" + id).val();
        var cityId = "#txtContactsCity" + id;
        var countyId = "#txtContactsCounty" + id;
        var addressListId = "#ddlContactsAddressList" + id;

        if (postcode.length == 0) {
            $("#txtContactsPostCode" + id).focus();
            ShowAlertMessage("Message", "Please enter postcode !", "A");
            return false;
        }

        AddressFinder.Finder(postcode, cityId, countyId, addressListId);
        $('.cnd-contact-ddl-addresslist').css('display', '');
    });
    $(document).on('click', "#btnProfileFindAddress", function () {
        if ($("#txtEditProfilePostCode").val().length == 0) {
            $("#txtEditProfilePostCode").focus();
            ShowAlertMessage("Message", "Please enter postcode !", "A");
            return false;
        }
        var postcode = $("#txtEditProfilePostCode").val();
        AddressFinder.Finder(postcode, "#txtEditProfileCity", "#txtEditProfileCounty", "#ddlEditProfileAddressList");
        $(".cnd-ddl-addresslist").css('display', '');

    });
    $(document).on('click', ".cnd-location-counter", function () {
        bindLocationPopup = true;
        $('.profile-id').attr('data-id', $(this).attr('data-id'));
        ns_employee.get('Locations');
    });

    $(document).on('click', ".btn-cnd-profiles-view", function () {
        var request = $(this).attr('data-request');
        $('.profile-id').attr('data-id', $(this).attr('data-val'));     
        ns_employee.get('Personal-Info');
        $("#viewprofile").modal('show');
       // alert(request);
        if (request == 'compliance') {
            setTimeout(function () {           
                $(".tab-compliance").trigger("click");
            }, 2000);
        }

        if (request == 'terms') {
            setTimeout(function () {
                $(".tab-terms").trigger("click");
            }, 2000);
        }
        
    });
    
    $(document).on('click', ".btn-cnd-invite", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'invite') {
            var name = $(this).attr('data-name');
            var email = $(this).attr('data-email');
            var mobile = $(this).attr('data-mobile');
            var obj = {};
            obj.action = action;           
            obj.user_id = $(this).attr('data-cnd_id');
            obj.first_name = name;
            obj.email_id = email;
            obj.mobile = mobile;
            obj.company = $('#spanEmpname').html();
            obj.invitation_status = 1;
            var params = "[" + JSON.stringify(obj) + "]";           
            ns_employee.post(params, action, 'INVITE', evt);
        }
    });

    $(document).on('click', ".cnd-change-account-status", function (evt) {
        account_status = $(this).attr('data-account-status') == 'INACTIVE' ? 1 : 0;
        ns_employee.update('Account-Status',evt);
    });


    $(document).on('click', "#liPersonalInfo", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
    });
    $(document).on('click', "#liContacts", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-contacts").trigger("click");

    });
    $(document).on('click', "#liEmploymentTerms", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".clearText").val('');
        cnd_profile_block = "Terms";
        $(".tab-personal-info").trigger("click");
        $(".tab-terms").trigger("click");
    });
    $(document).on('click', "#liLocations", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-locations").trigger("click");
    });
    $(document).on('click', "#liWorkSchedule", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-work-schedule").trigger("click");
    });
    $(document).on('click', "#liAbsence", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-absence").trigger("click");
    });
    $(document).on('click', "#liAvailability", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-availability").trigger("click");
    });
    $(document).on('click', "#liTraining", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-training").trigger("click");

        $('#Trainings').empty().text('Comming Soon............');
    });
    $(document).on('click', "#liCompliance", function () {

        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-compliance").trigger("click");

    });
    $(document).on('click', "#liActivity", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-activity").trigger("click");
        $('#Personalactivity_tab').empty().text('Comming Soon.............');
    });
    $(document).on('click', "#liSetting", function () {
        $('.profile-id').attr('data-id', $(this).attr('data-val'));
        $(".tab-personal-info").trigger("click");
        $(".tab-setting").trigger("click");
        $('#Change_tab').empty().text('Comming Soon.............');
    });


    //Inbox (Messages)

    $(document).on('click', '.clsEmailSmsNotify', function () {
        var page_size = 10, page_number = 0;
        var action = $(this).attr('data-action');
        ns_Message.GetEmailSmsNotify(action, page_size, page_number);
    });
    $(document).on('click', '.clsMessage', function () {
        var id = $(this).attr('data-id');
        var type = $(this).attr('data-type');
        var action = $(this).attr('data-action');
        var strArry = [];

        if (action == 'UPDATE_VIEW_STATUS') {
            var view_status = $(this).attr('data-view-status');
            var sendto = $(this).attr('data-sent-to');
            var subject = $(this).attr('data-subject');
            var message = $(this).attr('data-message');
            $('#psentto').html(sendto);
            $('#psub').html(subject);
            $('#pmsg').html(message);
            if (view_status == 0) {
                var strArry = [];
                strArry.push({
                    srno: 1,
                    id: id,
                    type: type,
                    action: action
                });
                ns_Message.DeleteUpdateView(strArry);
            }
        }
        else if (action == 'DELETE') {
            strArry.push({
                srno: 1,
                id: id,
                type: type,
                action: action
            });
            if (strArry.length > 0) {
                if (confirm("Are you sure you want to delete this?"))
                    ns_Message.DeleteUpdateView(strArry);
            }
        }
        else if (action == 'DELETE_ALL') {
            var srno = 0;
            $(".ClkMsg:checked").each(function () {
                srno++;
                strArry.push({
                    srno: srno,
                    id: $(this).attr('data-id'),
                    type: $(this).attr('data-type'),
                    action: action
                });
            });
            if (strArry.length > 0) {
                action = action == 'DELETE_ALL' ? 'DELETE' : action;
                if (confirm("Are you sure you want to delete this ?"))
                    ns_Message.DeleteUpdateView(strArry);
            }
        }
        else if (action == 'READ' || action == 'FLAG') {
            var ids = '';
            $(".ClkMsg:checked").each(function () {
                srno++;
                strArry.push({
                    srno: srno,
                    id: $(this).attr('data-id'),
                    type: $(this).attr('data-type'),
                    action: action
                });
            });
            if (strArry.length > 0) {
                ns_Message.DeleteUpdateView(strArry);
            }
        }
        else if (action == 'REFRESH') {
            var page_size = 10, page_number = 0;
            ns_Message.GetEmailSmsNotify('EMAIL', page_size, page_number);
            $('#txtMsgSearch').val('');
            $('.clsMsgAct').removeClass('active');
            $('#btnMsgEmail').addClass('active');
            $('#chk-AllMsg').prop('checked', false);
            $('#divdelmsg').hide();
        }

    });
    $(document).on('input', '#txtMsgSearch', function () {
        var page_size = 10, page_number = 0;
        ns_Message.GetEmailSmsNotify('EMAIL', page_size, page_number);
    });
    $(document).on('click', ".all_slct, .ClkMsg", function () {
        if ($(this).is(":checked")) {
            $(".dvlabel").show();
        } else {
            $(".dvlabel").hide();
        }
    });
    $(document).on('click', ".all_slct", function () {
        $('.ClkMsg').prop('checked', this.checked);
    });

    //Feed back
    $(document).on('click', '.clsManageList', function () {
        var action = $(this).attr('data-action');
        if (action == 'ADDQUE') {
            call_tmpl_binder(null, '/Templates/feedback_tmpl.html', '#Feedback_Template', '#Feedback_Details_Placeholder');
        }
        else if (action == 'LIST') {
            ns_feedback.GetFeedbackFormList();
        }
        else if (action == 'EDIT') {
            var profiletype = $(this).attr('data-profile-type');
            var roleid = $(this).attr('data-role-id');
            $('#btnFeedBackFormList').removeClass('active');
            $('#btnAddNewFeedbkQuestion').addClass('active');
            $('.FeedbackDetails').show();
            $('.ManageFormList').hide();
            $('#ddlfeedProfileType').val(profiletype);
            ns_feedback.Bind_Parent_child('#ddlfeedRole', profiletype, action, roleid);
            ns_feedback.GetQuestionsInRole(roleid, profiletype);
        }
        else if (action == 'SUBMIT_COMMENT' || action == 'UPDATE_VIEW_STATUS') {
            var reqid = $(this).attr('data-req-id');
            ns_feedback.SubmitReceiverComment(reqid, action);
        }
        else if (action == 'REQ_RECEIVE') {
            ns_feedback.FeedbackReport(action);
            $('.rec_place').show();
            $('.rec_send').hide();
        }
        else if (action == 'REQ_SEND') {
            ns_feedback.FeedbackReport(action);
            $('.rec_place').hide();
            $('.rec_send').show();
        }
        else if (action == 'OPEN_REQUEST') {
            $($(this).attr('data-hide')).hide('slow');
            $($(this).attr('data-show')).show('slow');
        }
        else if (action == 'SEND_REQUEST') {
            ns_feedback.SendFeedbackRequest();
        }
        else if (action == "CANCEL_REQUEST") {
            $('#txtReqComment').val('');
            $('.req_commnt').hide('slow');
            $('.btnfeed_req').show('slow');
        }
        else if (action == "SEND_FEEDBACK") {
            ns_feedback.SendFeedback();
        }
        else if (action == "CANCEL_FEEDBACK") {
            $('.btnfeed_req').show();
            $('.fdr_place,.btnSub').hide();
        }
    });
});

//Pagination
//ns_Paging = { name: "Paging", options: { curPage: 1, totalPages: 0, totalRecords: 0, msg: "", rPPOptions: [10, 20, 30, 50, 100], rPP: 20, currentIndex: 0 }, _StrInfo: { strDisplay: "{0} to {1} of {2} items.", strFirstPage: "First Page", strLastPage: "Last Page", strNextPage: "Next Page", strPage: "Page {0} of {1}", strPrevPage: "Previous Page", strRefresh: "Refresh", strRpp: "Records per page:{0}" }, _Object: function (a, t) { var n = {}, e = []; return n.row = a, n.totalrecords = t, e.push(n), e }, _Refresh: function (a) { ns_Paging.options.rPP = $(a + " .ChgPgSize option:selected").text(), ns_Paging.options.curPage = 1, ns_Paging.options.totalPages = 0, ns_Paging.options.totalRecords = 0, ns_Paging.options.currentIndex = 0, this._NextPrev(1, a) }, _PrintInfo: function (a) { if (ns_Paging.options.totalRecords > 0) { var t = ns_Paging.options.rPP, n = ns_Paging.options.curPage, e = ns_Paging.options.totalRecords, s = (n - 1) * t, o = n * t; o > e && (o = e); var g = ns_Paging._StrInfo.strDisplay; g = (g = (g = g.replace("{0}", s + 1)).replace("{1}", o)).replace("{2}", e), $(a + " .pgmsg").html(g) } else $(a + "#pgmsg").html(""); $(a + " .spanTotalPages").html("Page " + ns_Paging.options.curPage + " of " + ns_Paging.options.totalPages) }, _GetRecords: function (a, t) { var n; rPP = $(a + " .ChgPgSize option:selected").text(); var e = JSON.stringify(t); $.each(JSON.parse(e), function (t, e) { $(a + " .tblRecords").html(e.row), e.count, n = e.totalrecords }), ns_Paging.options.currentIndex = (ns_Paging.options.curPage - 1) * ns_Paging.options.rPP, ns_Paging.options.totalRecords = n, ns_Paging._CalculateTotalPages(), ns_Paging._PrintInfo(a), this._NextPrev(ns_Paging.options.curPage, a) }, _createPager: function (a, t) { ns_Paging._GetRecords(a, t) }, _ChangePg: function (a, t) { "Next" == $(t).attr("data-type") ? ns_Paging.options.curPage++ : ns_Paging.options.curPage--, ns_Paging.options.currentIndex = (ns_Paging.options.curPage - 1) * ns_Paging.options.rPP, this._NextPrev(ns_Paging.options.curPage, a) }, _CalculateTotalPages: function () { ns_Paging.options.totalPages = Math.floor(ns_Paging.options.totalRecords / ns_Paging.options.rPP), ns_Paging.options.totalRecords % ns_Paging.options.rPP != 0 && ns_Paging.options.totalPages++ }, _getNavBar: function () { var a = $("<div>", { class: "paging-nav" }); return $(".paging-nav").html(""), $("<a class='btn btn-outline-primary pl-2 pr-2 ChgPg' data-type='Back' ><i class='ti ti-angle-left'></i>", { href: "#" }).appendTo(a), $("<a class='btn btn-outline-primary pl-2 ChgPg' data-type='Next' ><i class='ti ti-angle-right'></i>", { href: "#" }).appendTo(a), $("<select class='pager-select fnPGSize'><option value='10'>10</option><option value='20'>20</option><option value='30'>30</option><option value='50'>50</option><option value='100'>100</option>", {}).appendTo(a), a }, _NextPrev: function (a, t) { 1 == a ? ($(t + " .ChgPg[data-type=Back]").addClass("a-disabled"), $(t + " .ChgPg[data-type=Back]").removeClass("a-enabled")) : ($(t + " .ChgPg[data-type=Back]").addClass("a-enabled"), $(t + " .ChgPg[data-type=Back]").removeClass("a-disabled")), a == ns_Paging.options.totalPages ? ($(t + " .ChgPg[data-type=Next]").addClass("a-disabled"), $(t + " .ChgPg[data-type=Next]").removeClass("a-enabled")) : ($(t + " .ChgPg[data-type=Next]").addClass("a-enabled"), $(t + " .ChgPg[data-type=Next]").removeClass("a-disabled")) } };

ns_Paging = {
    name: 'Paging',
    options: {
        curPage: 1,
        totalPages: 0,
        totalRecords: 0,
        msg: "",
        rPPOptions: [10, 20, 30, 50, 100],
        rPP: 20,
        currentIndex: 0,
    },
    _StrInfo: {
        strDisplay: "Displaying {0} to {1} of {2} items.",
        strFirstPage: "First Page",
        strLastPage: "Last Page",
        strNextPage: "Next Page",
        strPage: "Page {0} of {1}",
        strPrevPage: "Previous Page",
        strRefresh: "Refresh",
        strRpp: "Records per page:{0}"
    },
    _Object: function (strVal, TotalRec) {
        var element = {}, obj = [];
        element.row = strVal;
        //element.count = RecordCount;
        element.totalrecords = TotalRec;
        obj.push(element);
        return obj;
    },
    _Refresh: function (datablock) {
        ns_Paging.options.rPP = $(datablock + ' .ChgPgSize option:selected').text();
        ns_Paging.options.curPage = 1;
        ns_Paging.options.totalPages = 0;
        ns_Paging.options.totalRecords = 0;
        ns_Paging.options.currentIndex = 0;
        this._NextPrev(1, datablock);
    },
    _PrintInfo: function (datablock) {
        if (ns_Paging.options.totalRecords > 0) {
            var rPP = ns_Paging.options.rPP;
            var curPage = ns_Paging.options.curPage;
            var totalRecords = ns_Paging.options.totalRecords;
            var begIndx = (curPage - 1) * rPP;
            var endIndx = curPage * rPP;
            if (endIndx > totalRecords) {
                endIndx = totalRecords
            }
            var strDisplay = ns_Paging._StrInfo.strDisplay;
            strDisplay = strDisplay.replace("{0}", begIndx + 1);
            strDisplay = strDisplay.replace("{1}", endIndx);
            strDisplay = strDisplay.replace("{2}", totalRecords);
            $(datablock + ' .pgmsg').html(strDisplay);
        }
        else
            $(datablock + '#pgmsg').html("");
        $(datablock + " .spanTotalPages").html("Page " + ns_Paging.options.curPage + " of " + ns_Paging.options.totalPages);
    },
    _GetRecords: function (datablock, dRows) {
        rPP = $(datablock + ' .ChgPgSize option:selected').text();
        var cin, trecords;
        var data = JSON.stringify(dRows);
        $.each(JSON.parse(data), function (key, value) {
            $(datablock + " .tblRecords").html(value.row);
            cin = value.count;
            trecords = value.totalrecords;
        });
        ns_Paging.options.currentIndex = (ns_Paging.options.curPage - 1) * ns_Paging.options.rPP;
        ns_Paging.options.totalRecords = trecords;
        ns_Paging._CalculateTotalPages();
        ns_Paging._PrintInfo(datablock);
        this._NextPrev(ns_Paging.options.curPage, datablock);
    },
    _createPager: function (Datablock, dRows) {
        //alert('Heeee ! ' + dRows);
        ns_Paging._GetRecords(Datablock, dRows);
    },
    _ChangePg: function (datablock, evt) {
        var Req = $(evt).attr('data-type');
        if (Req == "Next")
            ns_Paging.options.curPage++;
        else
            ns_Paging.options.curPage--;
        ns_Paging.options.currentIndex = (ns_Paging.options.curPage - 1) * ns_Paging.options.rPP;
        this._NextPrev(ns_Paging.options.curPage, datablock);
    },
    _CalculateTotalPages: function () {
        ns_Paging.options.totalPages = Math.floor(ns_Paging.options.totalRecords / ns_Paging.options.rPP);
        if (ns_Paging.options.totalRecords % ns_Paging.options.rPP != 0)
            ns_Paging.options.totalPages++;
    },
    _getNavBar: function () {
        var nav = $("<div>", { class: "paging-nav" });
        $('.paging-nav').html('');
        $("<a class='btn btn-outline-primary pl-2 pr-2 ChgPg' data-type='Back' ><i class='ti ti-angle-left'></i>", {
            href: "#",
        }).appendTo(nav),
            $("<a class='btn btn-outline-primary pl-2 ChgPg' data-type='Next' ><i class='ti ti-angle-right'></i>", {
                href: "#",
            }).appendTo(nav),
            $("<select class='pager-select fnPGSize'><option value='10'>10</option><option value='20'>20</option><option value='30'>30</option><option value='50'>50</option><option value='100'>100</option>", {
            }).appendTo(nav),
            { click: "pageClickHandler" }
        return nav;
    },
    _NextPrev: function (curPage, datablock) {
        if (curPage == 1) {
            $(datablock + ' .ChgPg[data-type=Back]').addClass('a-disabled');
            $(datablock + ' .ChgPg[data-type=Back]').removeClass('a-enabled');
        }
        else {
            $(datablock + ' .ChgPg[data-type=Back]').addClass('a-enabled');
            $(datablock + ' .ChgPg[data-type=Back]').removeClass('a-disabled');
        }
        if (curPage == ns_Paging.options.totalPages) {
            $(datablock + ' .ChgPg[data-type=Next]').addClass('a-disabled');
            $(datablock + ' .ChgPg[data-type=Next]').removeClass('a-enabled');
        }
        else {
            $(datablock + ' .ChgPg[data-type=Next]').addClass('a-enabled');
            $(datablock + ' .ChgPg[data-type=Next]').removeClass('a-disabled');
        }
    },
}

//************Address Finder*********
AddressFinder = {
    Finder: function (postcode, townid, countyid, ddladdress) {
        var adrfinder = "https://apis.medicopartners.com/api/address?id=" + postcode + "";
        $.ajax({
            type: "GET",
            url: adrfinder,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) {
                $(".GetAddress2").html("Finding...");
            },
            success: function (data) {
                if (data != 'NO') {
                    $('.spannotfound2').html("");
                    $('.divselectAddres2').show();

                    var json1 = $.parseJSON(data);
                    AddressFinder.FillAddress(json1, ddladdress);
                    AddressFinder.FillForm(json1["Addresses"][0].split(',')[5], json1["Addresses"][0].split(',')[6], townid, countyid);
                    $(".GetAddress2").html('<i class="zmdi zmdi-search">&nbsp;</i>Find');
                }
                else {
                    AddressFinder.FillAddress('');
                    AddressFinder.FillForm('', '');
                    $('.txtfillEmpLAddress').val('');
                    $('.divselectAddres2').hide();
                    $(".EmpLAddressDiv").hide();
                    $('.EmpLCityDiv').hide();
                    $('.EmpLCountyDiv').hide();
                    $('.spannotfound2').html("Not found ! enter correct postcode.");
                    $(".GetAddress2").html('<i class="zmdi zmdi-search">&nbsp;</i>Find');
                }
            },
            error: function (error) {
                $('.spannotfound2').html("Not found ! enter correct postcode.");
                $(".GetAddress2").html('<i class="zmdi zmdi-search">&nbsp;</i>Find');
            }
        });
    },

    FillForm: function (town, county, townid, countyid) {
        $(townid).val(town);
        $(countyid).val(county);
    },

    FillAddress: function (addr, ddladdress) {
        var list = $(ddladdress);
       
        list.empty();
        list.append(new Option("select address", ""));
        $.each(addr.Addresses, function (index, item) {          
            list.append(new Option(item.split(',')[0] + " " + item.split(',')[1], item.split(',')[0] + " " + item.split(',')[1]));
        });
        list.append(new Option("Not Found ? enter address below", "other"));
    },
}

function FillForm(town, county) {
    $("#txttown").val(town);
    $("#txtcounty").val(county);
}

function FillAddress(addr) {
    var list = $("#ddlLocation");
    list.empty();
    list.append(new Option("select address", ""));
    $.each(addr.Addresses, function (index, item) {
        list.append(new Option(item.split(',')[0] + " " + item.split(',')[1], item.split(',')[0] + " " + item.split(',')[1]));
    });
    list.append(new Option("Not Found ? enter address below", "other"));
}
//**************END****************



ns_roleMaster = {
    name: 'RoleMaster',
    InsertUpdateRoles: function () {
        var obj = {};
        obj.role_id = $('#btnSubmitRoles').attr('data-id');
        obj.role_name = $('#txtRole').val().trim();
        obj.role_alias = $('#txtRoleAlias').val().trim();
        obj.profile_type = $('#ddlProfileType').val();
        obj.sector_id = $('#ddlSectorRole').val();
        obj.role_code = $('#txtRoleCode').val();
        obj.role_color = $('#txtRoleColor').val();
        obj.sort_order = $('#txtSortorderNo').val();
        obj.parent_id = $('#chkParent').prop('checked') ? $('#ddlParent').val() : 0;
        obj.description = $('#txtDescription').val().trim();
        obj.IsVatApplicable = $('#vatapp').prop('checked') ? '1' : '0';
        obj.RoleType = $('#ddlRoleType').val();

        var msg = '', flag = 0;

        if (obj.sector_id == "") {
            flag = 1;
            msg = "Select a sector !";
            $('#ddlSectorRole').focus();
        }
        else if (obj.profile_type == "") {
            flag = 1;
            msg = "Select profile type !";
            $('#ddlProfileType').focus();
        }
        else if (obj.role_name == "") {
            flag = 1;
            msg = "Enter a role name !";
            $('#txtRole').focus();
        }
        else if (obj.role_alias == "") {
            flag = 1;
            msg = "Enter a role alias !";
            $('#txtRoleAlias').focus();
        }

        else if (obj.RoleType == "") {
            flag = 1;
            msg = "Select role type !";
            $('#ddlRoleType').focus();
        }
        else
            flag = 0;
        if (flag == 0) {
            try {
                ns_ajax.post(
                    'MasterSettings/InsertUpdateRoles',
                    obj,
                    function (response) {
                        if (response == "OK") {
                            if (obj.role_id == 0)
                                ShowAlertMessage("Message", "Role saved successfully", 'C');
                            else
                                ShowAlertMessage("Message", "Role updated successfully", 'C');
                            $('#ModalAddRole').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_roleMaster.getAllRolesDetails(ProfileType);
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    }
                );
            }
            catch (err) {
                ShowAlertMessage("Error", err.message, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');

    },
    getAllRolesDetails: function (ProfileType) {
        var role_id = 0;
        var strVal = $('#txtSearchRole').val();
        var param = { role_id: role_id, ProfileType: ProfileType, strVal: strVal, PageNumber: PageNumber, PageSize: PageSize };
        ns_ajax.get(
            'MasterSettings/SelectAllRoles',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var row = '';
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var index = 1;
                    var counter = 0, rownumberFirst = 1, rownumberLast = 0;
                    $.each(obj, function (key, value) {
                        var id = value.role_id;
                        var status = value.status;
                        var strStatus = '<a id= "status-' + id + '" data-status="' + status + '" class="btn btn-sm ChangeRoleStatus ' + (status == 1 ? "btn-success" : "btn-warning") + '"><i id="istatus-' + id + '" class="zmdi ' + (status == 1 ? 'zmdi-check-all' : 'zmdi-money-off') + '"></i>' + (status == 1 ? '&nbsp;Active&nbsp;' : 'Inactive') + '</a>';
                        var strEdit = '<a id="edit-' + id + '" class="btn btn-outline-primary btn-sm EditRole" data-toggle="modal" data-target="#ModalAddRole"><i class="zmdi zmdi-edit"></i></a>';
                        var strDeafaultStatus = '<a id= "dstatus-' + id + '" data-dstatus="' + value.default_status + '" data-profile-type="' + value.profile_type + '"  class="btn btn-sm defaultRole-' + value.profile_type + ' ChangeDefaultStatus ' + (value.default_status == 1 ? "btn-success" : "btn-warning") + '">' + (value.default_status == 1 ? '&nbsp&nbsp&nbspDefault&nbsp&nbsp&nbsp' : 'Set Default') + '</a>';

                        row += '<tr class="capitalize">';
                        row += '<td><strong>' + value.RowNumber + '</strong></td>' +
                            '<td><span class="colourSelectorItemtable" style="background-color:' + value.role_color + '"></span><b style="color:' + value.role_color + '">' + value.role_name + '</b></td>' +
                            '<td><span><b>' + value.role_alias + '</b></span></td>' +
                            '<td>' + value.role_code + '</td>' +
                            '<td>' + value.profile_type + '</td>' +
                            '<td><b class="col-brown">' + value.parent + '</b></td>' +
                            '<td><b>' + value.role_type + '</b></td>' +
                            '<td><b>' + (value.is_vat_apllicable > 0 ? 'Yes' : 'No') + '</b></td>' +
                            '<td><b>' + value.sort_order + '</b></td>' +
                            '<td>' + value.sector_name + '</td>' +
                            '<td><span class="col-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.create_date + ' </b></span></td>' +
                            '<td>' + strStatus + '</td>' +
                            '<td style="text-align:center">' + (value.parent_id > 0 ? strDeafaultStatus : '<b>NA</b>') + '</td>';
                        row += '<td>' + strEdit + '' +
                            '<a id="delete-' + id + '"  class="ion btn btn-outline-danger btn-sm DeleteRole">' +
                            '<div class="lid"></div>' +
                            '<div class="lidcap"></div>' +
                            '<div class="bin"></div></a>';
                        row += '</span></td></tr>';
                        //paging
                        totalCount = value.total_count;
                        if (counter == 0)
                            rownumberFirst = value.RowNumber;
                        else
                            rownumberLast = value.RowNumber;
                        counter++;
                        if (counter == 1)
                            rownumberLast = value.RowNumber;

                        if (PageNumber == 1) {
                            $(".btnPrev").addClass('a-disabled');
                            $(".btnPrev").removeClass('a-enabled');
                        }
                        else {
                            $(".btnPrev").addClass('a-enabled');
                            $(".btnPrev").removeClass('a-disabled');
                        }
                        if (rownumberLast == totalCount) {
                            $(".btnNext").addClass('a-disabled');
                            $(".btnNext").removeClass('a-enabled');
                        }
                        else {
                            $(".btnNext").addClass('a-enabled');
                            $(".btnNext").removeClass('a-disabled');
                        }
                        $('#AllCount').html(value.allCount);
                        $('#cndCount').html(value.cndCount);
                        $('#empCount').html(value.empCount);
                        $('#orgCount').html(value.orgCount);
                    });
                    $('.tbodayRoles').html(row);
                    $('.spanUnreadMsgCount').html("<b>" + rownumberFirst + " - " + rownumberLast + "</b> of <b>" + totalCount + "</b>");
                }
                else {
                    $('.tbodayRoles').html("<tr><td colspan='12'><center><strong>" + response + "</strong></center></td></tr>");
                    $('.spanUnreadMsgCount').html('');
                    if (ProfileType == 'CND')
                        $('#cndCount').html('0');
                    else if (ProfileType == 'EMP')
                        $('#empCount').html('0');
                    else if (ProfileType == 'ORG')
                        $('#orgCount').html('0');
                    else
                        $('#AllCount').html('0');
                }
            }
        );
    },
    EditRoles: function (roleId) {
        try {
            var param = { roleId: roleId };
            ns_ajax.get(
                'MasterSettings/SelectRole',
                param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        var obj = jQuery.parseJSON(response.split('|')[1]);
                        $.each(obj, function (key, value) {
                            $('#txtRole').val(value.role_name);
                            $('#txtRoleAlias').val(value.role_alias);
                            $('#ddlProfileType').val(value.profile_type);
                            $('#ddlSectorRole').attr('data-sector-id', value.sector_id);
                            ns_roleMaster.LoadSectors();

                            $('#txtRoleCode').val(value.role_code);
                            $('#txtRoleColor').val(value.role_color);
                            $('#txtSortorderNo').val(value.sort_order);
                            if (value.parent_id > 0) {
                                $('#chkParent').prop('checked', true);
                                $('.Parent').show();
                                $('#ddlParent').attr('data-parent-id', value.parent_id);
                                ns_roleMaster.getParentType();
                            }
                            else {
                                $('#chkParent').prop('checked', false);
                                $('.Parent').hide();
                                $('#ddlParent').val('');
                            }
                            $('#txtDescription').val(value.description);
                            $('#ddlRoleType').val(value.role_type);
                            $('#vatapp').prop('checked', (value.is_vat_apllicable > 0 ? 'checked' : ''));

                        });
                        $('#ddlParent').val(parent_id);
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                }
            );
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    ChangeRoleStatus: function (roleId, status) {
        if (status == 1)
            status = 0;
        else
            status = 1;
        var param = "{ roleId: '" + roleId + "', status: '" + status + "' }";
        try {
            ns_ajax.post(
                'MasterSettings/ChangeRoleStatus',
                param,
                function (response) {
                    if (response == "OK") {
                        $('#status-' + roleId).attr('data-status', status);
                        if (status == 1)
                            $('#status-' + roleId).addClass("btn-success").removeClass("btn-warning");
                        else
                            $('#status-' + roleId).addClass("btn-warning").removeClass("btn-success");
                        $('#status-' + roleId).html((status == 1 ? '<i class="zmdi zmdi-check-all"></i>&nbsp;Active&nbsp;' : '<i class="zmdi zmdi-money-off"></i>Inactive'));
                        ShowAlertMessage("Message", "Status has been changed successfully", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                }
            );
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },
    ChangeRoleDefaultStatus: function (roleId, defaultStatus, profileType) {
        var param = "{ roleId: '" + roleId + "'}";
        try {
            ns_ajax.post(
                'MasterSettings/ChangeRoleDefaultStatus',
                param,
                function (response) {
                    if (response == "OK") {
                        $('.defaultRole-' + profileType).addClass("btn-warning").removeClass("btn-success");
                        $('.defaultRole-' + profileType).html('Set Default').attr('data-dstatus', 0);
                        $('#dstatus-' + roleId).addClass("btn-success").removeClass("btn-warning");
                        $('#dstatus-' + roleId).html('&nbsp&nbsp&nbspDefault&nbsp&nbsp&nbsp').attr('data-dstatus', defaultStatus);;
                        ShowAlertMessage("Message", "Role set as default successfully.", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },
    DeleteRole: function (roleId, status) {
        if (status == 1) {
            Toast_Warning("Warning", "Active status can not be deleted");
            return false;
        }
        try {
            var param = "{roleId : '" + roleId + "'}";
            ns_ajax.post(
                'MasterSettings/DeleteRole',
                param,
                function (response) {
                    if (response == "OK") {
                        if (response == "OK") {
                            ShowAlertMessage("Message", "Role deleted Successfully.", 'C');
                            ns_roleMaster.getAllRolesDetails(ProfileType);
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    }
                }
            );
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    LoadSectors: function () {
        try {
            var param = '';
            ns_ajax.get(
                'MasterSettings/LoadSectors',
                param,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        var output = '';
                        output = '<option selected="selected" value="">--Select Sector--</option>';
                        var obj = jQuery.parseJSON(response.split('|')[1]);
                        $.each(obj, function (key, value) {
                            output += '<option value="' + value.SectorId + '" class="capitalize">' + value.SectorName + '</option>';
                        });
                        $('#ddlSectorRole').html(output);
                        $('#ddlSectorRole').val($('#ddlSectorRole').attr('data-sector-id'));
                    }
                }
            );
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    getParentType: function () {
        $('#ddlParent').empty();
        var ProfileType = $('#ddlProfileType').val();
        var SectorId = $('#ddlSectorRole').val();
        $.ajax({
            url: "/MasterSettings/LoadParentTypeRoles",
            method: "get",
            data: { ProfileType: ProfileType, SectorId: SectorId },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var row = '';
                    row += '<option value="">-Select Parent--</option>';
                    $.each(obj, function (key, value) {
                        row += '<option value="' + value.role_id + '" style="text-transform:capitalize">' + value.role_name + '</option>';
                    });
                    $('#ddlParent').html(row);
                    $('#ddlParent').val($('#ddlParent').attr('data-parent-id'));
                }
                else {
                    $('#ddlParent').html('<option value="">No Parent Found</option>');
                }
            },
            error: function (err) {
                ShowAlertMessage("Message", err, 'A');
            }
        });
    },
    Reset: function () {
        $("input[type=text], textarea, select").val('');
        $("#vatapp").prop("checked", "");
        $("#chkParent").prop("checked", "");
    },
    getAllActiveRoles: function (Id) {
        $('#txt' + Id).empty();
        $('#txt' + Id).append($("<option />").val(0).text('All Roles'));
        ns_ajax.get(
            'MasterSettings/FillDropdown',
            "",
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var currentparent = "", previousparent = "";
                    $.each(obj, function (key, value) {
                        currentparent = value.parent_id;
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        if (previousparent == "" || currentparent != previousparent) {
                            jQuery('#txt' + Id).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                            previousparent = value.parent_id;
                        }
                        if (value.role_id != value.parent_id)
                            jQuery('#txt' + Id).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    });
                }
            }
        );
    },
    getJobType: function (Id) {
        $('#txt' + Id).empty();
        $('#txt' + Id).append($("<option />").val(0).text('All'));
        $('#txt' + Id).append($("<option />").val('L').text('Temporary'));
        $('#txt' + Id).append($("<option />").val('P').text('Permanent'));
    },
    getJobtimesheetStatus: function (Id) {
        $('#txt' + Id).empty();
        $('#txt' + Id).append($("<option />").val('').text('All'));
        $('#txt' + Id).append($("<option />").val('1').text('Uploaded'));
        $('#txt' + Id).append($("<option />").val('0').text('Pending'));
    },

    GetEmployeeRoles: function (Cls) {
        var params = "dro=dr-dl";
        $(Cls).html('<option value="0">Choose role...</option>');     
      
        ns_ajax.get(
            urls.employeesApi,
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = $.parseJSON(response.split('|')[1]);
                    var currentparent = "", previousparent = "";
                    $.each(obj.roles, function (key, value) {
                        currentparent = value.parent_id;
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        if (previousparent == "" || currentparent != previousparent) {
                            $(Cls).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                            previousparent = value.parent_id;
                        }
                        if (value.role_id != value.parent_id)
                            $(Cls).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    })
                }
            }
        );
    },

}

ns_employer = {
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == 'No Records') {
            //$('.cls-All, .cls-ACTIVE, .cls-INACTIVE, .cls-DELETED).html('0');
        }
        else {
            if (obj.length == 1)
                flag = false;
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'ACTIVE' || value.status == 'INACTIVE' || value.status == 'DELETED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }
    },
    GetEmployers: function (obj) {
        var TotalRecords = 0;
        var rows = '';
        if (obj !== 'No Records') {
            $.each(obj, function (key, value) {
                TotalRecords = value.TotalRecord;
                var cndid = value.emp_id;
                var empname = value.emp_name;
                var emprole = value.emp_role_alias;
                var account_status_label = value.account_status_label;
                rows += '<tr>';
                rows += '<td><div class="checkbox"><input id="chkAllMsg' + cndid + '" type="checkbox"><label for="chkAllMsg' + cndid + '">&nbsp;</label></div></td>';
                $.each(value, function (i, item) {
                    var field = i;
                    var val = value[i] == null ? '' : value[i];
                    if (field == 'TotalRecord') { }
                    else if (field == 'RowNumber') {
                        rows += '<td class="' + field + '">' +
                            //SrNo.
                            '<span>' + val + '</span>' +
                            //Action Buttons   
                            '<span class="table-row-btn">';
                        var clsAction = 'class="btn btn-outline-primary btn-sm mr-1 btnEmployerViewDetail"';

                        rows += '<a ' + clsAction + ' data-action="blockpayment" data-toggle="modal" data-target="#block-payment"><i class="zmdi zmdi-flag"></i></a>';
                        rows += '<a class="btn btn-outline-primary btn-sm mr-1 btnNotes" data-id="' + cndid + '" data-name="' + empname + '" data-role="' + emprole + '" data-profile-type="EMP" title="Notes" data-toggle="modal" data-target="#ModalNotes"><i class="zmdi zmdi-file-text"></i></a>';
                        //rows += '<a ' + clsAction + ' data-action="comments" data-id="' + cndid + '" title="Comments" data-toggle="modal" data-target="#comments"><i class="zmdi zmdi-comment-more col-brown">&nbsp;</i></a>';
                        rows += '<a ' + clsAction + ' data-action="view" data-id="' + cndid + '" data-name="' + empname + '" data-role="' + emprole + '" data-profile-type="EMP" title="View" data-toggle="modal" data-target="#viewprofile"><i class="zmdi zmdi-search col-teal">&nbsp;</i>View</a>';

                        rows += '</span>';
                        '</td>';
                    }
                    else if (field == 'emp_id') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<a data-action="view" data-id="' + cndid + '" title="View" data-toggle="modal" data-target="#viewprofile" class="btn-account-action col-blue"><b>' + val + '</b></a>' +
                            '</td>';


                    }
                    else if (field == 'emp_name') {
                        rows += '<td class="' + field + '">' +
                            '<span><b>' + val + '</b></span>' +

                            '</td>';
                    }
                    else if (field == 'owner_name') {
                        rows += '<td class="' + field + '">' +
                            '<a class="badge badge-primary" data-toggle="modal" data-target="#ownership">' + GetShortName(val) + '</i></a>' +
                            '</td>';
                    }
                    else if (field == 'emp_email_details') {
                        rows += '<td class="' + field + '">' +
                            '<a href="#" class="EShow "><i class="zmdi zmdi-email-open"></i> ' + val.split("#")[0] + '</a>' +
                            (val.split("#")[1] == '1' ? '<br><span class="col-green"><i class="zmdi zmdi-check-all"></i> Verified</span><br>' + val.split("#")[2] + ''
                                : '<br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i> Not Verified</span>') +
                            '</td>';
                    }
                    else if (field == 'emp_mobile_details') {
                        rows += '<td class="' + field + '">' +
                            '<a href="#" class="PShow col-grey"><i class="zmdi zmdi-phone-in-talk"></i> ' + val.split("#")[0] + '</a>' +
                            (val.split("#")[1] == '1' ? '<br><span class="col-green"><i class="zmdi zmdi-check-all"></i> Verified</span><br>' + val.split("#")[2] + ''
                                : '<br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i> Not Verified</span>') +
                            '</td>';
                    }
                    else if (field == 'cnd_audit_status') {
                        rows += '<td class="' + field + '">' +
                            (val == '1' ? '<span class="col-green"><b><i class="zmdi zmdi-check-all">&nbsp;</i>Audited</b></span>' :
                                '<span class="badge badge-default"><b>Audit</b></span>') +
                            '</td>';
                    }

                    else if (field == 'mdr') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-danger" data-toggle="tooltip" title="Non Compliant" ' +
                            'data-original-title="Non Compliant"> <i class="fa fa-warning faa-flash animated red">&nbsp;</i></a>' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-danger m-1" data-toggle="tooltip" title="Non Compliant Mandatory Docs" ' +
                            'data-original-title="Non Compliant Mandatory Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }
                    else if (field == 'trn') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-warning btn-sm red" data-toggle="tooltip" title="Non Compliant Training Docs"' +
                            'data-original-title="Non Compliant Training Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }
                    else if (field == 'opt') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-info btn-sm viewalldocs" data-toggle="tooltip" title="Non Compliant Optional Docs"' +
                            'data-original-title="Non Compliant Optional Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }

                    else if (field == 'account_status_label') {
                        rows += '<td class="' + field + '">' +
                            (val == 'ACTIVE' ? '<span class="badge badge-success"><b>' + val + '</b></span>' :
                                val == 'INACTIVE' ? '<span class="badge badge-default"><b>' + val + '</b></span>' : +
                                    val == 'DELETED' ? '<span class="badge badge-danger"><b>' + val + '</b></span>' : '') +
                            '</td>';
                    }

                    else {
                        rows += '<td class="' + field + '">' +
                            '<span>' + val + '</span>' +
                            '</td>';
                    }
                });
                rows += '</tr>';
            });
        }
        else {
            rows = '<td colspan="5" style="height:100px;color:lightcoral; font-size:16px">' + obj + '</td>';
        }
        result = ns_Paging._Object(rows, TotalRecords);
        $('.tblRecods').html(rows);
        DatePairFuction();
        return result;
        fn_autocomplete('txtcandidatename', 'cnd', 'txtcandidatename');
    },
    LoadEmployers: function () {
        //var requestedtype = jQuery(location).attr('hash').replace('#', '');
        //if (requestedtype !== '') {
        //    jQuery('.ul-records-tabs li a').removeClass('active');
        //    jQuery('#tab' + requestedtype).addClass('active');
        //    JobStatus = jQuery('#tab' + requestedtype).attr('data-status');
        //    jQuery('#tab' + requestedtype).click();
        //}

        ns_Paging._createPager('#PgData', (ns_gris_setting.get_grid_field(ns_Paging.options.currentIndex, ns_Paging.options.rPP)));
    },
    Insert_Employer: function () {
        var obj = {};
        var Sector = $("#ddlEmpSectors").val();
        var ddlcat = $("#ddlcat").val();
        var FirstName = $("#txtFirstName").val();
        var LastName = $("#txtLastName").val();
        var txtDisplayName = $("#txtEmployerName").val();
        var txtMobileNumber = $("#txtMobileNumber").val();
        var txtEmail = $("#txtEmail").val();
        var txtPostCode = $("#txtPostCode").val();
        var txtPracticeCode = $("#txtPracticeCode").val();
        var ddlEmpLocation = $("#selectList2").val();
        var txtEmpAddress1 = $("#txtaddressline2").val();
        var txtCity = $("#txttown2").val();
        var txtCounty = $("#txtcounty2").val();
        var IsEmailChecked = $('#empemail').is(":checked");
        var IsEmailChecked = $('#empemail').val();
        var IsSmsChecked = $('#empsms').val();
        if ($('#empemail').attr('type') === 'checkbox')
            IsEmailChecked = +$('#empemail').is(':checked');
        if ($('#empsms').attr('type') === 'checkbox')
            IsSmsChecked = +$('#empsms').is(':checked');



        if (Sector == 0) {
            $("#ddlEmpSectors").focus();
            ShowAlertMessage("Message", "Select a sector", "A");
            return false;
        }
        if (ddlcat == 0) {
            $("#ddlcat").focus();
            ShowAlertMessage("Message", "Select a category", "A");
            return false;
        }
        if (FirstName == '') {
            $("#txtFirstName").focus();
            ShowAlertMessage("Message", "Enter First Name", "A");
            return false;
        }
        if (txtMobileNumber !== '' && txtMobileNumber.length < 10) {
            $("#txtMobileNumber").focus();
            ShowAlertMessage("Message", "Enter Valid Mobile Number", "A");
            return false;
        }
        if (txtEmail !== '' && IsEmail(txtEmail) == false) {
            ShowAlertMessage("Message", "Enter Valid Email", "A");
            return false;
        }
        if (txtPostCode == '') {
            $("#txtPostCode").focus();
            ShowAlertMessage("Message", "Enter Postcode", "A");
            return false;
        }
        obj.emp_id = 0;
        obj.emp_role_id = ddlcat;
        obj.first_name = FirstName;
        obj.last_name = LastName;
        obj.emp_name = txtDisplayName;
        obj.emp_display_name = txtDisplayName;
        obj.emp_contact_email = txtEmail;
        obj.emp_pct = txtPracticeCode;
        obj.IsEmailChecked = IsEmailChecked;
        obj.IsSmsChecked = IsSmsChecked;
        obj.emp_phone = txtMobileNumber;
        obj.emp_reg_no = '';
        obj.emp_postcode = txtPostCode;
        obj.emp_address1 = txtEmpAddress1;
        obj.emp_city = txtCity;
        obj.emp_country = txtCounty;
        ns_ajax.post(
            '/Employer/InsertEmployer',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", obj.emp_name + ' Employer has been registered successfully.', "C");

                    $("#register-new-candidate-modal").modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    ns_employer.Reset();
                    ns_employer.Get_Employer_Detail();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ChangeStatus: function (empid, status, action, type) {
        var param = '{empid:"' + empid + '",status:"' + status + '",type:"' + action + '"}';
        ns_ajax.post(
            'Employer/ChangeEmployerStatus',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", " Your request has been processed successfully.", "C");
                    if (type == 'M') {
                        if (status == 1)
                            $('#EmployerChangeStatus-' + empid).html('<i class="zmdi zmdi-check-all">&nbsp;</i>Active').removeClass('btn btn-warning btn sm').addClass('btn btn-success btn sm');
                        else
                            $('#EmployerChangeStatus-' + empid).html('<i class="zmdi zmdi-money-off">&nbsp;</i>Inactive').removeClass('btn btn-success btn sm').addClass('btn btn-warning btn sm');
                    }
                    else
                        ns_employer.GetEmployer();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    Get_Employer_Detail: function () {
        var Param = { status: IsActive };
        ns_ajax.get(
            'Employer/GetEmployer',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var strVal = '', i = 0;
                    $.each(obj, function (key, value) {
                        i++;
                        var StrStatus = value.emp_account_status == 1 ? '<a id="EmployerChangeStatus-' + value.emp_id + '"  class="w65 btn btn-success btn sm btnEmpStatus" data-type="M" data-action="Account" data-status="' + value.emp_account_status + '" title="Click to change status"><i class="zmdi zmdi-check-all">&nbsp;</i>Active</a>' : '<a id="EmployerChangeStatus-' + value.emp_id + '"  class="w65 btn btn-warning btn sm btnEmpStatus" data-type="M" data-action="Account" data-status="' + value.emp_account_status + '" title="Click to change status"><i class="zmdi zmdi-money-off">&nbsp;</i>Inactive</a>';

                        var MobileNumber = value.emp_phone == null ? '' : '<a class="PShow col-grey"><i class="zmdi zmdi-phone-in-talk">&nbsp;</i>' + value.emp_phone + '</a> <span class="col-grey Ptarget"><i class="zmdi zmdi-phone-in-talk"></i><b>' + value.emp_phone + '</b></span><br><span class="col-green"><i class="zmdi zmdi-check-all"></i>Verified</span>';
                        var Email = '<a href="#" class="EShow "><i class="zmdi zmdi-email-open">&nbsp;</i>' + value.emp_contact_email + '<span class="text-blue Etarget"><i class="zmdi zmdi-email-open"></i>' + value.emp_contact_email + '</span><br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i>Not Verified</span></a>';
                        var Action = '<span class="table-row-btn"><a id="btnEmployerViewDetail-' + value.emp_id + '" class="btn btn-outline-primary btn-sm btnEmployerViewDetail" data-empid="0" data-toggle="modal" data-target="#viewprofile"><i class="zmdi zmdi-eye"></i>view</a><a class="btn btn-outline-primary btn-sm" title="History" data-toggle="modal" data-target="#history">H</a><a class="ion btn btn-outline-danger btn-sm"><div class="lid"></div><div class="lidcap"></div><div class="bin"></div></a></span>';
                        strVal += '<tr>' +
                            '<td class="checkbox">' + '<input id="chk1' + value.emp_id + '" type="checkbox"><label for="chk1' + value.emp_id + '">&nbsp;</label>' + '</td>' +
                            '<td>' + i + '</td>' +
                            '<td>' + value.emp_name + '<br>' + StrStatus + '</td>' +
                            '<td>' + value.cnd_role_name + '[ <b class="col-green">' + value.cnd_role_name.match(/\b(\w)/g).join('') + ' </b>]' + '</td>' +
                            '<td>' + 'Self' + '</td>' +
                            '<td>' + Email + '</td>' +
                            '<td>' + MobileNumber + '</td>' +
                            '<td class="col-blue-grey">' + '<i class="zmdi zmdi-pin">&nbsp;</i>' + value.emp_city + '</td>' +
                            '<td class="col-blue-grey">' + '<i class="zmdi zmdi-calendar">&nbsp;</i>' + value.emp_create_date2 + Action + '</td>' +
                            '</tr>';
                    });
                    $('.tblManageEmployer').html(strVal);
                }
                else
                    $('.tblManageEmployer').html("");
            });
    },
    BindSectors: function () {
        $('#ddlEmpSectors').html('<option value="0">Select Category</option>');
        ns_ajax.get(
            'MasterSettings/BindSectors',
            '',
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var str = '';
                    str = '<option value="0">Select Sector</option>';
                    $.each(obj, function (key, value) {
                        str += '<option value=' + value.sector_id + '>' + value.sector_name + '</option>'
                    });
                    $('#ddlEmpSectors').html(str);
                }
            });
    },
    Bind_Role: function (sectorId) {
        var param = { sector_id: sectorId };
        $('#ddlcat').html('');
        ns_ajax.get(
            'Employer/BindEmpRoles',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    StrVal = '<option value="0">Select Category</option>';
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.role_id + '>' + value.role_name + '</option>'
                    })
                    $('#ddlcat').html(StrVal);
                }
            });
    },
    Reset: function () {
        $("#ddlcat").val('0');
        $("#txtFirstName").val('');
        $("#txtLastName").val('');
        $("#txtEmployerName").val('');
        $("#txtMobileNumber").val('');
        $("#txtEmail").val('');
        $("#txtPostCode").val('');
        $("#txttown2").val('');
        $("#txtcounty2").val('');
        $("#txtaddressline2").val('');
    },

    //Profile 
    GetProfileDetails: function (pagename) { 
        $('#Location_Placeholder').html('<div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div>');
     
        var Param = { EmpId: '', status: 0, type: 'PROFILE' };
        ns_ajax.get(
            urls.employerApi + 'Get',
            Param,
            function (data) {
                if (data.Status == 'OK') {                  
                    var obj = data.Response;// jQuery.parseJSON(response.split('|')[1]);
                    if (pagename == 'PROFILE') {                       
                        call_tmpl_binder(obj.BasicInfo, '/Template/setting_tmpl.html', '#Profile_Template', '#Profile_Basic_Info_Placeholder');
                        call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#EmpAddres_Template', '#Profile_Location_Placeholder');
                        call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#EmpAddres_Template', '#Location_Placeholder');
                        setTimeout(
                            function () {
                                $('.nav-tabs > li a').click(function () {                                 
                                    $('.nav-tabs > li').removeClass('active');
                                    $(this).parent().addClass('active');
                                    $('.nav-tabs').toggleClass('open');
                                });
                            }, 300);

                    }
                    else {
                        call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#EmpAddres_Template', '#Location_Placeholder');
                    }
                }
            });
    },

    InsertUpdateProfile: function (type) {
        var obj = {};      
        if (type == 'Location') {
            var LocatinName = $("#txtEmpLocationName").val();
            var Postcode = $("#txtEmpprofilePostcode").val();
            var Address = $("#txtaddressline2").val();
            var Mobile = $("#txtEmpProfileMobile").val();
            var Email = $("#txtEmpProfileEmail").val();
            var ddlAddres = $("#selectList2").val();
            
            if (LocatinName == '') {
                $("#txtEmpLocationName").focus();
                ShowAlertMessage("Message", "Enter location name !", "A");
                return false;
            }
            if (Postcode == '') {
                $("#txtEmpprofilePostcode").focus();
                ShowAlertMessage("Message", "Enter Postcode !", "A");
                return false;
            }
            if (Email != '' && IsEmail(Email) == false) {
                ShowAlertMessage("Message", "Enter correct email.", "A");
                $("#txtEmpProfileEmail").focus();
                return false;
            }
            if (Address=='' && ddlAddres == '') {
                $("#selectList2").focus();
                ShowAlertMessage("Message", "Select address !", "A");
                return false;
            }
            if (Address == '') {
                $("#txtaddressline2").focus();
                ShowAlertMessage("Message", "Enter Postcode !", "A");
                return false;
            }
            obj.emp_location_id = $('#btnProfileAddUpdate').attr('data-location-id');
            obj.emp_location_name = LocatinName;
            obj.emp_postcode = Postcode;
            obj.emp_address1 = Address;
            obj.emp_city = $("#txtEmpProfileCity").val();
            obj.emp_country = $("#txtEmpProfileCouunty").val();
            obj.emp_phone = Mobile;
            obj.emp_email = Email;
            obj.emp_contact_person_id = '0';// $("#ddlContactPerson").val();
            obj.emp_parking_status = $('#btnAvailable').attr('data-status') == 1 ? '1' : '0';
            obj.emp_it_system_required = $('#btnRequired').attr('data-status') == 1 ? '1' : '0';
            obj.action = type;
        }
        else if (type == 'PaymentInfo') {
            var vatreg = $("input[name='vatreg']:checked").val();
            if (vatreg == 1) {
                if ($('#txtVatNumber').val() == '') {
                    $("#txtVatNumber").focus();
                    ShowAlertMessage("Message", "Enter VAT number !", "A");
                    return false;
                }
            }
            obj.pay_nhs_pension = $("input[name='pension']:checked").val();
            obj.emp_fast_pay = $("input[name='fastpay']:checked").val();
            obj.pay_mode = $("input[name='paymode']:checked").val();
            obj.emp_vat_register_status = $("input[name='vatreg']:checked").val();
            obj.emp_vat_number = $('#txtVatNumber').val();
            obj.action = type;
        }
        else if (type.split('#')[0] == 'BasicProfile') {
            //EMP
            if (type.split('#')[1] == 'EMP') {
                var EmpName = $("#txtEmpName").val();
                var DisplayName = $("#txtEmpDisplayName").val();
                if (EmpName == '') {
                    $("#txtEmpName").focus();
                    ShowAlertMessage("Message", "Enter Emp Name !", "A");
                    return false;
                }
                obj.emp_name = EmpName;
                obj.emp_display_name = DisplayName;
            }
            //CND
            if (type.split('#')[1] == 'CND') {
                var FirstName = $("#txtFirstName").val();
                var LastName = $("#txtLastName").val();
                if (FirstName == '') {
                    $("#txtFirstName").focus();
                    ShowAlertMessage("Message", "Enter First Name !", "A");
                    return false;
                }
                obj.first_name = FirstName;
                obj.last_name = LastName;
            }
            obj.emp_phone = $("#txtProMobile").val();
            obj.emp_email = $("#txtProEmail").val();
            obj.action = type;
        }

        else if (type.split('#')[0] == 'SETDEFAULTLOCATION' || type.split('#')[0] == 'CHANGE_LOCATION_STATUS' || type.split('#')[0] == 'DELETE_LOCATION') {
            obj.emp_location_id = type.split('#')[1];
            obj.status = type.split('#')[2];
            obj.action = type.split('#')[0];
        }
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    if (type == 'Location') {
                      /*  ShowAlertMessage("Message", 'Location has been ' + (obj.emp_location_id == 0 ? 'saved' : 'updated') + ' successfully.', "C");*/
                        ns_employer.ProfileLocationClear();
                        ModalHide('#ModalProfileLocation');
                    }
                    else if (type == 'PaymentInfo') {
                        ShowAlertMessage("Message", 'Payment Information has been updated successfully.', "C");
                        ModalHide('#ModalPaymentInfo');
                    }
                    else if (type.split('#')[0] == 'BasicProfile') {
                        ShowAlertMessage("Message", '' + (type.split('#')[1] == 'EMP' ? 'Employer details' : 'Candidate details') + ' has been updated successfully.', "C");
                        $("#txtFirstName").val('');
                        $("#txtLastName").val('');
                        $("#txtProMobile").val('');
                        $("#txtProEmail").val('');
                        $("#txtEmpName").val('');
                        $("#txtEmpDisplayName").val('');
                        ModalHide('#ModalBasicInfo');
                    }
                    else if (type.split('#')[0] == 'SETDEFAULTLOCATION') {
                        ShowAlertMessage("Message", 'Your request has been proccessed successfully.', "C");
                    }
                    else if (type.split('#')[0] == 'CHANGE_LOCATION_STATUS') {
                        ShowAlertMessage("Message", 'Location has been ' + (obj.status == 1 ? 'Activated' : 'Deactivated') + ' successfully.', "C");
                        $('#Status-' + type.split('#')[1]).attr('data-status', obj.status);
                    }
                    else if (type.split('#')[0] == 'DELETE_LOCATION') {
                        ShowAlertMessage("Message", 'Location has been deleted successfully.', "C");
                        $("#divLoc-" + type.split('#')[1]).remove();
                    }
                    ns_employer.GetProfileDetails('PROFILE');
                    
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    GetProfileLocation: function (location_id) {
        var param = { id: location_id, type: "LOCATION" };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;// jQuery.parseJSON(response.split('|')[1]);
                    var contactpersonid = '';
                    $.each(obj, function (key, value) {
                        $('#btnProfileAddUpdate').attr('data-location-id', value.emp_location_id);
                        $("#txtEmpLocationName").val(value.emp_location_name);
                        $("#txtEmpprofilePostcode").val(value.emp_postcode);
                        $("#txtaddressline2").val(value.emp_address1);
                        $("#txtEmpProfileMobile").val(value.emp_phone);
                        $("#txtEmpProfileEmail").val(value.emp_email);
                        $("#txtEmpProfileCity").val(value.emp_city);
                        $("#txtEmpProfileCouunty").val(value.emp_country);
                        $(".divaddress2").show();
                        ns_employer.BindCandidateAsEmployer('ddlContactPerson', value.emp_contact_person_id, 'edit');
                    });

                }
            });
    },

    ProfileLocationClear: function () {
        $('#btnProfileAddUpdate').attr('data-location-id', "0");
        $("#txtEmpLocationName").val('');
        $("#txtEmpprofilePostcode").val('');
        $("#txtaddressline2").val('');
        $("#txtEmpProfileMobile").val('');
        $("#txtEmpProfileEmail").val('');
        $("#txtEmpProfileCity").val('');
        $("#txtEmpProfileCouunty").val('');
        $("#ddlContactPerson").val('');
        $("#txtContactPersonEmail").val('');
        $("#txtContactPersonMobile").val('');
        $("#selectList2").val('');
        $(".divaddress2").hide();
        $(".divselectAddres2").hide();
        $('.divcontactperson').hide();
    },

    update_password: function () {       
        var txtCurrentPassword = $('#txtCurrentPassword').val();
        var txtNewPassword = $('#txtNewPassword').val();
        var txtConfirmPassword = $('#txtConfirmPassword').val();
        if (txtCurrentPassword == '') {
            $("#txtCurrentPassword").focus();
            ShowAlertMessage("Message", "Enter Current password", "A");
            return false;
        }
        if (txtNewPassword == '') {
            $("#txtNewPassword").focus();
            ShowAlertMessage("Message", "Enter New password", "A");
            return false;
        }
        if (txtNewPassword != '' && txtNewPassword.length < 6) {
            $("#txtNewPassword").focus();
            ShowAlertMessage("Message", "New password should be minimum 6 character", "A");
            return false;
        }
        if (txtConfirmPassword == '') {
            $("#txtConfirmPassword").focus();
            ShowAlertMessage("Message", "Enter Confirm password", "A");
            return false;
        }
        if (txtNewPassword == txtConfirmPassword) {
            var Param = "{ password: '" + txtCurrentPassword + "',NewPassword:'" + txtNewPassword + "'}";
            var obj = {};
            obj.Password = txtCurrentPassword;
            obj.NewPassword = txtNewPassword;
            obj.ConfirmPassword = txtConfirmPassword;
            obj.action = 'CHGPASS';
            var param = "[" + JSON.stringify(obj) + "]";

            ns_ajax.post(
                urls.employerApi + 'profile',
                param,
                function (response) {
                    if (response == 'OK') {
                        ShowAlertMessage("Message", "Password update successfully.", "C");
                        $('#txtCurrentPassword').val('');
                        $('#txtNewPassword').val('');
                        $('#txtConfirmPassword').val('');
                    }
                    else
                        ShowAlertMessage("Message", response, "A");
                });
        }
        else
            ShowAlertMessage("Message", "New password and confirm password are not matched.", "A");
    },
    //////////////////////////////////////

    GetEmployer: function () {
        $('.ClsEmpWizard').html('');
        var emp_id = RequestChecksum;
        var Param = { WizardId: 0, ProfileId: emp_id, ProfileType: 'emp', SettingType: 1, LocationId: 0, Action: "GETPROFILE" };
        ns_ajax.get(urls.employerApi + 'Get',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {

                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var objjobs = jQuery.parseJSON(response.split('|')[2]);
                    var StrVal = '', currentparent = '', previousparent = '', FieldNotShow = '';

                    $.each(obj.Table1, function (key, value) {
                        var MobileStatus = value.emp_mobile_verification_status == 1 ? '<span class="col-green">Verified</span>' : '<a class="btnEmpStatus btn btn-outline-primary" data-action="Mobile" data-status="' + value.emp_mobile_verification_status + '" title="Verify Mobile" style="margin-left: 2px;padding: 4px;">Verify Mobile</a>';
                        var EmailStatus = value.emp_email_verification_status == 1 ? '<span class="col-green">Verified</span>' : '<a class="btnEmpStatus btn btn-outline-primary" data-action="Email" data-status="' + value.emp_email_verification_status + '" title="Verify Email" style="margin-left: 2px;padding: 4px;">Verify Email</a>';
                        var AccountStatus = '<a class="btnEmpStatus  ' + (value.emp_account_status == 1 ? 'col-green' : 'col-red') + '" data-action="Account" data-status="' + value.emp_account_status + '" title="Click to change status">' + (value.emp_account_status == 1 ? 'Active' : 'Inactive') + '</a>';
                        $('#spnEmpAccountStatus').html(AccountStatus);
                        $('#spnEmpName').html(value.emp_name);
                        $('#spnEmpMobile').html((value.emp_mobile == null || value.emp_mobile == '') ? 'NA' : value.emp_mobile + '&nbsp;' + MobileStatus);
                        $('#spnEmpEmail').html((value.emp_contact_email == null || value.emp_contact_email == '') ? 'NA' : value.emp_contact_email + '&nbsp;' + EmailStatus);
                    });

                    $.each(objjobs.JobsSummary, function (key, value) {
                        $('#spnEmpNewJob').html('£' + parseFloat(value.new_jobs.split("/")[1]).toFixed(2));
                        $('#spantotalNewjobs').html(value.new_jobs.split("/")[0]);

                        $('#spnEmpAppliedJob').html('£' + parseFloat(value.applied_jobs.split("/")[1]).toFixed(2));
                        $('#spantotalAppliedjobs').html(value.applied_jobs.split("/")[0]);

                        $('#spnEmpBookedJob').html('£' + parseFloat(value.booked_job.split("/")[1]).toFixed(2));
                        $('#spantotalBookedjobs').html(value.booked_job.split("/")[0]);

                        $('#spnDueInvoice').html('£' + parseFloat(value.due_invoice).toFixed(2));
                        $('#spnEmpJobTotal').html('£' + parseFloat(value.total).toFixed(2));
                    });

                    $.each(obj.WizardField, function (key, value) {
                        currentparent = value.w_id;
                        FieldNotShow = value.ws_field_name == 'emp_id' || value.ws_field_name == 'emp_account_status' || value.ws_field_name == 'emp_mobile_verification_status' || value.ws_field_name == 'emp_email_verification_status' || value.w_keyword == "WZLOCATIONS";
                        var EditEmpWDetail = '<a id="btnEmpAddWizardDetail-' + value.w_id + '" style="padding:2px 12px" class="btn btn-sm btn-primary hover btnEmpAddWizardDetail" data-btntype="edit"  data-keyword="' + value.w_keyword + '"><i class="zmdi zmdi-edit"></i> Edit</a>';
                        var btnClassAttr = '' + EditEmpWDetail + '';
                        if (previousparent == "" || currentparent != previousparent) {
                            StrVal += '</div></div>';
                            value.w_keyword == "WZLOCATIONS" ? '' : StrVal += '<div class="bxsaddow  mt-4 col-md-6">';
                            value.w_keyword == "WZLOCATIONS" ? $('.ulEmpLocation').attr('data-wid', value.w_id) : StrVal += '<h4>' + '<span id=spnWId-' + value.w_id + '>' + value.w_name + '</span>' + btnClassAttr + '</h4>';
                            value.w_keyword == "WZLOCATIONS" ? '' : StrVal += '<div id="EmpWizardField-' + value.w_id + '" class="p-3 bdr1 h4show">';
                            previousparent = value.w_id;
                        }
                        if (value.ws_field_id != value.w_id) {
                            var width = 'wd-16px';
                            if (value.ws_field_name == 'rota_account_status')
                                var Fieldval = (value.field_Value == 1 ? '<b><span class="col-green">Active</span><b>' : '<b><span class="col-green">Inactive</span><b>');
                            else if (value.ws_field_name == 'emp_vat_register_status') {
                                width = 'wd-240px';
                                var Fieldval = (value.field_Value == 1 ? '<b><span class="col-green">Yes</span><b>' : '<b><span class="col-green">No</span><b>');
                            }
                            else if (value.ws_field_name == 'emp_fast_pay') {
                                width = 'wd-240px';
                                var Fieldval = (value.field_Value == 1 ? '<b><span class="col-green">Yes</span><b>' : '<b><span class="col-green">No</span><b>');
                            }
                            else if (value.ws_field_name == 'pay_mode') {
                                width = 'wd-240px';
                                var Fieldval = (value.field_Value == 1 ? '<b><span class="col-green">BACS</span><b>' : '<b><span class="col-green">Cheque</span><b>');
                            }
                            else if (value.ws_field_name == 'pay_nhs_pension') {
                                width = 'wd-240px';
                                var Fieldval = (value.field_Value == 1 ? '<b><span class="col-green">Yes</span><b>' : '<b><span class="col-green">No</span><b>');
                            }
                            else
                                var Fieldval = ((value.ws_field_name == 'activation_datetime' || value.ws_field_name == 'expriry_datetime') ? (value.field_Value == null ? 'NA' : value.field_Value.split(' ')[0]) : ((value.field_Value == null || value.field_Value == '') ? 'NA' : value.field_Value));
                            (FieldNotShow) ? '' : StrVal += '<p class="mb-1"><span class="' + width + '">' + value.ws_field_label + '</span><span>:</span><span id="spnFieldId-' + value.ws_field_id + '" class="m-l-2">' + Fieldval + '</span></p>';
                        }
                    });

                    $('.ClsEmpWizard').html(StrVal);
                }
            });
    },
    GetColumns: function (id) {
        $('.clsEmpFieldControl').html('');
        var EmpId = $('#hdfEmpIdProfile').val();
        var Param = { WizardId: id, ProfileId: EmpId, ProfileType: 'emp', SettingType: 1 };
        ns_ajax.get(
            'Employer/GetProfileWizard',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    ns_employer.GenerateControls(obj.WizardField, id);
                }
            });
    },
    GenerateControls: function (obj, id) {
        var StrVal = '', Control = '', count = 0;
        $.each(obj, function (key, value) {
            var FieldNotShow = value.ws_field_name == 'emp_id' || value.ws_field_name == 'emp_account_status' || value.ws_field_name == 'emp_mobile_verification_status' || value.ws_field_name == 'emp_email_verification_status';
            var Placeholder = ((value.ws_place_holder == null || value.ws_place_holder == '') ? 'Enter ' + value.ws_field_label : value.ws_place_holder);
            var IsRequried = value.ws_isRequired == 0 ? '' : '<span>*</span>';
            var ControlActivity = value.ws_control_activity == null ? '' : value.ws_control_activity;
            var Attribute = 'data-fieldname="' + value.ws_field_name + '" data-fieldlabel="' + value.ws_field_label + '" data-required="' + value.ws_isRequired + '" data-wid="' + id + '" placeholder="' + Placeholder + '"';
            var FieldValue = $('#btnEmpAddWizardDetail-' + id).attr('data-btntype') == 'edit' ? FieldValue = 'value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '"' : FieldValue = 'value=""';
            if (count == 0)
                (value.field_Value == null || value.field_Value == '') ? '' : count = 1;

            if (value.ws_field_type == 'radio') {
                var Activity = [];
                var rdo = '';
                Activity = ControlActivity.split('#');
                $.each(Activity, function (i) {
                    var chk = Activity[i].split('-')[0] == value.field_Value ? 'checked' : '';
                    rdo += '<div class="radio inlineblock m-r-20 mb-0">' +
                        '<input type="radio" ' + chk + ' name="radio-' + value.ws_field_id + '" id="rdo' + Activity[i].split('-')[1] + '-' + value.ws_field_id + '" data-value="' + Activity[i].split('-')[0] + '" data-control="' + value.ws_field_type + '" ' +
                        '' + Attribute + ' class="with-gap select" >' +
                        '<label for="rdo' + Activity[i].split('-')[1] + '-' + value.ws_field_id + '">' + Activity[i].split('-')[1] + '</label></div>';
                });
                Control = rdo;
            }
            else if (value.ws_field_type == 'text') {
                if (ControlActivity.split('#')[0] == 'datepicker')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl datepicker" ' + Attribute + ' value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value.split(' ')[0]) + '">';
                else if (value.ws_field_name == 'emp_mobile')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl ChkMobile" maxlength="10" ' + Attribute + '   value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '">';
                else if (value.ws_field_name == 'no_of_emploees')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl ChkMobile" ' + Attribute + ' ' + FieldValue + '>';
                else if (value.ws_field_name == 'rota_expiry_days')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl ChkMobile" ' + Attribute + ' ' + FieldValue + '>';
                else
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl" ' + Attribute + ' ' + FieldValue + '>';
            }
            else if (value.ws_field_type == 'multitext')
                Control = '<textarea id=txt-' + value.ws_field_id + ' class="form-control clsEmpControl" ' + Attribute + ' ' + FieldValue + '></textarea>';
            else if (value.ws_field_type == 'select') {
                if (ControlActivity.split('#')[1] == 'title')
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsEmpControl"  ' + Attribute + '><option value="">Select a title...</option><option value="Dr">Dr</option><option value="Mr">Mr</option><option value="Mrs">Mrs</option><option value="Miss">Miss</option></select>';
                else {
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsEmpControl"  ' + Attribute + '><option  ' + FieldValue + '>Select</option></select>';
                    // ns_employer.BindControls(ControlActivity, value.ws_field_label, value.ws_field_id, value.ws_field_type);
                }
            }
            else {
                Control = '<label id=lbl-' + value.ws_field_id + '>' + value.ws_field_label + '</label>';
            }
            if (ControlActivity.split('#')[0] == 'datepicker')
                StrVal += '<div class="form-group mt-2 masked-input unset"><label>' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
            else {
                var margin = (value.ws_field_name == 'emp_vat_register_status' ? '6px;' : value.ws_field_name == 'emp_fast_pay' ? '115px;' : value.ws_field_name == 'pay_mode' ? '80px;' : value.ws_field_name == 'pay_nhs_pension' ? '104px;' : '');

                (FieldNotShow) ? '' : StrVal += '<div class="form-group mt-2"><label id="' + value.ws_field_name + '" style="margin-right: ' + margin + '">' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
            }
        });
        count == 0 ? ($('#btnEmpUpdateWizardField').attr('data-action', 'INSERT'), $('#btnEmpUpdateWizardField').html('Save')) : $('#btnEmpUpdateWizardField').html('Update');
        $('#spnWizardHeading').html($('#spnWId-' + id).html());
        $('.clsEmpFieldControl').html(StrVal);
    },
    BindControls: function (ControlActivity, FieldLabel, ControlId, ControlType) {
        var StrVal = '';
        var ActionType = ControlActivity.split('#')[0];
        var RequestFor = ControlActivity.split('#')[1];
        if (ControlType == 'select') {
            if (ActionType == 'filldropdown') {
                if (RequestFor == 'parent') {
                    ns_ajax.get(
                        'Candidate/BindParentRoles',
                        '',
                        function (response) {
                            if (response.split('|')[0] == 'OK') {
                                var obj = jQuery.parseJSON(response.split('|')[1]);
                                StrVal = '<option value="0">Select  a ' + FieldLabel + '</option>';
                                $.each(obj, function (key, value) {
                                    StrVal += '<option value=' + value.role_id + '>' + value.role_name + '</option>';
                                })
                                $('#ddl-' + ControlId).html(StrVal);
                            }
                        });
                }
            }
        }
    },
    AddEditEmployerProfile: function (empId) {
        var obj = [], Result = 1;
        if ($('.select:checked').prop('checked') == true) {
            $('.select:checked').each(function () {
                obj.push({
                    emp_id: empId,
                    w_id: $(this).attr('data-wid'),
                    fieldname: $(this).attr('data-fieldname'),
                    fieldvalue: $(this).attr('data-value'),
                    action: $('#btnEmpUpdateWizardField').attr('data-action')
                });
            });
        }
        else {
            ShowAlertMessage("Message", "Check atleast one from rota account status", "A");
            return false;
        }

        $('.clsEmpControl').each(function (index) {
            if ($(this).attr('data-required') == 1) {
                if ($(this).val() == '') {
                    ShowAlertMessage("Message", "Enter " + $(this).attr('data-fieldlabel') + "", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            if ($(this).attr('data-fieldname') == 'emp_contact_email') {
                if ($(this).val() !== '' && IsEmail($(this).val()) == false) {
                    ShowAlertMessage("Message", "Enter correct email.", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            obj.push({
                emp_id: empId,
                w_id: $(this).attr('data-wid'),
                fieldname: $(this).attr('data-fieldname'),
                fieldvalue: $(this).val(),
                action: $('#btnEmpUpdateWizardField').attr('data-action')
            });
        });
        if (Result == 0) { return false; }
        ns_ajax.post(
            'Employer/InsertEmpProfile',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Profile updated successfully.", "C");
                    $('#ModalEditDetails').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    ns_employer.GetEmployer();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    getLocations: function (ctrId, emp_id, type) {
        var status = '1';
        $("#" + ctrId).empty();
        var param = { EmpId: emp_id, status: status, type: type };
        ns_ajax.get(urls.employerApi + 'Get',
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '<option value="0">Choose any...</option>';
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.emp_location_id + ' data-employer="' + value.emp_name + '" data-mobile="' + value.emp_phone + '"  data-email="' + value.emp_email + '">' + value.full_address + '</option>'
                        if (value.emp_billing_default == '1')
                            $("#" + ctrId).attr('billing_default', value.emp_location_id);
                        $("#" + ctrId).attr('data-emp-id', emp_id);
                    });
                    $("#" + ctrId).html(StrVal);
                    $("#" + ctrId).val($("#" + ctrId).attr('billing_default'));
                }
                else
                    $("#" + ctrId).html('<option value="0">Not Available</option>');
            });
    },
    //Location
    AddEditLocation: function (Location_id, Action, Status) {
        alert('HI');
        var obj = [], Result = 1;
        if ($('.spannotfound2').html() != '') {
            ShowAlertMessage("Message", "Address not found ! enter correct postcode.", "A");
            Result = 0;
            return false;
        }
        if ($('#ddlEmpLocation').val() == '') {
            ShowAlertMessage("Message", "Find address.", "A");
            $('#ddlEmpLocation').focus()
            Result = 0;
            return false;
        }
        $('.clsEmpLocation').each(function (index) {
            if ($(this).attr('data-required') == 1) {
                if ($(this).val() == '') {
                    ShowAlertMessage("Message", "Enter " + $(this).attr('data-fieldlabel') + "", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }

            if ($(this).attr('data-fieldname') == 'emp_phone') {
                if ($(this).val() !== '' && $(this).val().length < 10) {
                    ShowAlertMessage("Message", "Enter 10 digit mobile number.", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            if ($(this).attr('data-fieldname') == 'emp_email') {
                if ($(this).val() !== '' && IsEmail($(this).val()) == false) {
                    ShowAlertMessage("Message", "Enter correct email.", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            obj.push({
                emp_location_id: Location_id,
                emp_id: EmpId,
                w_id: $(this).attr('data-wid'),
                fieldname: $(this).attr('data-fieldname'),
                fieldvalue: $(this).val(),
                action: Action
            });
        });
        if (Result == 0) { return false; }
        ns_ajax.post(
            'Employer/InsertUpdateLocationEmp',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    Action == 'INSERT' ? ShowAlertMessage("Message", "Location save successfully.", "C") : ShowAlertMessage("Message", "Location updated successfully.", "C");
                    ns_employer.GetLocation(Status);
                    $('#ModalLocation').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    GetLocation: function (status) {
        var EmpId = RequestChecksum;
        var type = 'NON-BILLING';
        var param = { EmpId: EmpId, status: status, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var objCountVal = jQuery.parseJSON(response.split('|')[2]);
                    //Show delete count
                    $.each(objCountVal, function (key, value) {
                        value.emp_delete_status == 0 ? $('#spnLocationActive').html(value.total_count) : $('#spnLocationInactive').html(value.total_count);
                    });

                    var Str = '', btnClassAttr = '', Modal = '';
                    var EditClass = status == 0 ? 'btnEmpEditLocation' : 'btnEmpLocationRevert';
                    var Modal = status == 0 ? 'data-toggle="modal" data-target="#ModalLocation"' : '';
                    var ChangeEdithtml = status == 0 ? '<i class="zmdi zmdi-edit">&nbsp;</i>edit' : '<i class="zmdi zmdi-rotate-ccw">&nbsp;</i>Revert';
                    Str += '<a id="btnEmpLocationAddMore"  data-action="edit"  >' +
                        '<div class="bxsaddow w-lft-qutr mt-3 bg-add" style="height:355px;"><b>&#43; </b><span>Add More</span></div> </a>';
                    $.each(obj, function (key, value) {
                        Str += '</div></div>';
                        var btnStatus = '<a id="btnLocationStatus-' + value.emp_location_id + '"  class="btn btn-sm ' + (value.status == 1 ? 'btn-success' : 'btn-warning') + ' btn sm btnLocationStatus"  title="Click to change status">' + (value.status == 1 ? '<i class="zmdi zmdi-check-all">&nbsp;</i>Active' : '<i class="zmdi zmdi-money-off">&nbsp;</i>Inactive') + '</a>';
                        var btnSetDefault = '<a id="btnDefaultStatus-' + value.emp_location_id + '" data-status="1" class="btn btn-outline-primary btn-sm btnDefaultStatus">Set As Default</a>';
                        var btnDefault = '<span id="spnEmpDefault-' + value.emp_location_id + '" data-default="' + value.emp_main_status + '" class="col-green" style="float:right;"><i class="zmdi zmdi-check">&nbsp;</i>Default</span>';
                        var btnDelete = '<a id="btnLocationDelete-' + value.emp_location_id + '" class="btn btn-danger btn-sm btnLocationDelete"><i class="zmdi zmdi-delete">&nbsp;</i>delete</a>';
                        var btnEdit = '<a id="btnEmpEditLocation-' + value.emp_location_id + '" class="btn btn-outline-primary btn-sm ' + EditClass + '"  ' + Modal + '>' + ChangeEdithtml + '</a> ';

                        Str += '<div id="divlocation-' + value.emp_location_id + '" class="bxsaddow w-lft-qutr mt-3">' +
                            '<h4>' + '<span id=spnWId style="text-transform:uppercase;">' + value.emp_location_name + '</span>' + (value.emp_main_status == 1 ? btnDefault : '') + '</h4>' +
                            '<div class="p-2 bdr1 h4show">' +
                            '<div style="height:300px;overflow:auto;">' +
                            '<div><label>Address</label><span class="m-l-2 mr-2">:</span></div>' +
                            '<div><i class="zmdi zmdi-pin col-blue-grey">&nbsp;</i>' + value.emp_location + '</div>';

                        //Hide address if empty
                        if (value.emp_address2 != null && value.emp_address2 != '') {
                            Str += '<div><label>Address2</label><span class="m-l-2 mr-2">:</span</div>' +
                                '<div>' + value.emp_address2 + '</div>';
                        }

                        Str += '<div><label>Phone</label><span class="m-l-2 mr-2">:</span>' + (((value.emp_phone == null || value.emp_phone == '')) ? 'NA' : value.emp_phone) + '</div>' +
                            '<div><label>Email</label><span class="m-l-2 mr-2">:</span>' + (((value.emp_email == null || value.emp_email == '')) ? 'NA' : value.emp_email) + '</div>';

                        //Hide contact person detail if emp_contact_person_id is empty
                        if (value.contact_person !== '') {
                            Str += '<div><label>Contact Person</label><span class="m-l-2 mr-2">:</span>' + value.contact_person + '</div>' +
                                '<div><label>Contact Person Mobile</label class="m-l-2 mr-2"><span>:</span>' + value.contact_person_mobile + '</div>' +
                                '<div><label>Contact Person Email</label class="m-l-2 mr-2"><span>:</span>' + value.contact_person_email + '</div>';
                        }
                        Str += '</div>';
                        Str += '<hr class="mt-2" style="margin-bottom: 9px;"><span>' + (value.emp_main_status == 1 ? '' : btnSetDefault) + '&nbsp;' + '&nbsp;' + btnEdit + btnStatus + '&nbsp;' + (value.emp_main_status == 1 ? '' : btnDelete) + '</span>' +
                            '</div></div>';

                    });
                    Str += '</div>';
                    $('.divEmpLocation').html(Str);
                    if (status == 1) {
                        $('.btnDefaultStatus').hide();
                        $('.btnLocationStatus').hide();
                    }
                }
                else {
                    $('#spnLocationActive').html('0');
                    $('#spnLocationInactive').html('0');
                    $('.divEmpLocation').html('<span class="col-green">Not Available</span>');
                }
            });
    },
    GetLocationColumns: function (wid, action, location_id) {
        $('.clsEmpLocationField').html('');
        var EmpId = RequestChecksum;
        var Param = { WizardId: wid, ProfileId: EmpId, ProfileType: 'emp', SettingType: 1, location_id: location_id };
        ns_ajax.get(
            'Employer/GetProfileWizard',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    ns_employer.GenerateLocationFields(obj.WizardField, wid, action);
                }
            });
    },
    GenerateLocationFields: function (obj, id, action) {
        var StrVal = '', Control = '';
        $.each(obj, function (key, value) {
            var HideDiv = '', FillAdd = '';
            if (value.ws_field_name == 'emp_address1') { HideDiv = 'EmpLAddressDiv none'; FillAdd = 'txtfillEmpLAddress'; }
            else if (value.ws_field_name == 'emp_city') { HideDiv = 'EmpLCityDiv none'; FillAdd = 'txtfillEmpLCity'; }
            else if (value.ws_field_name == 'emp_country') { HideDiv = 'EmpLCountyDiv none'; FillAdd = 'txtfillEmpLCounty'; }

            var Placeholder = ((value.ws_place_holder == null || value.ws_place_holder == '') ? 'Enter ' + value.ws_field_label : value.ws_place_holder);
            var IsRequried = value.ws_isRequired == 0 ? '' : '<span>*</span>';
            var Attribute = 'data-fieldname="' + value.ws_field_name + '" data-fieldlabel="' + value.ws_field_label + '" data-required="' + value.ws_isRequired + '" data-wid="' + id + '" placeholder="' + Placeholder + '"';
            var FieldValue = $('#btnEmpLocationAddMore').attr('data-action') == 'edit' ? ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) : '';



            if (value.ws_field_type == 'text') {
                if (value.ws_field_name == 'emp_postcode') {
                    Control = '<div class="row m-l-2"><input id=txt-' + value.ws_field_id + ' class="form-control clsEmpLocation col-sm-8 txtPostcode" maxlength="15" ' + Attribute + ' value="' + FieldValue + '">&nbsp;<a id="btnLocationAddress" class="btn btn-primary col-sm-3 GetAddress2"><i class="zmdi zmdi-search">&nbsp;</i>Find</a></div>' +
                        '<div><span id="spannotfound2" class="spannotfound2" style="color: #FF0000;"></span></div>';
                    Control += '<div class="form-group divselectAddres2 none mt-3" ><select id="ddlEmpLocation" class="form-control"></select></div>';
                }
                else if (value.ws_field_name == 'emp_phone')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpLocation ChkLocationMobile" maxlength="11" ' + Attribute + ' value="' + FieldValue + '">';
                else
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsEmpLocation ' + FillAdd + '" ' + Attribute + ' value="' + FieldValue + '">';
            }
            else if (value.ws_field_type == 'select') {
                Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsEmpLocation"  ' + Attribute + '><option  value="' + FieldValue + '">Select</option></select>';
                ns_employer.BindCandidateAsEmployer('ddl-' + value.ws_field_id, FieldValue, action);
            }
            else {
                Control = '<label id=lbl-' + value.ws_field_id + '>' + value.ws_field_label + '</label>';
            }
            value.ws_field_name == 'emp_id' ? '' : StrVal += '<div class="form-group mt-2 ' + HideDiv + '"><label id="' + value.ws_field_name + '">' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
        });
        $('.clsEmpLocationField').html(StrVal);
        if (action == 'edit') {
            $(".EmpLAddressDiv").show();
            $('.EmpLCityDiv').show();
            $('.EmpLCountyDiv').show();
        }
    },
    ChangeGetLocationStatus: function (emp_id, Locationid, status, type) {
        var Param = '{emp_id:"' + emp_id + '" ,emp_location_id:"' + Locationid + '",Status:"' + status + '",type:"' + type + '" }';
        ns_ajax.post(
            'Employer/ChangeLocationsStatus',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK')
                {
                    //ShowAlertMessage("Message", "Status has been changed successfully.", "C");
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    DeleteLocation: function (Locationid, status, ulstatus) {
        var Param = '{ emp_location_id:"' + Locationid + '",status:"' + status + '" }';
        ns_ajax.post(
            'Employer/DeleteLocations',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Location has been deleted successfully.", "C");
                    ns_employer.GetLocation(ulstatus);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    BindCandidateAsEmployer: function (fieldId, FieldValue, action) {
        ns_ajax.get(
            'Employer/GetCandidateAsEmployer',
            '',
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var str = '<option value="">Select</option>';
                    $.each(obj, function (key, value) {
                        var name = value.contact_person_name.split('##')[0];
                        var mobile = value.contact_person_name.split('##')[1];
                        var Email = value.contact_person_name.split('##')[2];
                        str += '<option value=' + value.cnd_id + ' data-mobile="' + mobile + '" data-email="' + Email + '">' + name + '</option>';
                    });
                    $('#' + fieldId).html(str);

                    if (action == 'edit')
                        $('#' + fieldId).val(FieldValue);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    getCandidateJobShiftList: function () {
        var EmpId = $('#hdfEmpIdProfile').val();
        var Param = { EmpId: EmpId };
        ns_ajax.get(
            'Employer/GetCndJobShiftList',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), index = 1, CndjobShifts = "";
                    $.each(obj, function (key, value) {
                        CndjobShifts += '<tr>' +
                            '<td><b>' + index + '</b></td>' +
                            '<td><a href="#"><b>' + value.total_jobs + '</b></a></td>' +
                            '<td class="col-blue-grey"><b>' + value.total_duration + '</b></td>' +
                            '<td><span><b>' + value.job_type_title.split('-')[1] + '</b></span></td>' +
                            '<td>' +
                            '<span><b>' + value.cnd_name + '</b></span><br>' +
                            '<small><b><span>' + value.cnd_id + '</span> /<span class="col-green">' + value.cnd_role + '</span></b></small>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-brown"><i class="zmdi zmdi-pin">&nbsp;</i>' + value.cnd_address + '</span>' +
                            '</td>' +
                            '<td>' +
                            '<a class="btn btn-outline-primary btn-sm clsViewCndJobShifts" data-title="' + value.cnd_name + '" data-cnd-id="' + value.cnd_id + '" data-job-type="' + value.job_type_title.split('-')[0] + '" data-toggle="modal" data-target="#viewjobshifts"><i class="zmdi zmdi-eye">&nbsp</i>view</a>' +
                            '</td>' +
                            '</tr>';
                        index += 1;
                    });
                    $('#tbodyCandidates').html(CndjobShifts);
                }
                else
                    $('#tbodyCandidates').html("<tr><td colspan='6'><center>" + response + "<br/></center></td></tr>");
            });
    },
    ViewAllCndJobShifts: function (cndId, jobType) {
        var EmpId = $('#hdfEmpIdProfile').val();
        var Param = { EmpId: EmpId, CndId: cndId, JobType: jobType };
        ns_ajax.get(
            'Employer/ViewAllCndJobShifts',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), index = 1, row = "";
                    var totalDurations = 0;
                    $.each(obj, function (key, value) {
                        row += '<tr>' +
                            '<td><b>' + index + '</b></td>' +
                            '<td><span><b>' + value.job_id + '</b></span></td>' +
                            '<td class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.job_start_datetime2 + '</b></td>' +
                            '<td class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.job_end_datetime2 + '</b></td>' +
                            '<td><span><b>' + value.job_type_title.split('-')[1] + '</b></span></td>' +
                            '<td><span><b>' + value.job_duration + '</b></span></td>' +
                            '<td><span class="' + (value.job_status_label == "COMPLETED" ? 'col-green' : 'col-red') + '"><b>' + value.job_status_label + '</b></span></td>' +
                            '</tr>';
                        totalDurations = (parseFloat(totalDurations) + parseFloat(value.job_duration_in_hour) + (value.job_type == 'P' ? ' day(s)' : ' hr(s)'));
                        index += 1;
                    });
                    $('#tbodyCndJobShifts').html(row);
                    $('#totalDurations').html(totalDurations);
                }
            });
    },
    //Dashboard    
    getEmpDashboard: function () {
        var Param = { EmpId: '', status: 0, type: 'DASHBOARD' };
        ns_ajax.get(urls.employerApi + 'Get',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    call_tmpl_binder(obj, '/Template/dashboard_tmpl.html', '#Dashboard_Template', '#Dashboard_Placeholder');
                }
            });
    },
}


$(document).ready(function () {

    $(document).on('change', '#chk_overtime_allowed', function () {
        if ($(this).is(":checked")) {
            $("#divOvertimeDetails").show();

        } else {
            $("#divOvertimeDetails").hide();
        }
    });

    $(document).on('change', '#chk_salary_pension_eligible', function () {
        var pension_eligible = $(this).is(":checked");
        var salary_opsted_out = $('#chk_salary_opsted_out').is(":checked");
        if (pension_eligible == true && salary_opsted_out == true) {
            $("#divPensionDetails").hide();
        }
        else if (pension_eligible == true && salary_opsted_out == false) {
            $("#divPensionDetails").show();
        }
        else {
            $("#divPensionDetails").hide();

        }
    });
    $(document).on('change', '#chk_salary_opsted_out', function () {
        var pension_eligible = $('#chk_salary_pension_eligible').is(":checked");
        var salary_opsted_out = $(this).is(":checked");
        if (pension_eligible == true && salary_opsted_out==true) {
                $("#divPensionDetails").hide();           
        }
        else if (pension_eligible == true && salary_opsted_out == false) {
            $("#divPensionDetails").show();
        }
        else {
            $("#divPensionDetails").hide();

        }
    });
    $(document).on('change', '#ddlContractType', function () {
        if ($(this).val() == '2')
            $('#divFixedNotifyofexpiry').show('slow');
        else
            $('#divFixedNotifyofexpiry').hide('slow');

    });
    $(document).on('change', '#ddl_notice_period', function () {
        var period= $(this).val();
        if (period == 'No notice period')
            $('#divnotice_period').hide('slow');
        else {
            $('#divnotice_period').show('slow');
            $('#ddl_notify_of_expiry_on').val(period);
            
        }
           
    });
    $(document).on('change', '#chk_check_conducted', function () {
        if ($(this).is(":checked")) {
            $("#div_check_conducted").show('slow');

        } else {
            $("#div_check_conducted").hide('slow');
        }
    });
    $(document).on('change', '#ddl_work_status', function () {
        var workstatus = $(this).val();
        if (workstatus == 'Pre-settled') {
            $('#Pre-settled').show('slow');
            $('#div_work_status').show('slow');
        }
        else if (workstatus == 'Not declared') {
            $('#Pre-settled').hide('slow');
            $('#div_work_status').show('slow');
        }
        else
            $('#div_work_status').hide('slow');
    });

    $(document).on('change', '#ddl_company_director', function () {
        if ($(this).val() == 1) {
            $('#ddl_director_calculation_method').val('');
            $('#txt_director_appointment_date').val('');
            $('#divDirectorCaculationMethod').show('slow');
        }
        else {
            $('#ddl_director_calculation_method').val('');
            $('#txt_director_appointment_date').val('');
            $('#divDirectorCaculationMethod').hide('slow');
        }
    });

    $(document).on('change', '#ddl_StudentLoan', function () {
        if ($(this).val() == '1') {
            $('#ddl_StudentLoanPlanType').val('');
            $('#divStudentLoanPlanType').show('slow');
        }
        else {
            $('#ddl_StudentLoanPlanType').val('');
            $('#divStudentLoanPlanType').hide('slow');
        }
    });

    $(document).on('change', '#ddl_BankAccountType', function () {
        if ($(this).val() == 'b') {
            $('#txtCompanyName').val('');
            $('#txtCompanyRegNo').val('');
            $('#RegCertificate').val('');
            $('#divBusinessAccountDetails').show('slow');
        }
        else {
            $('#txtCompanyName').val('');
            $('#txtCompanyRegNo').val('');
            $('#RegCertificate').val('');

            $('#divBusinessAccountDetails').hide('slow');
        }
    });

    $(document).on('change', '#chk_work_pattern_status', function () {
        if ($(this).is(":checked")) {
            $('#ddlWorkingTimePattern').val('0');
            $("#div_work_pattern_slot").show('slow');

        } else {
            $("#div_work_pattern_slot").hide('slow');

        }
    });
    $(document).on('click', '#btnupdatestatement', function () {
        var statements = $(this).attr('data-statement');
        $('#txtPersonalStatement').val(statements);
    });

    //Overview Absence sCalender

    //Prev
    $(document).on('click', '#btnpreviousweekAbsence', function () {
        var weekdate = $(this).attr('startdate');     
        ns_employee.getOverviewAbsencesCalender('prev', weekdate);
    });

    //Next
    $(document).on('click', '#btnnextweekAbsence', function () {
        var weekdate = $(this).attr('enddate');     
        ns_employee.getOverviewAbsencesCalender('next', weekdate);
    });

    //Refresh
    $(document).on('click', '#btnrefreshAbsencesCalender', function () {
        ns_employee.getOverviewAbsencesCalender('current', '');
    });

    $(document).on('click', '#btnRefreahEmployeeAnualLeaves', function () {
        var cnd_id=$('#btnRefreahEmployeeAnualLeaves').attr('data-id');
        ns_employee.getEmployeeAnualAbsences(cnd_id);

    });


    $(document).on('click', '.btnUpdateLeaves', function () {
        var cnd_id = $(this).attr('data-id');
        ns_employee.UpdateEmoplyeeLeaves(cnd_id,$(this).attr('id'));
    });
    

    $(document).on('click', '.clsCurrentStatus', function () {
        var CurrentStatus = $(this).attr('data-val');       
        $("input[name=rdoWorkStatus][value=" + CurrentStatus + "]").prop('checked', true);
    });   
});



ns_employee = {        
    getOverviewAbsencesCalender: function (type, weekdate) {     
        $('#OverviewAbsences_placeholder').html('<div style="text-align:center; line-height:40px;width: 100%; padding:25px">Loading...<img src="/images/spin.gif" /></div>');
        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: leaveApi + "api/v1/MyLeave?request_type=" + type + "&req_date=" + weekdate,
            headers: { 'token': Token, 'checksum': RequestChecksum,'Content-Type': 'application/json' },
            success: function (data) {
                if (data.Status == 'OK')                     
                    call_tmpl_binder(data.Response[0], '/Template/cnd_profile_tmpl.html', '#OverviewAbsences_Template', '#OverviewAbsences_placeholder');
                else 
                    $('#OverviewAbsences_placeholder').html('<div style="text-align:center; line-height:40px;width: 100%; padding:25px">Not Available</div>');

            },
            error: function (result) {
                $('#OverviewAbsences_placeholder').html('<div style="text-align:center; line-height:40px;width: 100%; padding:25px">Not Available</div>');
            }
        });
    },   
    getEmployeeAnualAbsences: function (cnd_id) {     
        $('#btnRefreahEmployeeAnualLeaves').attr('data-id', cnd_id);
        $('#EmployeeLeaveTotal_placeholder').html('<div style="text-align:center; line-height:40px;width: 100%; padding:25px">Loading...<img src="/images/spin.gif" /></div>');
        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: leaveApi + "api/v1/MyLeave?id="+cnd_id,
            headers: { 'token': Token, 'checksum': RequestChecksum, 'Content-Type': 'application/json' },
            success: function (data) {               
                if (data.Status == 'OK') {
                    try {
                        if (data.Response.length > 0) {
                            if (data.Response[0].data.length > 0) {
                                call_tmpl_binder(data.Response[0], '/Template/cnd_profile_tmpl.html', '#EmployeeLeaveTotal_Template', '#EmployeeLeaveTotal_placeholder');

                                var total_leave = data.Response[0].data[0].annual_leave_allowance_total;                                
                                ns_employee.updateLeave(total_leave, cnd_id,'');
                            }
                            else {
                                $('#EmployeeLeaveTotal_placeholder').html('');
                                var link = 'Setup the leave by simpley clicking on <a href="/leave" class="col-green"><i class="ti ti-plus"></i> Setup Leave</a>';
                                $('#EmployeeLeaveTotal_placeholder').append('<div  style="text-align:center;width: 100%;">' + nodata(link) + '</div>');
                            }
                        }
                        else {
                            $('#EmployeeLeaveTotal_placeholder').html('');
                            var link = 'Setup the leaves by simpley clicking on <a href="/leave" class="col-green"><i class="ti ti-plus"></i> Setup Leave</a>';
                            $('#EmployeeLeaveTotal_placeholder').append('<div  style="text-align:center;width: 100%;">' + nodata(link) + '</div>');

                        }
                    }
                    catch (ex) {
                        $('#EmployeeLeaveTotal_placeholder').html('');
                        var link = 'Setup the leaves by simpley clicking on <a href="/leave" class="col-green"><i class="ti ti-plus"></i> Setup Leave</a>';
                        $('#EmployeeLeaveTotal_placeholder').append('<div  style="text-align:center;width: 100%;">' + nodata(link) + '</div>');
                    }
                }
                else {
                    $('#EmployeeLeaveTotal_placeholder').html('');
                    var link = 'Setup the leaves by simpley clicking on <a href="/leave" class="col-green"><i class="ti ti-plus"></i> Setup Leave</a>';
                    $('#EmployeeLeaveTotal_placeholder').append('<div  style="text-align:center;width: 100%;">' + nodata(link) + '</div>');

                }
            },
            error: function (result) {
                $('#EmployeeLeaveTotal_placeholder').html('<div style="text-align:center; line-height:40px;width: 100%; padding:25px">Not Available</div>');
            }
        });
    },
    UpdateEmoplyeeLeaves: function (cnd_id, buttonId) {
        var total_leave = 0;
        $('#' + buttonId).html('<img src="/images/spin.gif" />');
        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: leaveApi + "api/v1/MyLeave?id=" + cnd_id,
            headers: { 'token': Token, 'checksum': RequestChecksum, 'Content-Type': 'application/json' },
            success: function (data) {
                $('#' + buttonId).html('(<b>' + total_leave + '</b>) Sync');
                if (data.Status == 'OK') {                   
                        if (data.Response.length > 0) {
                            if (data.Response[0].data.length > 0) {                               
                                total_leave = data.Response[0].data[0].annual_leave_allowance_total;
                                ns_employee.updateLeave(total_leave, cnd_id,'manual');
                                $('#' + buttonId).html('(<b>' + total_leave +'</b>) Sync');
                            }                            
                        }                                    
                }               
            },
           
        });
    },
    getOverview: function () {
        var param = '{"action":"get","section":"overview"}';
        var params = { json: param }
        $('#Overview_placeholder').html('<div class="text-center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.employees,
            params,
            function (data) {               
                if (data.Status == 'OK') {                       
                    call_tmpl_binder(data, '/Template/cnd_profile_tmpl.html', '#Overview_Template', '#Overview_placeholder');

                    setTimeout(
                        function () {
                            ns_employee.getOverviewAbsencesCalender('current','');
                        }, 1000);
                   
                }               
            });
    },  
    get: function (getInfoFor, act) {       
        var serverResponse;
        profile_Id = $('.profile-id').attr('data-id');
      
        var param = '{"action":"get","section":"' + getInfoFor + '","cnd_id":"' + profile_Id + '","emp_location_ids":"' + emp_location_ids + '" ,"emp_role_id":"' + emp_role_id + '","emp_search":"' + emp_search + '","cnd_sub_type":"' + cnd_sub_type + '","startDate":"' + cnd_profile_absence_start_date + '","endDate":"' + cnd_profile_absence_end_date + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param }
        //var params = { cndId: profile_Id, startDate: cnd_profile_absence_start_date, endDate: cnd_profile_absence_end_date, cndProfile: getInfoFor, cndSubType: cnd_sub_type, action: 'GET' }
        if (getInfoFor.toUpperCase() === 'PROFILES') {             
            if (act=='more')
                $('.loadmoreEmployees').html('Loading...<img src="/images/spin.gif" />');
            else
                $('#CndProfiles_Placeholder').html('<tr><td colspan="12" style="text-align:center;">Loading...<img src="/images/spin.gif" /></td></tr>')
        }
        if (getInfoFor.toUpperCase() == 'PERSONAL-INFO' || getInfoFor.toUpperCase() == 'EMP-DASHBOARD') {
            $('#CndProfileHeader_Placeholder').html('<div class="text-center">Loading...<img src="/images/spin.gif" /></div>');
            $('#CndProfileInfoHeader_Placeholder, #EmployeeProfileTabs_Placeholder, #TabDashboard_Placeholder').html('');
        }
        
        ns_ajax.get(
            urls.employees,
            params,
            function (data) {
              
                if (getInfoFor.toUpperCase() === 'PROFILES')
                    $('.loadmoreEmployees').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data !== null) {
                    if (data.Status == 'OK') {
                        if (data.Response.length > 0)
                            serverResponse = data.Response;// jQuery.parseJSON(response.split('|')[1]);
                        else
                            objCndData = null;

                        if (getInfoFor.toUpperCase() == 'PERSONAL-INFO' || getInfoFor.toUpperCase() == 'EMP-DASHBOARD') {
                            call_tmpl_binder(data.Response.ProfileHeader, '/Template/cnd_profile_tmpl.html', '#CndProfileHeader_Template', '#CndProfileHeader_Placeholder');
                            call_tmpl_binder(data.Response.ProfileHeader, '/Template/cnd_profile_tmpl.html', '#CndProfileInfoHeader_Template', '#CndProfileInfoHeader_Placeholder');
                            call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#EmployeeProfileTabs_Template', '#EmployeeProfileTabs_Placeholder');
                            call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#CndProfileDashboard_Template', '#TabDashboard_Placeholder');

                            ns_employee.tabAccountDeatils(data.Response.Profile);
                            ns_employee.tabProfile(data.Response.Profile);
                            call_tmpl_binder(data.Response.Locations, '/Template/cnd_profile_tmpl.html', '#CndLocations_Template', '#Locations_Placeholder');
                            call_tmpl_binder(data.Response.Contacts, '/Template/cnd_profile_tmpl.html', '#CndContacts_Template', '#TabContactsPlaceholder');
                            call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#AbsenceForm_Template', '#TabAbsenses_Placeholder');
                            call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#ddlLeaveCategory_Template', '#ddlLeaveCategory_placeholder');
                            call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                          
                            setTimeout(
                                function () {
                                    $('.clsemptabs').removeClass('in active');
                                    $('#TabDashboard_Placeholder').addClass('in active');
                                    if (data.Response.ProfileHeader[0].cnd_sub_type == 'A') {
                                        $('#divAnualLeaveWizard').hide();
                                        $('#divDashboardJobsWizard').addClass('col-lg-12 col-xl-12');
                                        $('#divDashboardJobsWizard').removeClass('col-lg-6').removeClass(' col-xl-6');
                                    }
                                    else {
                                        $('#divAnualLeaveWizard').show();
                                        $('#divDashboardJobsWizard').addClass('col-lg-6 col-xl-6');
                                        $('#divDashboardJobsWizard').removeClass('col-lg-12').removeClass(' col-xl-12');
                                        //My Annual Leave
                                      
                                        ns_employee.getEmployeeAnualAbsences(profile_Id);

                                        //Dashboard (Training / Compliance)
                                        call_tmpl_binder(data.Response.EmployeeDashboard[2], '/Template/cnd_profile_tmpl.html', '#EmployeeDashbaordDocs_Template', '#EmployeeDashbaordDocs_Placeholder');
                                      
                                    }
                                }, 500);

                        }
                        else if (getInfoFor.toUpperCase() === 'COMPLIANCE')
                            call_tmpl_binder(null, '/Template/cnd_profile_tmpl.html', '#CndCompliance_Template', '#TabCompliance_Placeholder');


                        else if (getInfoFor.toUpperCase() === 'CONTACTS')
                            ns_employee.tabContacts(serverResponse);
                        else if (getInfoFor.toUpperCase() === 'LOCATIONS')
                            ns_employee.tabLocations(serverResponse);
                        else if (getInfoFor.toUpperCase() === 'WORK-SCHEDULE')
                            ns_employee.tabWorkSchedule(serverResponse);
                        else if (getInfoFor.toUpperCase() === 'PROFILES')
                            ns_employee.allProfiles(serverResponse, act);
                        else if (getInfoFor.toUpperCase() === 'PROFILESEXPORT') {
                            window.location = data.Response.link.split('###')[1];
                        }

                    }
                    else {
                        ns_employee.allProfiles(null, act);
                    }
                }
                else {
                    ns_employee.allProfiles(null, act);
                }
            });
    },
    post: function (params, InfoOf, action, evt) {
        action = action.toUpperCase();
        InfoOf = InfoOf.toUpperCase();
        var id = getAttribute(evt, 'id');
        id = '#' + id;
        var btnText = $(id).html();
       
          
        $(id).html('Wait...<img src="/images/spin.gif" />');
       
        var serverResponse;
        ns_ajax.post(
            urls.employees + 'post',
            params,
            function (response) {   
                
                    if (InfoOf == 'SIGNUP') {
                        $(id).html('Register Now');
                        if (response == 'UPGRADESUBS') {
                            $('#spanAccountRenewalTitle').html('Upgrade subscription');
                            $('#divAccountRenewalMessage').html('Current subscription has exceeded the maximum limit of employee(s)');
                            $('#btnsubsRenewal').html('Upgrade Subscription');
                            $("#ModalSubcription").modal('show');
                            return false;
                        }
                    }
                else
                    $(id).html(btnText);
              
                if (action == 'CHGPASS') {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "Password has been changed successfully.", "C");
                        $('#txtCurrentPassword').val('');
                        $('#txtNewPassword').val('');
                        $('#txtConfirmPassword').val('');
                    }
                    else
                        ShowAlertMessage("Message", response.split('|')[1], "A");
                }
                else {
                    if (response.split('|')[1] != "") {
                        try {                          
                            serverResponse = jQuery.parseJSON(response.split('|')[1]);
                        } catch (e) {                           
                            serverResponse = null;
                            ShowAlertMessage("Message", response.split('|')[1], "A");
                            return false;
                        }
                    }
                    else
                        serverResponse = null;

                    
                   
                    if (action == 'ADD') {
                        var isExists = '';
                        $.each(serverResponse, function (key, value) {
                            isExists = value.exists;
                        });

                      
                        if (InfoOf == 'SIGNUP') {
                          
                            if (isExists.toUpperCase() == 'ADDED') {
                                ShowAlertMessage("Message", "Employee saved successfully", "C");
                                page_number = 0; page_size = 10;
                                ns_employee.get('Profiles', '');

                                $('#add_internal').modal('hide');
                                $(".modal-backdrop").css('display', 'none');
                            }
                            else {                              
                                ShowAlertMessage("Message", isExists, "A");
                            }
                        }
                        else if (InfoOf == 'PERSONAL-INFO') {
                            if (isExists.toUpperCase() === 'ADDED') {
                                ShowAlertMessage("Message", "Employee saved successfully", "C");
                                page_number = 0; page_size = 10;
                                ns_employee.get('Profiles', '');

                                $('#add_internal').modal('hide');
                                $(".modal-backdrop").css('display', 'none');
                            }
                            else {
                                ShowAlertMessage("Message", isExists, "A");
                            }
                        }
                        else if (InfoOf == 'CONTACTS') {
                            if (isExists.toUpperCase() === 'ADDED') {
                                $('.addContactForm').hide(0);
                                $('.contact-new').show(500);
                                ShowAlertMessage("Message", "Contact saved successfully", "C");
                                if (params != null) {
                                    var obj_result = jQuery.parseJSON(params);
                                    jQuery('#CndContacts_Template').tmpl(obj_result).appendTo('#TabContactsPlaceholder');
                                }
                            }
                            //else {
                            //    ShowAlertMessage("Message", isExists, "A");
                            //}
                        }
                        else if (InfoOf == 'ABSENCE') {
                            //if (isExists.toUpperCase() === 'ADDED') {
                            if (cnd_profile_action_from.toLowerCase() == 'absence_modal') {
                                ShowAlertMessage("Message", "Absence added successfully", "C");
                                $('#add_timeoff').modal('hide');
                                $(".modal-backdrop").css('display', 'none');
                                ns_employee.tabAbsence(serverResponse);
                            }
                            //}
                            //else {
                            //    ShowAlertMessage("Message", isExists, "A");
                            //}
                        }
                    }
                    else if (action == 'UPDATE') {
                        if (InfoOf == 'PERSONAL-INFO' || InfoOf == 'CONTACTS') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });
                        }
                        if (InfoOf == 'PERSONAL-INFO') {
                            if (isExists.toUpperCase() === 'UPDATED') {
                                ShowAlertMessage("Message", "Employee:" + InfoOf + " updated successfully", "C");
                                $('.disply_row').hide(0);
                                $('.disply_none_row').show(500);
                                ns_employee.get('Personal-Info');
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");
                        }
                        else if (InfoOf == 'CONTACTS') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });

                            if (isExists.toUpperCase() === 'UPDATED') {
                                ShowAlertMessage("Message", "Contact Information has been updated successfully", "C");
                                $('#contact-firstname' + dynamic_id).html($("#txtContactsFirstName" + dynamic_id).val());
                                $('#contact-lastname' + dynamic_id).html($("#txtContactsLastName" + dynamic_id).val());
                                $('#contact-mobile' + dynamic_id).html($("#txtContactsMobileNumber" + dynamic_id).val());
                                $('#contact-homephone' + dynamic_id).html($("#txtContactsHomeNumber" + dynamic_id).val());
                                $('#contact-workphone' + dynamic_id).html($("#txtContactsWorkNumber" + dynamic_id).val());
                                $('#contact-relationship' + dynamic_id).html($("#ddlContactsRelationship" + dynamic_id + " option:selected").val());
                                $('#contact-addressline1' + dynamic_id).html($("#txtContactsAddressLine1" + dynamic_id).val());
                                $('#contact-addressline2' + dynamic_id).html($("#txtContactsAddressLine2" + dynamic_id).val());
                                $('#contact-postcode' + dynamic_id).html($("#txtContactsPostCode" + dynamic_id).val());
                                $('#contact-city' + dynamic_id).html($("#txtContactsCity" + dynamic_id).val());
                                $('#contact-county' + dynamic_id).html($("#txtContactsCounty" + dynamic_id).val());

                                $('.disply__editcontact' + dynamic_id).hide();
                                $('.disply__viewcontact' + dynamic_id).show('slow');
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");

                        }
                        else if (InfoOf == 'LOCATIONS' || InfoOf=='SETDEFAULTLOCATIONCND') {
                            $('#chkAllLocations').prop('checked', false);
                            ShowAlertMessage("Message", "Employee: Locations updated successfully", "C");
                            ns_employee.get('Locations');
                        }
                        else if (InfoOf == 'ABSENCE') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });
                            if (isExists.toUpperCase() === 'UPDATED') {
                                ShowAlertMessage("Message", "Employee: ABSENCE-INFO  updated successfully", "C");
                                $('.disply__editabsence' + dynamic_id).hide('slow');
                                $('.disply__viewabsence' + dynamic_id).show('slow');
                                ns_employee.get('all-absences');
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");
                        }
                        else if (InfoOf == 'ACCOUNT-STATUS') {
                            var htmlToAppend = '<a href="#" class="cnd-change-account-status" data-val="' + serverResponse[0].cnd_id + '" data-account-status="' + serverResponse[0].account_status_label + '">' + serverResponse[0].account_status_label_html_circle + '  ' + (serverResponse[0].account_status_label == 'ACTIVE' ? '<b style="margin-left:12px;font-size:12px;">on </b>' + serverResponse[0].cnd_activation_date : '<i class="fa fa-long-arrow-left bold ml-2 pl-1" style="color: #9da2ab;"> Click here to activate</i>') + '</a>';
                            $('.cnd-change-account-status-container').empty().append(htmlToAppend);
                        }
                        else if (InfoOf == 'GENERAL-TERMS') {
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                        }
                        else if (InfoOf == 'SALARY-TERMS') {
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                        }
                        else if (InfoOf == 'TAX-TERMS') {
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                        }
                        else if (InfoOf == 'ROLE-TERMS') {
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                        }
                        else if (InfoOf == 'TERMINATION-TERMS') {
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');

                            setTimeout(function () {
                                jQuery('#headingfour').click();
                            }, 500);
                            
                        }
                        else if (InfoOf == 'SENSITIVE-TERMS') {
                            console.log(serverResponse);
                            ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                            call_tmpl_binder(serverResponse, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
                        }
                        else if (InfoOf == 'NOTES') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });

                            if (isExists == 'Updated') {
                                ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                                $('.disply_none_rownote').show('slow');
                                $('.disply_rownote').hide('slow');
                                $('.term-notes').html($('#txtTermNotes').val());
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");

                        }
                        else if (InfoOf == 'WORK-STATUS') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });

                            if (isExists == 'Updated') {                            
                                ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                                $('.clsCurrentStatus').html($('input[name="rdoWorkStatus"]:checked').attr('data-status'));
                                $('#CurrentStatusModal').modal('hide');
                                $(".modal-backdrop").css('display', 'none');
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");

                        }
                        else if (InfoOf == 'CONTACT-INFO') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.result;
                            });

                            if (isExists == 'Updated') {
                                ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                                $('.disply_none_rowmed').show('slow');
                                $('.disply_rowmed').hide('slow');

                                $('.cls_account_email').html($("#txt_account_email").val());
                                $('.cls_personal_email').html($('#txt_personal_email').val());
                                $('.cls_home_phone').html($('#txt_home_phone').val());
                                $('.cls_mobile_phone').html($('#txt_mobile_phone').val());
                                $('.cls_work_phone').html($('#txt_work_phone').val());
                                $('.cls_work_extension').html($('#txt_work_extension').val());
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");

                        }
                        else if (InfoOf == 'MEDICAL-INFO') {
                            var isExists = '';
                            $.each(serverResponse, function (key, value) {
                                isExists = value.exists;
                            });

                            if (isExists == 'Updated') {
                                ShowAlertMessage("Message", "Employee: " + InfoOf + " has been updated successfully", "C");
                                $('.disply_none_rowmed').show('slow');
                                $('.disply_rowmed').hide('slow');
                                $('.covid_vaccinated').html($("#ddl_covid_vaccinated option:selected").val());
                                $('.covid_vaccinated_comments').html($('#txt_covid_vaccinated_comments').val());
                            }
                            else
                                ShowAlertMessage("Message", isExists, "A");

                        }
                        else {
                            ShowAlertMessage("Message", "Employee:" + InfoOf + " updated successfully", "C");
                            $('.disply_none_rowsummery').hide('slow');
                            $('.disply_rowsummery').show('slow');
                        }
                    }
                }
            });
    },
    add: function (addInfoFor,evt) {
        if (addInfoFor.toLowerCase() == 'signup') {           
            var employeeData, arr_Locs = [];
            var cndSubType = $("#ddlCndType option:selected");
            var org_id = $("#ddlAgencies option:selected");
            var title = $("#ddlEmpTitle option:selected");
            var firstName = $("#txtCndFirstName");
            var lastName = $("#txtCndLastName");
            var emailId = $("#txtCndEmailId");
            var mobileNumber = $("#txtCndMobileNumber");                      
            var jobRole = $("#ddlCndJobRole option:selected");            
            var location = $("#ddlCndLocation option:selected");
            var invitation_status = $('#chkinvitation_status').prop('checked') ? 1 : 0;
            location.each(function () {             
                arr_Locs.push($(this).val());
            });            
            
            if (cndSubType.val() == 0) {
                cndSubType.focus();
                ShowAlertMessage("Message", "Please select employee type !", "A");
                return false;
            }
            if (cndSubType.val()=='A' && org_id.val() == '0') {
                org_id.focus();
                ShowAlertMessage("Message", "Please select agency !", "A");
                return false;
            }
            
            if (title.val() == '0') {
                title.focus();
                ShowAlertMessage("Message", "Please select title !", "A");
                return false;
            }
            if (firstName.val().length == 0) {
                firstName.focus();
                ShowAlertMessage("Message", "Please enter first name !", "A");
                return false;
            }

            if (emailId.val().length == 0) {
                emailId.focus();
                ShowAlertMessage("Message", "Please enter email id !", "A");
                return false;
            }
            else {
                if (!IsEmail(emailId.val())) {
                    emailId.focus();
                    ShowAlertMessage("Message", "Please enter valid email id !", "A");
                    return false;
                }
            }
            if (mobileNumber.val().length == 0) {
                mobileNumber.focus();
                ShowAlertMessage("Message", "Please enter mobile number !", "A");
                return false;
            }
            else {
                if (mobileNumber.val().length < 10) {
                    mobileNumber.focus();
                    ShowAlertMessage("Message", "Please enter correct mobile number !", "A");
                    return false;
                }
            }           
            if (jobRole.val() == 0) {
                jobRole.focus();
                ShowAlertMessage("Message", "Please select job role", "A");
                return false;
            }
          
            if (cndSubType.val()!=='A' && arr_Locs.length==0) {
                location.focus();
                ShowAlertMessage("Message", "Please select location", "A");
                return false;
            }      
           
             employeeData = {
                "action": 'signup',
                "cnd_profile": 'personal-info',
                "cnd_sub_type": cndSubType.val(),                 
                "cnd_title": title.val(),
                "first_name": firstName.val(),
                "last_name": lastName.val(),
                "email_id": emailId.val(),
                "mobile_number": mobileNumber.val(),
                "org_id": cndSubType.val()=='A'?org_id.val():"0",
                "role_id": jobRole.val(),
                "location_ids": arr_Locs,
                "invitation_status": invitation_status,
            }
            var strFinal = "[" + JSON.stringify(employeeData) + "]";           
         
           ns_employee.post(strFinal, addInfoFor, 'ADD',evt);
        }

        else if (addInfoFor.toLowerCase() == 'personal-info') {
            var employeeData, arrLocs = [], fileUploader, title = '', arrProfilePic = [], profilePic = '', fileExt = '', firstName = '', lastName = '', cndImage = '', emailId = '', mobileNumber = '', contractType = '', weeklyHrs = '0', salary = '=', jobRole = '', jobTitle = '', location = '';
            title = $("#ddlEmpTitle option:selected");
            firstName = $("#txtCndFirstName");
            lastName = $("#txtCndLastName");
            emailId = $("#txtCndEmailId");
            mobileNumber = $("#txtCndMobileNumber");
            cndSubType = $("#ddlCndType option:selected");
            weeklyHrs = $("#txtCndWeeklyHours");
            salary = $("#txtCndSalary");
            jobRole = $("#ddlCndJobRole option:selected");
            jobTitle = $("#txtCndJobTitle");
            location = $("#ddlCndLocation option:selected");
           
            //Get all selected locations
            location.each(function () {
                arrLocs.push($(this).val());
            });
           
            if (title.val() == 0) {
                title.focus();
                ShowAlertMessage("Message", "Please select title !", "A");
                return false;
            }
            if (firstName.val().length == 0) {
                firstName.focus();
                ShowAlertMessage("Message", "Please enter first name !", "A");
                return false;
            }
            
            if (emailId.val().length == 0) {
                emailId.focus();
                ShowAlertMessage("Message", "Please enter email id !", "A");
                return false;
            }
            else {
                if (!IsEmail(emailId.val())) {
                    emailId.focus();
                    ShowAlertMessage("Message", "Please enter valid email id !", "A");
                    return false;
                }
            }
            if (mobileNumber.val().length == 0) {
                mobileNumber.focus();
                ShowAlertMessage("Message", "Please enter mobile number !", "A");
                return false;
            }
            if (cndSubType.val() == 0) {
                cndSubType.focus();
                ShowAlertMessage("Message", "Please select contract type !", "A");
                return false;
            }
            //if (weeklyHrs.val() == '') {
            //    weeklyHrs.focus();
            //    ShowAlertMessage("Message", "Please enter weekly hours !", "A");
            //    return false;
            //}
            //if (salary.val() == '') {
            //    salary.focus();
            //    ShowAlertMessage("Message", "Please enter salary !", "A");
            //    return false;
            //}
            if (jobRole.val() == 0) {
                jobRole.focus();
                ShowAlertMessage("Message", "Please select job role !", "A");
                return false;
            }
            //if (jobTitle.val().length == '') {
            //    jobTitle.focus();
            //    ShowAlertMessage("Message", "Please enter job title !", "A");
            //    return false;
            //}
            if (location.val() == 0) {
                location.focus();
                ShowAlertMessage("Message", "Please select location !", "A");
                return false;
            }

            //     // geting file extention here
            //fileExt = fileUploader.get(0).files[0].name.split(/[.]+/).pop();
            //arrProfilePic.push(fileUploader.get(0).files[0]);
            //     // converting file into base64 here
            //arrProfilePic.push(fileUploader)
            //let customJsonFiles = processAllAttachedFiles(arrProfilePic);
            //customJsonFiles.then(function (promise) {
            //    $.each(arrDocAttachFiles_Data, function (key, attachData) {
            //        profilePic = promise[key].base64StringFile;
            //    });
            //});
            //console.log(profilePic);
            employeeData = {
                "action": 'Add',
                "cnd_profile": addInfoFor,
                "cnd_Id": 0,
                "cnd_image": cndImage,
                "cnd_title": title.val(),
                "first_name": firstName.val(),
                "last_name": lastName.val(),
                "email_id": emailId.val(),
                "mobile_number": mobileNumber.val(),
                "cnd_sub_type": cndSubType.val(),
                "weekly_hrs": "0",//weeklyHrs.val(),
                "salary": "0",//salary.val(),
                "job_title": jobTitle.val(),
                "role_id": jobRole.val(),
                //"profile_pic": profilePic,
                //"file_extension":fileExt,
                "location_ids": arrLocs,
            }
            var strFinal = "[" + JSON.stringify(employeeData) + "]";
           
            ns_employee.post(strFinal, addInfoFor, 'Add',evt);
        }
        else if (addInfoFor.toLowerCase() == 'contacts') {
            var contactsData, isPrimary, title = '', firstName = '', lastName = '', mobileNumber = '', homeNumber = '', workNumber = '', relationship = '', postcode = '', addressLine1 = '', addressLine2 = '', city = '', county = '';
            firstName = $("#txtContactsFirstName");
            lastName = $("#txtContactsLastName");;
            mobileNumber = $("#txtContactsMobileNumber");
            homeNumber = $("#txtContactsHomeNumber");
            isPrimary = $('#chkContactsIsPrimary');
            workNumber = $("#txtContactsWorkNumber");
            relationship = $("#ddlContactsRelationship option:selected");
            postcode = $("#txtContactsPostCode");
            addressLine1 = $("#txtContactsAddressLine1");
            addressLine2 = $("#txtContactsAddressLine2");
            city = $("#txtContactsCity");
            county = $("#txtContactsCounty");
            if (firstName.val().length == 0) {
                firstName.focus();
                ShowAlertMessage("Message", "Please enter first name !", "A");
                return false;
            }
            if (mobileNumber.val().length == 0) {
                mobileNumber.focus();
                ShowAlertMessage("Message", "Please enter mobile number !", "A");
                return false;
            }
            if (relationship.val() == 0) {
                relationship.focus();
                ShowAlertMessage("Message", "Please select relationship !", "A");
                return false;
            }
            if (addressLine1.val().length > 0) {
                if (postcode.val().length == 0) {
                    postcode.focus();
                    ShowAlertMessage("Message", "Please enter postcode !", "A");
                    return false;
                }
                else {
                    if (addressLine1.val().length == 0) {
                        addressLine1.focus();
                        ShowAlertMessage("Message", "Please enter address line 1 !", "A");
                        return false;
                    }
                    if (city.val().length == 0) {
                        city.focus();
                        ShowAlertMessage("Message", "Please enter city !", "A");
                        return false;
                    }
                    if (county.val().length == 0) {
                        county.focus();
                        ShowAlertMessage("Message", "Please enter county !", "A");
                        return false;
                    }
                }
            }
         
            contactsData = {
                "action": 'Add',
                "row_number": $('#TabContactsPlaceholder > div').length + 1,
                "cnd_profile": addInfoFor,
                "cnd_id": $('.profile-id').attr('data-id'),
                "first_name": firstName.val(),
                "last_name": lastName.val(),
                "mobile": mobileNumber.val(),
                "mobile_number": mobileNumber.val(),
                "home_number": homeNumber.val(),
                "home_phone": homeNumber.val(),
                "work_number": workNumber.val(),
                "work_phone": workNumber.val(),
                "relationship": relationship.val(),
                "primary_contact": (isPrimary.is(':checked') ? 1 : 0),
                "postcode": postcode.val(),
                "address_line1": addressLine1.val(),
                "address_line2": addressLine2.val(),
                "city": city.val(),
                "county": county.val(),
                "country": county.val()
            }
            var strFinal = "[" + JSON.stringify(contactsData) + "]";
            ns_employee.post(strFinal, addInfoFor, 'Add',evt);
        }
        else if (addInfoFor.toLowerCase() == 'absence') {
            var absenceType, leave, startDate, startTime, endDate, endTime, details;
            if (cnd_profile_action_from.toLowerCase() == 'absence_modal') {
                absenceType = $("#ddlLeaveCategory_placeholder option:selected");
                leave = $("input[name=rdoAbsenceLeave]:checked");
                startDate = $("#txtAbsenceStartDate");
                startTime = $("#txtAbsenceStartTime");
                endDate = $("#txtAbsenceEndDate");
                endTime = $("#txtAbsenceEndTime");
                details = $("#txtAbsenceDetails");
            }
            else {
                absenceType = $("#ddlLeaveCategory_placeholder option:selected");
                leave = $("input[name=rdoAbsenceLeave]:checked");
                startDate = $("#txtAbsenceStartDate");
                startTime = $("#txtAbsenceStartTime");
                endDate = $("#txtAbsenceEndDate");
                endTime = $("#txtAbsenceEndTime");
                details = $("#txtAbsenceDetails");
            }
            if (absenceType.val() == 0) {
                absenceType.focus().select();
                ShowAlertMessage("Message", "Please select leave category !", "A");
                return false;
            }
            if (startDate.val().length == 0) {
                startDate.focus();
                ShowAlertMessage("Message", "Please enter start date !", "A");
                return false;
            }
            if (startDate.val().length !== 0) {
                var abstartDate = startDate.val();
                var abendDate = endDate.val();
                if (abendDate.length !== 0) {
                    abstartDate = new Date(ConvertDate(abstartDate));
                    abendDate = new Date(ConvertDate(abendDate));
                    if (+abstartDate > +abendDate) {
                        ShowAlertMessage("Message", "Leave end datetime should be greater end datetime", "A");
                        endDate.focus();
                        return false;
                    }
                }
                else {
                    endDate.focus();
                    return false;
                }
            }
            if (leave.val() == 'Partial') {
                if (startTime.val().length == 0) {
                    startTime.focus();
                    ShowAlertMessage("Message", "Please enter start time !", "A");
                    return false;
                }
                else if (endTime.val().length == 0) {
                    endTime.focus();
                    ShowAlertMessage("Message", "Please enter end time !", "A");
                    return false;
                }
            }
            else {
                startTime.val("00:00");
                endTime.val("23:59");
            }


            var absenceData = {
                "action": 'Add',
                "cnd_profile": addInfoFor,
                "cnd_id": $('.profile-id').attr('data-id'),
                "absence_type": absenceType.val(),
                "start_datetime": ConvertDateFormate(startDate.val()) + ' ' + startTime.val(),
                "end_datetime": ConvertDateFormate(endDate.val()) + ' ' + endTime.val(),
                "detail": details.val()
            }
            var strFinal = "[" + JSON.stringify(absenceData) + "]";
            ns_employee.post(strFinal, addInfoFor, 'Add',evt);
        }
        else if (addInfoFor.toLowerCase() == 'password') {
            var txtCurrentPassword = '';// $('#txtCurrentPassword').val().trim();
            var txtNewPassword = $('#txtNewPassword').val().trim();
            var txtConfirmPassword = $('#txtConfirmPassword').val().trim();
            //if (txtCurrentPassword == '') {
            //    $("#txtCurrentPassword").focus();
            //    ShowAlertMessage("Message", "Enter Current password", "A");
            //    return false;
            //}
            if (txtNewPassword == '') {
                $("#txtNewPassword").focus();
                ShowAlertMessage("Message", "Enter New password", "A");
                return false;
            }
            if (txtNewPassword != '' && txtNewPassword.length >= 8 && txtNewPassword.length <= 20) {
                $("#txtNewPassword").focus();
                ShowAlertMessage("Message", "Password length must be between 8 and 20 characters long", "A");
                return false;
            }
            if (txtConfirmPassword == '') {
                $("#txtConfirmPassword").focus();
                ShowAlertMessage("Message", "Enter Confirm password", "A");
                return false;
            }
            if (txtNewPassword == txtConfirmPassword) {
                //var Param = "{ password: '" + txtCurrentPassword + "',NewPassword:'" + txtNewPassword + "'}";
                //var obj = {};
                //obj.Password = txtCurrentPassword;
                //obj.NewPassword = txtNewPassword;
                //obj.ConfirmPassword = txtConfirmPassword;
                //obj.block = 'CHGPASS';
                //var param = "[" + JSON.stringify(obj) + "]";

                var passwordData = {
                    "action": 'CHGPASS',                  
                    "cnd_profile": 'PROFILES',
                    "cnd_id": $('.profile-id').attr('data-id'),
                    "Password": txtCurrentPassword,
                    "NewPassword": txtNewPassword,
                    "ConfirmPassword": txtConfirmPassword
                }
                var strFinal = "[" + JSON.stringify(passwordData) + "]";
                ns_employee.post(strFinal, addInfoFor, 'CHGPASS',evt);

                //ns_ajax.post(
                //    urls.candidateApi + 'profile',
                //    param,
                //    function (response) {
                //        if (response == 'OK') {
                //            ShowAlertMessage("Message", "Password update successfully.", "C");
                //            $('#txtCurrentPassword').val('');
                //            $('#txtNewPassword').val('');
                //            $('#txtConfirmPassword').val('');
                //        }
                //        else
                //            ShowAlertMessage("Message", "Sorry ! Please try again", "C");
                //    });
            }
            else
                ShowAlertMessage("Message", "New password and confirm password are not matched.", "A");
        }
    },
    update: function (updateInfoOf,evt) {       
        if (updateInfoOf.toUpperCase() == 'WORK-STATUS') {
            var work_status = $('input[name="rdoWorkStatus"]:checked').val();
           
            if (work_status !== '1' && work_status !== '2' && work_status !== '3' && work_status !== '4') {
                ShowAlertMessage("Message", "Choose an option", "A");
                return false;
            }
            var accountStatusData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "work_status": work_status
            }
            var strFinal = "[" + JSON.stringify(accountStatusData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'CONTACT-INFO') {
            var account_email = $("#txt_account_email");
            var personal_email = $('#txt_personal_email');
            var home_phone = $('#txt_home_phone');
            var mobile_phone = $('#txt_mobile_phone');
            var work_phone = $('#txt_work_phone');
            var work_extension = $('#txt_work_extension');

            if (account_email.val().trim() == '') {
                account_email.focus();
                ShowAlertMessage("Message", "Enter account email", "A");
                return false;
            }
            if (account_email.val().trim() !== '' && !IsEmail(account_email.val().trim())) {
                account_email.focus();
                ShowAlertMessage("Message", "Please enter valid email id !", "A");
                return false;
            }
            if (personal_email.val().trim() !== '' && !IsEmail(personal_email.val().trim())) {
                personal_email.focus();
                ShowAlertMessage("Message", "Please enter valid personal email id !", "A");
                return false;
            }
            if (mobile_phone.val().trim() == '') {
                mobile_phone.focus();
                ShowAlertMessage("Message", "Enter mobile phone", "A");
                return false;
            }
            if (mobile_phone.val().trim() !== '' && (mobile_phone.val().trim().length < 10 || mobile_phone.val().trim().length > 11)) {
                mobile_phone.focus();
                ShowAlertMessage("Message", "Enter valid mobile phone", "A");
                return false;
            }
            var accountStatusData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "email_id": account_email.val().trim(),
                "personal_email": personal_email.val().trim(),
                "mobile_number": mobile_phone.val().trim(),
                "work_phone": work_phone.val().trim(),
                "home_phone": home_phone.val().trim(),
                "work_extension": work_extension.val().trim()
            }
            var strFinal = "[" + JSON.stringify(accountStatusData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'PERSONAL-INFO') {
            var employeeData, title = '', firstName = '', middleName = '', country_id = 0, sendEmailVerification = '', sendMobileVerification = '', lastName = '', gender = '', cndImage = '', emailId = '', mobileNumber = '', postcode = '', addressLine1 = '', addressLine2 = '', city = '', county = '';

            title = $("#ddl_profile_title option:selected");
            firstName = $("#ddl_profile_first_name");
            middleName = $("#ddl_profile_middle_name");
            lastName = $("#ddl_profile_last_name");
            DOB = $("#ddl_profile_dbo");
            gender = $("#ddl_profile_gender  option:selected");
            country_id = $("#ddl_profile_country option:selected");

            postcode = $("#txtContactsPostCodePI");
            addressLine1 = $("#txtContactsAddressLine1PI");
            addressLine2 = $("#txtContactsAddressLine2PI");
            city = $("#txtContactsCityPI");
            county = $("#txtContactsCountyPI");
            if (title.val() == 0) {
                title.focus();
                ShowAlertMessage("Message", "Please select title !", "A");
                return false;
            }
            if (firstName.val().length == 0) {
                firstName.focus();
                ShowAlertMessage("Message", "Please enter first name !", "A");
                return false;
            }
            if (lastName.val().length == 0) {
                lastName.focus();
                ShowAlertMessage("Message", "Please enter last name !", "A");
                return false;
            }
            if (DOB.val().length == 0) {
                DOB.focus();
                ShowAlertMessage("Message", "Please enter date of birth!", "A");
                return false;
            }
            if (gender.val() == '') {
                gender.focus();
                ShowAlertMessage("Message", "Select gender!", "A");
                return false;
            }
            //if (country_id.val() == 0) {
            //    country_id.focus();
            //    ShowAlertMessage("Message", "Select country!", "A");
            //    return false;
            //}

            if (addressLine1.val().length > 0) {
                if (postcode.val().length == 0) {
                    postcode.focus();
                    ShowAlertMessage("Message", "Please enter postcode !", "A");
                    return false;
                }
                else {
                    if (addressLine1.val().length == 0) {
                        addressLine1.focus();
                        ShowAlertMessage("Message", "Please enter address line 1 !", "A");
                        return false;
                    }
                    if (city.val().length == 0) {
                        city.focus();
                        ShowAlertMessage("Message", "Please enter city !", "A");
                        return false;
                    }
                    if (county.val().length == 0) {
                        county.focus();
                        ShowAlertMessage("Message", "Please enter county !", "A");
                        return false;
                    }
                }
            }
            employeeData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),

                "cnd_title": title.val(),
                "first_name": firstName.val(),
                "middle_name": middleName.val(),
                "last_name": lastName.val(),

                "DOB": (DOB.val().length > 0 ? ConvertDateFormate(DOB.val()) : ''),
                "gender": gender.val(),
                "country_id":"0",//country_id.val(),
                "postcode": postcode.val(),
                "address_line1": addressLine1.val(),
                "address_line2": addressLine2.val(),
                "city": city.val(),
                "country": county.val()
            }
            var strFinal = "[" + JSON.stringify(employeeData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
       

        else if (updateInfoOf.toUpperCase() == 'MEDICAL-INFO') {
            var covid_vaccinated = $("#ddl_covid_vaccinated option:selected");
            var covid_vaccinated_comments = $("#txt_covid_vaccinated_comments");
            if (covid_vaccinated.val() == '') {
                covid_vaccinated.focus();
                ShowAlertMessage("Message", "Select covid vaccinated option", "A");
                return false;
            }
            var accountStatusData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "covid_vaccinated": covid_vaccinated.val(),
                "covid_vaccinated_comments": covid_vaccinated_comments.val().trim()
            }
            var strFinal = "[" + JSON.stringify(accountStatusData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'GENERAL-TERMS') {
            //Working hours
            var startDate = $("#txtEmployeeStartDate");
            var workHours = $("#txtWorkingWeekHour");
            var workMin = $("#txtWorkingWeekMin");

            //Working Pattern
            var work_pattern_status = $("#chk_work_pattern_status").prop("checked") ? 1 : 0;  
            var WorkingTimePatterns = $("#ddlWorkingTimePattern option:selected");
            var patternStartDate = $("#txtPatternStartDate");
            var patternEndDate = $("#txtPatternEndDate");
                
          

            //Annual leave entitlement
            var AnnualLeaveStartDay = $("#txtAnnualLeaveStartDay");
            var AnnualLeaveStartMonth = $("#ddlAnnualLeaveStartMonth option:selected");
            var FullTimeAnnualLeaveInDays = $("#txtFullTimeAnnualLeaveInDays");
            var MinAnnualLeaveInDays = $("#txtMinAnnualLeaveInDays");

            //Reason for Update
            var update_reason_id = $("#ddlContractUpdateReason option:selected");
            var reason_comments = $("#txtContractUpdateReason");

            if (startDate.val() == '') {
                ShowAlertMessage("Message", "Enter employee start date", "A");
                startDate.focus();
                return false;
            }
            else if (work_pattern_status == 1 && WorkingTimePatterns.val() == '0') {
                ShowAlertMessage("Message", "Select a working time patern", "A");
                WorkingTimePatterns.focus();
                return false;
            }           
           
            else if (work_pattern_status == 1 && (WorkingTimePatterns.val() !== '0' && patternStartDate.val() == '')) {
                ShowAlertMessage("Message", "Enter pattern Start Date", "A");
                patternStartDate.focus();
                return false;
            }
            else if (work_pattern_status ==1 && patternStartDate.val() !== '' && patternEndDate.val() !== '') {
                var sDate = patternStartDate.val();
                var eDate = patternEndDate.val();
                if (sDate !== '' && eDate !== '') {
                    sDate = new Date(ConvertDate(sDate));
                    eDate = new Date(ConvertDate(eDate));
                    if (+sDate > +eDate) {
                        ShowAlertMessage("Message", "Pattern End date should be greater than start date", "A");
                        patternEndDate.focus();
                        return false;
                    }
                }
            }
            else if (workHours.val() == '') {
                ShowAlertMessage("Message", "Enter employee working hour", "A");
                workHours.focus();
                return false;
            }          

            //else if (AnnualLeaveStartDay.val() == '' || AnnualLeaveStartDay.val() == '0') {
            //    ShowAlertMessage("Message", "Enter annual leave start day", "A");
            //    AnnualLeaveStartDay.focus();
            //    return false;
            //}
            //else if (AnnualLeaveStartMonth.val() == '0') {
            //    ShowAlertMessage("Message", "Enter annual leave start month", "A");
            //    AnnualLeaveStartMonth.focus();
            //    return false;
            //}
            else if (parseInt(update_reason_id.val().trim()) == 0) {
                ShowAlertMessage("Message", "Select a reason for update", "A");
                update_reason_id.focus();
                return false;
            }
            var gernalTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),

                "start_date": (startDate.val().length > 0) ? ConvertDateFormate(startDate.val()) : '',
                "cnd_weekly_hours_in_min": (parseInt(workHours.val().trim()) * 60) + parseInt(workMin.val().trim() == "" ? 0 : workMin.val().trim()),

                "working_time_pattern": WorkingTimePatterns.val() == '' ? '0' : WorkingTimePatterns.val(),
                "pattern_start_date": (patternStartDate.val().length > 0) ? ConvertDateFormate(patternStartDate.val()) : '',
                "pattern_end_date": (patternEndDate.val().length > 0) ? ConvertDateFormate(patternEndDate.val()) : '',
                "work_pattern_status": work_pattern_status,

                "annual_leave_start_day": AnnualLeaveStartDay.val(),
                "annual_leave_start_month": AnnualLeaveStartMonth.val(),
                "full_time_annual_leave_in_days": FullTimeAnnualLeaveInDays.val(),
                "min_annual_leave_in_days": MinAnnualLeaveInDays.val(),
                "update_reason_id": update_reason_id.val(),
                "update_reason": reason_comments.val()
            }
            var strFinal = "[" + JSON.stringify(gernalTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);

        }
        else if (updateInfoOf.toUpperCase() == 'NOTES') {
            if ($('#txtTermNotes').val().trim() == '') {
                ShowAlertMessage("Message", "Enter notes", "A");
                $('#txtTermNotes').focus();
                return false;
            }
            var gernalTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "notes": $('#txtTermNotes').val().trim()
            }
            var strFinal = "[" + JSON.stringify(gernalTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'SALARY-TERMS') {
            //chk_salary_pension_eligible,chk_salary_opsted_out,txt_salary_employee_contribution,txt_salary_employer_contribution,txt_salary_enrolment_date
            var payroll = $('#txt_payroll_number');
            var salary = $('#txt_salary');
            var salaryMode = $("#ddl_salary_mode option:selected");
            var payment_frequency = $("#ddl_payment_frequency option:selected");

            var is_overtime_allowed = $('#chk_overtime_allowed').prop('checked') ? 1 : 0;
            var overtime_rate_per_hour = $('#txt_overtime_rate_per_hour');
            var maximmum_duration_overtime = $('#txt_maximmum_duration_overtime');

            var payment_method = $("#ddl_paymentment_method option:selected");

            var pension_eligible = $('#chk_salary_pension_eligible').prop('checked') ? 1 : 0;
            var opsted_out = $('#chk_salary_opsted_out').prop('checked') ? 1 : 0;
            var employee_contribution = $('#txt_salary_employee_contribution');
            var employer_contribution = $('#txt_salary_employer_contribution');
            var enrolment_date = $('#txt_salary_enrolment_date');

            if (payroll.val().trim() == '') {
                payroll.focus();
                ShowAlertMessage("Message", "Enter payroll number", "A");
                return false;
            }
            if (salary.val().trim().length == 0) {
                salary.focus();
                ShowAlertMessage("Message", "Enter salary !", "A");
                return false;
            }
            if (salaryMode.val() == '') {
                salaryMode.focus();
                ShowAlertMessage("Message", "Select mode", "A");
                return false;
            }
            if (payment_frequency.val() == '') {
                payment_frequency.focus();
                ShowAlertMessage("Message", "Select payment frequency", "A");
                return false;
            }


            if (is_overtime_allowed == 1) {
                if (overtime_rate_per_hour.val().length == 0) {
                    overtime_rate_per_hour.focus();
                    ShowAlertMessage("Message", "Enter overtime rate", "A");
                    return false;
                }
                if (maximmum_duration_overtime.val().length == 0) {
                    maximmum_duration_overtime.focus();
                    ShowAlertMessage("Message", "Enter maximmum duration of overtime", "A");
                    return false;
                }               
            }
            

            if (pension_eligible == 1 && opsted_out == 0) {
                if (employee_contribution.val() == 0) {
                    employee_contribution.focus();
                    ShowAlertMessage("Message", "Enter employee contribution", "A");
                    return false;
                }
                if (employer_contribution.val() == 0) {
                    employer_contribution.focus();
                    ShowAlertMessage("Message", "Enter employer contribution", "A");
                    return false;
                }
                if (enrolment_date.val() == 0) {
                    enrolment_date.focus();
                    ShowAlertMessage("Message", "Enter enrolment date", "A");
                    return false;
                }
            }


            var salaryTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "payroll_number": payroll.val().trim(),
                "salary": salary.val().trim(),
                "salary_mode": salaryMode.val(),
                "payment_frequency": payment_frequency.val(),
                "payment_method": payment_method.val(),               

                "is_overtime_allowed": is_overtime_allowed,
                "overtime_rate_per_hour": is_overtime_allowed == 0 ? 0 : overtime_rate_per_hour.val(),
                "maximmum_duration_overtime": is_overtime_allowed == 0 ? 0 :maximmum_duration_overtime.val(),
             
                "pension_eligible": pension_eligible,
                "opsted_out": opsted_out,
                "employee_contribution": opsted_out == 1 ? 0 : employee_contribution.val().trim(),
                "employer_contribution": opsted_out == 1 ? 0 : employer_contribution.val().trim(),
                "enrolment_date": opsted_out == 1 ? '' : enrolment_date.val().trim()

            }
            var strFinal = "[" + JSON.stringify(salaryTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'TAX-TERMS') {

          
            //ddl_tax_caculation_method, txt_tax_NI_number, ddl_tax_ni_letter, ddl_starter_declaration, ddl_company_director, ddl_StudentLoan, ddl_PostGraduateLoan

            var taxCode = $("#txt_tax_coce");
            var tax_caculation_method = $("#ddl_tax_caculation_method option:selected");
            var ni_number = $('#txt_tax_NI_number');
            var ni_letter = $("#ddl_tax_ni_letter option:selected");
            var starter_declaration = $("#ddl_starter_declaration option:selected");
            var company_director = $("#ddl_company_director option:selected");
            var director_calculation_method = $("#ddl_director_calculation_method option:selected");
            var director_appointment_date = $("#txt_director_appointment_date");           

            var student_loan = $("#ddl_StudentLoan option:selected");
            var student_loan_plan_type = $("#ddl_StudentLoanPlanType option:selected");
            var post_graduate_loan = $("#ddl_PostGraduateLoan option:selected");
           
            if (taxCode.val().trim().length == 0) {
                taxCode.focus();
                ShowAlertMessage("Message", "Enter tax code", "A");
                return false;
            }
            if (tax_caculation_method.val().trim().length == 0) {
                tax_caculation_method.focus();
                ShowAlertMessage("Message", "Select tax caculation method!", "A");
                return false;
            }
            if (ni_letter.val() == '') {
                ni_letter.focus();
                ShowAlertMessage("Message", "Select NI letter", "A");
                return false;
            }
            if (starter_declaration.val() == '') {
                starter_declaration.focus();
                ShowAlertMessage("Message", "Select starter declaration", "A");
                return false;
            }
            if (company_director.val() == '1' && director_calculation_method.val()=='') {
                director_calculation_method.focus();
                ShowAlertMessage("Message", "Select director calculation method", "A");
                return false;
            }
            if (company_director.val() == '1' && director_appointment_date.val() == '') {
                director_appointment_date.focus();
                ShowAlertMessage("Message", "Enter appointment date", "A");
                return false;
            }
            if (student_loan.val() == '1' && student_loan_plan_type.val() == '0') {
                student_loan_plan_type.focus();
                ShowAlertMessage("Message", "Select plan type", "A");
                return false;
            }
            var salaryTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "tax_code": taxCode.val().trim(),
                "tax_caculation_method": tax_caculation_method.val().trim(),
                "ni_number": ni_number.val(),
                "ni_letter": ni_letter.val(),
                "starter_declaration": starter_declaration.val(),
                "company_director": company_director.val(),
                "director_calculation_method": company_director.val() == '0'?'': director_calculation_method.val(),
                "director_appointment_date": company_director.val() == '0' ? '' :director_appointment_date.val(),
                "student_loan": student_loan.val(),
                "student_loan_plan_type": student_loan.val()=='0'?'0':student_loan_plan_type.val(),
                "post_graduate_loan": post_graduate_loan.val()             
            }
            var strFinal = "[" + JSON.stringify(salaryTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        } 

        else if (updateInfoOf.toUpperCase() == 'TERMINATION-TERMS') {

            var terminationDate = $("#txt_termination_date");
            var termination_reason = $("#ddlTerminationReason option:selected");
            var termination_reason_comments = $('#txt_termination_reason_comments');
            var exit_interview_performed = $('#chk_exit_interview_performed').prop('checked') ? 1 : 0;
            var suitable_for_reengagement = $('#chk_suitable_for_reengagement').prop('checked') ? 1 : 0;


            if (terminationDate.val().length == 0) {
                terminationDate.focus();
                ShowAlertMessage("Message", "Please enter termination date !", "A");
                return false;
            }
            if (termination_reason.val() == 0) {
                termination_reason.focus();
                ShowAlertMessage("Message", "Select termination reason", "A");
                return false;
            }
            var terminationTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "termination_date": terminationDate.val().length > 0 ? ConvertDateFormate(terminationDate.val()) : '',
                "termination_reason": termination_reason.val(),
                "termination_reason_comments": termination_reason_comments.val().trim(),
                "exit_interview_performed": exit_interview_performed,
                "suitable_for_reengagement": suitable_for_reengagement
            }
            var strFinal = "[" + JSON.stringify(terminationTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'ROLE-TERMS') {

            var job_title = $('#txt_job_title');
            var contract_type = $("#ddlContractType option:selected");
            var notify_of_expiry_date = $('#txt_Notify_of_expiry_date');
            var probation_required = $("input[name='chkProbationRequired']:checked").val();
            var notice_period = $("#ddl_notice_period option:selected");
            var notify_of_expiry_on = $('#txt_notify_of_expiry_on');
            var notify_of_expiry_on_type = $("#ddl_notify_of_expiry_on option:selected");
            var role_term_update_reason = $("#ddlUpdateReason option:selected");
            var role_term_update_reason_notes = $('#txt_role_update_reason_notes');

            if (job_title.val().trim() == '') {
                job_title.focus();
                ShowAlertMessage("Message", "Enter job title", "A");
                return false;
            }
            if (contract_type.val() == 0) {
                contract_type.focus();
                ShowAlertMessage("Message", "Select a Contract type", "A");
                return false;
            }
            if (contract_type.val() == 2 && notify_of_expiry_date.val().trim() == '') {
                notify_of_expiry_date.focus();
                ShowAlertMessage("Message", "Enter notify of expiry date", "A");
                return false;
            }
            if ($("input[name='chkProbationRequired']:checked") == false) {
                $("input[name='chkProbationRequired']").focus();
                ShowAlertMessage("Message", "Is probation required ?", "A");
                return false;
            }
            if (notice_period.val() == '') {
                notice_period.focus();
                ShowAlertMessage("Message", "Select a notice period", "A");
                return false;
            }
            if (notice_period.val() == 'No notice period' && notify_of_expiry_on.val() == '') {
                notify_of_expiry_on.focus();
                ShowAlertMessage("Message", "Enter notify of expiry on", "A");
                return false;
            }
            if (role_term_update_reason.val() == 0) {
                role_term_update_reason.focus();
                ShowAlertMessage("Message", "Select a update reason", "A");
                return false;
            }
            var salaryTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "job_title": job_title.val().trim(),
                "contract_type": contract_type.val(),
                "notify_of_expiry_date": contract_type !== 2 ? '' : notify_of_expiry_date.val().trim(),
                "probation_required": probation_required,
                "notice_period": notice_period.val(),
                "notify_of_expiry_on": notice_period.val() == 'No notice period' ? '0' : notify_of_expiry_on.val().trim(),
                "notify_of_expiry_on_type": notify_of_expiry_on_type.val(),
                "role_term_update_reason": role_term_update_reason.val(),
                "role_term_update_reason_notes": role_term_update_reason_notes.val().trim()
            }
            var strFinal = "[" + JSON.stringify(salaryTermsData) + "]";

            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'SENSITIVE-TERMS') {           
            var niNumber = $("#txt_sensitive_ni_number");
            var passportNumber = $("#txt_sensitive_passport_number");
            var passportIssueCounty = $("#ddl_sensitive_passport_country option:selected");
            var passportExpiryDate = $("#txt_sensitive_passport_date_of_expiry");

            var drivingLicenceNumber = $("#txt_sensitive_licence_number")
            var drivingLicenceIssueCountry = $("#ddl_sensitive_dl_issue_country option:selected");
            var drivingLicenceClass = $("#txt_sensitive_licence_class")
            var drivingLicenceExpiryDate = $("#txt_sensitive_driving_licence_expiry")

            var visaNumber = $("#txt_sensitive_visa_number");
            var visaExpiryDate = $("#txt_sensitive_visa_expiry");

            var DBSChecked = $("#chk_check_conducted").prop('checked') ? 1 : 0;
            var follow_up_date = $('#txt_follow_up_date');

            var work_status = $("#ddl_work_status option:selected");
            var share_code = $('#txt_share_code');
            var work_date_issued = $('#txt_date_issued');
            var work_date_checked = $('#txt_date_checked');
            var work_date_expiry = $('#txt_expiry_date');
        
            var sensitiveTermsData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),             
                "ni_number": niNumber.val().trim(),
                "passport_number": passportNumber.val().trim(),
                "passport_expiry_date": ConvertDateFormate(passportExpiryDate.val().trim()),
                "passport_issue_country": passportIssueCounty.val().trim(),

                "driving_licence_number": drivingLicenceNumber.val().trim().trim(),
                "licence_issue_country": drivingLicenceIssueCountry.val(),
                "licence_expiry_date": ConvertDateFormate(drivingLicenceExpiryDate.val().trim()),
                "licence_class": drivingLicenceClass.val().trim(),

                "visa_number": visaNumber.val().trim(),
                "visa_exp_date": ConvertDateFormate(visaExpiryDate.val()),

                "dbs_checked": DBSChecked,
                "follow_up_date": DBSChecked == 1 ? follow_up_date.val() : '',

                "work_status": work_status.val(),
                "share_code": work_status.val() == 'Settled' ? '' : share_code.val(),
                "work_date_issued": work_status.val() == 'Settled' ? '' : work_date_issued.val(),
                "work_date_checked": work_status.val() == 'Settled' ? '' : work_date_checked.val(),
                "work_date_expiry": work_status.val() == 'Settled' ? '' : work_status.val() == 'Pre-settled' ? work_date_expiry.val() : ''
            }
            var strFinal = "[" + JSON.stringify(sensitiveTermsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'WORK-SCHEDULE') {
            var sunday = $("#ddlWorkScheduleSunday option:selected");
            var monday = $("#ddlWorkScheduleMonday option:selected");
            var tuesday = $("#ddlWorkScheduleTuesday option:selected");
            var wednesday = $("#ddlWorkScheduleWednesday option:selected");
            var thursday = $("#ddlWorkScheduleThursday option:selected");
            var friday = $("#ddlWorkScheduleFriday option:selected");
            var saturday = $("#ddlWorkScheduleSaturday option:selected");
            var workScheduleData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_Id": $('.profile-id').attr('data-id'),
                "sunday": sunday.val(),
                "monday": monday.val(),
                "tuesday": tuesday.val(),
                "wednesday": wednesday.val(),
                "thursday": thursday.val(),
                "friday": friday.val(),
                "saturday": saturday.val(),
            }
            var strFinal = "[" + JSON.stringify(workScheduleData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'CONTACTS') {
            var contactsData, isPrimary, title = '', firstName = '', lastName = '', mobileNumber = '', homeNumber = '', workNumber = '', relationship = '', postcode = '', addressLine1 = '', addressLine2 = '', city = '', county = '';
            firstName = $("#txtContactsFirstName" + dynamic_id);
            lastName = $("#txtContactsLastName" + dynamic_id);
            mobileNumber = $("#txtContactsMobileNumber" + dynamic_id);
            homeNumber = $("#txtContactsHomeNumber" + dynamic_id);
            workNumber = $("#txtContactsWorkNumber" + dynamic_id);
            relationship = $("#ddlContactsRelationship" + dynamic_id + " option:selected");
            postcode = $("#txtContactsPostCode" + dynamic_id);
            addressLine1 = $("#txtContactsAddressLine1" + dynamic_id);
            addressLine2 = $("#txtContactsAddressLine2" + dynamic_id);
            city = $("#txtContactsCity" + dynamic_id);
            county = $("#txtContactsCounty" + dynamic_id);
            isPrimary = $('#chkContactsIsPrimary' + dynamic_id);
            if (firstName.val().length == 0) {
                firstName.focus();
                ShowAlertMessage("Message", "Please enter first name !", "A");
                return false;
            }
            if (mobileNumber.val().length == 0) {
                mobileNumber.focus();
                ShowAlertMessage("Message", "Please enter mobile number !", "A");
                return false;
            }
            if (relationship.val() == 0) {
                relationship.focus();
                ShowAlertMessage("Message", "Please select relationship !", "A");
                return false;
            }
            if (county.val().length > 0) {
                if (postcode.val().length == 0) {
                    postcode.focus();
                    ShowAlertMessage("Message", "Please enter postal code !", "A");
                    return false;
                }
            }
            contactsData = {
                "action": 'Update',
                "row_id": dynamic_id,
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "cid": contacts_update_id,
                "first_name": firstName.val(),
                "last_name": lastName.val(),
                "mobile_number": mobileNumber.val(),
                "home_number": homeNumber.val(),
                "work_number": workNumber.val(),
                "relationship": relationship.val(),
                "primary_contact": (isPrimary.is(':checked') ? 1 : 0),
                "postcode": postcode.val(),
                "address_line1": addressLine1.val(),
                "address_line2": addressLine2.val(),
                "city": city.val(),
                "country": county.val()
            }
            var strFinal = "[" + JSON.stringify(contactsData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'LOCATIONS') {
            var selectedlocations = [];
            selectedlocations = $('.chk-profile-cnd-location:radio:checked').map(function () {
                return this.value;
            }).get();
            if (selectedlocations.length == 0) {
                ShowAlertMessage("Message", "No location selected, Please select at least one!", "A");
                return false;
            }

            var locationData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "location_ids": selectedlocations,
            }
            var strFinal = "[" + JSON.stringify(locationData) + "]";

            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'SETDEFAULTLOCATIONCND') {      
            var id = getAttribute(evt, 'id');
            var Locationid = id.split('-')[1];
            var locationData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "location_ids": Locationid,
            }
            var strFinal = "[" + JSON.stringify(locationData) + "]";         
            ns_employee.post(strFinal, updateInfoOf, 'Update', evt);
        }
        else if (updateInfoOf.toUpperCase() == 'ABSENCE') {
            var absenceType, leave, startDate, startTime, endDate, endTime, details;
            absenceType = $("#ddlAbsenceType" + dynamic_id + " option:selected");
            leave = $("input[name=rdoAbsenceLeave" + dynamic_id + "]:checked");
            startDate = $("#txtAbsenceStartDate" + dynamic_id);
            startTime = $("#txtAbsenceStartTime" + dynamic_id);
            endDate = $("#txtAbsenceEndDate" + dynamic_id);
            endTime = $("#txtAbsenceEndTime" + dynamic_id);
            details = $("#txtAbsenceDetails" + dynamic_id);
            if (absenceType.val() == 0) {
                absenceType.focus().select();
                ShowAlertMessage("Message", "Please select absence type !", "A");
                return false;
            }
            if (startDate.val().length == 0) {
                startDate.focus();
                ShowAlertMessage("Message", "Please enter start date !", "A");
                return false;
            }
            if (leave.val() == 'Partial') {
                if (startDate.val().length !== 0) {
                    var abstartDate = startDate.val();
                    var abendDate = endDate.val();
                    if (abendDate.length !== 0) {
                        abstartDate = new Date(ConvertDate(abstartDate));
                        abendDate = new Date(ConvertDate(abendDate));
                        if (+abstartDate != +abendDate) {
                            ShowAlertMessage("Message", "Absence start and end date should be equal", "A");
                            endDate.focus();
                            return false;
                        }
                    }
                    else {
                        endDate.focus();
                        return false;
                    }
                }
                if (startTime.val().length == 0) {
                    startTime.focus();
                    ShowAlertMessage("Message", "Please enter start time !", "A");
                    return false;
                }
                else if (endTime.val().length == 0) {
                    endTime.focus();
                    ShowAlertMessage("Message", "Please enter end time !", "A");
                    return false;
                }
            }
            else {
                if (startDate.val().length !== 0) {
                    var abstartDate = startDate.val();
                    var abendDate = endDate.val();
                    if (abendDate.length !== 0) {
                        abstartDate = new Date(ConvertDate(abstartDate));
                        abendDate = new Date(ConvertDate(abendDate));
                        if (+abstartDate > +abendDate) {
                            ShowAlertMessage("Message", "Absence end date should be greater", "A");
                            endDate.focus();
                            return false;
                        }
                    }
                    else {
                        endDate.focus();
                        return false;
                    }
                }
                startTime.val("00:00");
                endTime.val("23:59");
            }

            var absenceData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "absence_id": dynamic_id,
                "cnd_id": $('.profile-id').attr('data-id'),
                "absence_type": absenceType.val(),
                "start_datetime": ConvertDateFormate(startDate.val()) + ' ' + startTime.val(),
                "end_datetime": ConvertDateFormate(endDate.val()) + ' ' + endTime.val(),
                "detail": details.val()
            }
            var strFinal = "[" + JSON.stringify(absenceData) + "]";
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
        else if (updateInfoOf.toUpperCase() == 'ACCOUNT-STATUS') {
            var accountStatusData = {
                "action": 'Update',
                "cnd_profile": updateInfoOf,
                "cnd_id": $('.profile-id').attr('data-id'),
                "acc_status": account_status
            }
            var strFinal = "[" + JSON.stringify(accountStatusData) + "]";          
            ns_employee.post(strFinal, updateInfoOf, 'Update',evt);
        }
    },
    tabAccountDeatils: function (objCndData) {
        call_tmpl_binder(objCndData, '/Template/cnd_profile_tmpl.html', '#CndAccountDetails_Template', '#TabBasic_Placeholder');
    },   

    tabProfile: function (objContactsData) {
        call_tmpl_binder(objContactsData, '/Template/cnd_profile_tmpl.html', '#CndProfilInfo_Template', '#TabProfile_Placeholder');
    },

    tabContacts: function (objContactsData) {
        if (objContactsData != null)
            call_tmpl_binder(objContactsData, '/Template/cnd_profile_tmpl.html', '#CndContacts_Template', '#TabContacts_Placeholder');
    },
    tabTerms: function (objTermsData) {
        if (objTermsData != null) {
            call_tmpl_binder(objTermsData.Table, '/Template/cnd_profile_tmpl.html', '#CndTerms_Template', '#TabTerms_Placeholder');
            //here dr=default roles,dl = default locations
            ns_employee_template.bindDropdowns("dro=der-tm");
        }
    },
    tabLocations: function (objLocationsData) {
        if (objLocationsData != null) {
            if (bindLocationPopup) {
                call_tmpl_binder(objLocationsData, '/Template/cnd_profile_tmpl.html', '#CndPopLocations_Template', '#TabLocationsPopup_Placeholder');
                bindLocationPopup = false;
            }
            else
                call_tmpl_binder(objLocationsData, '/Template/cnd_profile_tmpl.html', '#CndLocations_Template', '#Locations_Placeholder');
        }
    },
    tabWorkSchedule: function (objWorkScheduleData) {
        $('#TabWorkschedule_Placeholder').html('');
        console.log(objWorkScheduleData);
        if (objWorkScheduleData != undefined)
            call_tmpl_binder(objWorkScheduleData, '/Template/cnd_profile_tmpl.html', '#CndWorkschedule_Template', '#TabWorkschedule_Placeholder');
        else {
            var workSchedulehtml = '<div class="table-responsive h__hgt">\
                                        <table class="table table-bordered">\
                                            <thead>\
                                                <tr>\
                                                    <th>Monday</th>\
                                                    <th>Tuesday</th>\
                                                    <th>Wednesday</th>\
                                                    <th>Thursday</th>\
                                                    <th>Friday</th>\
                                                    <th>Saturday</th>\
                                                    <th>Sunday</th>\
                                                </tr>\
                                            </thead>\
                                            <tbody>\
                                                <tr>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleMonday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleTuesday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleWednesday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleThursday" class="form-control" data-live-search="true">\
                                                            <option data-tokens="" value="Working">Working</option>\
                                                            <option data-tokens="" value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleFriday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleSaturday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                    <td>\
                                                        <select id="ddlWorkScheduleSunday" class="form-control" data-live-search="true">\
                                                            <option data-tokens=""  value="Working">Working</option>\
                                                            <option data-tokens=""  value="Day off">Day Off</option>\
                                                        </select>\
                                                    </td>\
                                                </tr>\
                                            </tbody>\
                                        </table>\
                                        <div class="mb-5 mt-4 text-center">\
                                            <button id="btnUpdateWorkSchedule" value="Submit" class="btn btn-primary save_edt_contntn"><b>Update -&gt;</b></button>\
                                        </div>\
                                    </div>';
            $('#TabWorkschedule_Placeholder').append(workSchedulehtml);
        }

    },
    tabAbsence: function (objAbsenceData) {
        call_tmpl_binder(objAbsenceData, '/Template/cnd_profile_tmpl.html', '#AbsenceForm_Template', '#TabAbsenses_Placeholder');
    },
    allProfiles: function (objProfilesData, act) {
        var sr_no = 0, total_cnd = 0;
        if (objProfilesData != null) {
            if (act == 'more') {
                jQuery('#CndProfiles_Template').tmpl(objProfilesData).appendTo('#CndProfiles_Placeholder');
            }
            else
                call_tmpl_binder(objProfilesData, '/Template/cnd_profile_tmpl.html', '#CndProfiles_Template', '#CndProfiles_Placeholder');

            total_cnd = objProfilesData[0].total_cnd;
            $.each(objProfilesData, function (key, value) {
                sr_no = value.sr_no;
            });
        }
        else {
        
            if (act == 'more') {

            }
            else {
                $('#CndProfiles_Placeholder').empty();
                var link = 'Add a new employee by simpley clicking on <a id="btnAddNewCnd" class="col-green" data-toggle="modal" data-target="#add_internal"><i class="ti ti-plus"></i> Add Employee</a>';
                $('#CndProfiles_Placeholder').append('<tr><td colspan="12" style="text-align:center;">'+ nodata(link)+'</td></tr>');
            }
        }

        if (sr_no < total_cnd)
            $('#loadmoreEmployees').show();
        else
            $('#loadmoreEmployees').hide();
    },
    ActivityHistoryList: function () {
        $('#Activity_Placeholder').html(wait());
        var cndid = $('.profile-id').attr('data-id');
        var Param = { id: cndid };
        ns_ajax.get(
            urls.candidateApi + 'activity_employee',
            Param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data;//jQuery.parseJSON(response.split('|')[1]);
                    call_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#Activity_Template', '#Activity_Placeholder');
                }
                else {
                    $('#Activity_Placeholder').html(empty());
                }
            });
    },


    Get_JobRole_Location: function (CtrlLocation, CtrlRole) {     
        var param = { id: '0' };
        ns_ajax.get(
            urls.rotaApi + "location",
            param,
            function (data) {         
                if (data.Status == 'OK') {               
                    var obj = data.Response;
                    var str = '';
                    //Job Role(s)  
                    if (CtrlRole !== '') {
                        str = '<option data-role-id="0" data-rate="0" value="0" >Select Role</option>';
                        $.each(obj.JobRole, function (key, value) {
                            str += "<option data-role-id='" + value.role_id + "' data-rate=" + value.cnd_custom_role_rate + " value=" + value.cnd_custom_role_id + " title='" + value.cnd_custom_role_name + "'>" + value.cnd_custom_role_alias + "</option>";
                        });
                        $(CtrlRole).html(str);
                    }
                    //Location(s)
                    if (CtrlLocation !== '') {
                        str = '<option value="0">All Locations</option>';
                        $.each(obj.Location, function (key, value) {
                            str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                        });
                        $(CtrlLocation).html(str);
                        $('#ddlCndLocation').val(1).trigger('change.select2');
                        setTimeout(function () {
                            $('#ddlCndLocation').multiselect({
                                includeSelectAllOption: true
                            });
                        }, 500);
            
                      
                    }                   
                }
            });
    },
    Get_Masters: function (CtrlLocation, type) {
        var param = '{"action":"master","type":"' + type + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.employees,
            params,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);

                    $.each(obj, function (key, value) {
                        $.each(value.ContractType, function (key, value) {
                            alert(value.jsonData);
                            //str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                        });
                    });
                    var str = '';
                    //Location(s)
                    if (CtrlLocation !== '') {
                        str = '<option value="0">Select Location</option>';
                        $.each(obj.ContractType, function (key, value) {
                            alert(value.jsonData);
                            //str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                        });
                        $(CtrlLocation).html(str);

                        setTimeout(function () {
                            $('#ddlEmployeeLocations').multiselect({
                                includeSelectAllOption: true
                            });

                        }, 300);

                    }
                }
            });
    },
    AddUpdateBankDetail: function (id, action) {
        var data = new FormData();
        
        var bank_account_type = $('#ddl_BankAccountType').val();
        var name = $('#txtAccountHolder').val();
        var accountnumber = $('#txtAccountNumber').val();
        var sortcode = $('#txtSortCode').val();
        var companyname = $('#txtCompanyName').val();
        var compregno = $('#txtCompanyRegNo').val();
        var fileUpload = $('#RegCertificate').get(0);
        var files = fileUpload.files;

        
        if (bank_account_type == '') {
            $('#ddl_BankAccountType').focus();
            ShowAlertMessage("Message", "Select account type", "A");
            return false;
        }
        if (name == '') {
            $('#txtAccountHolder').focus();
            ShowAlertMessage("Message", "Enter account name", "A");
            return false;
        }
        if (accountnumber == '') {
            ShowAlertMessage("Message", "Enter account number", "A");
            $('#txtAccountNumber').focus();
            return false;
        }
        if (sortcode == '') {
            ShowAlertMessage("Message", "Enter sort code", "A");
            $('#txtSortCode').focus();
            return false;
        }
        if (sortcode.length < 6) {
            ShowAlertMessage("Message", "Sortcode must be 6 characters long", "A");
            $('#txtSortCode').focus();
            return false;
        }
            data.append("FileUpload", files[0]);
        data.append("Id", id),
            
            data.append("bank_account_type", bank_account_type ),
            data.append("Name", name),
            data.append("AccountNumber", accountnumber),
            data.append("SortCode", sortcode);
            data.append("CompanyName", companyname);
            data.append("CompanyRegNo", compregno);
            data.append("cnd_id", $('.profile-id').attr('data-id'));

        ns_ajax.upload2(
            urls.complianceApi + 'cndbankdetails',
            data,
            function (response) {
                response = response.slice(1, -1);
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Bank detail " + (id == 0 ? 'saved' : 'updated') + " successfully.", "C");
                    ns_employee.get('Personal-Info');
                    //var id = response.split('|')[1];
                    //var url = response.split('|')[2];
                    //if (action == 'UPDATE') {
                    //    $('#spnAccountholder-' + id).html(name);
                    //    $('#spnAccountNumber-' + id).html(accountnumber);
                    //    $('#spnSortCode-' + id).html(sortcode);
                    //    $('#spnCompanyName-' + id).html(companyname);
                    //    $('#spnCompanyRegNo-' + id).html(compregno);
                    //    $('#spnRegUrl-' + id).html('<i class="zmdi zmdi-file-text"  style="font-size: 24px;">&nbsp;</i>');
                    //    $('#spnRegUrl-' + id).attr('data-file-name', url);
                    //    $('.bdhide-' + id).hide();
                    //    $('.bdshow-' + id).show();
                    //}
                    //else {
                    //    $('.bank_add').hide();
                    //    var count = $('#Bank_Detail_Placeholder tr').length;
                    //    var lastrowSN = count > 0 ? $('#Bank_Detail_Placeholder').closest('table').find('tr:last td:first').attr('data-id') : '0';
                    //    lastrowSN++;
                    //    var obj = {};
                    //    obj.id = id;
                    //    obj.ROWNUMBER = lastrowSN;
                    //    obj.cnd_account_holder_name = name;
                    //    obj.cnd_bank_account_number = accountnumber;
                    //    obj.cnd_sort_code = sortcode;
                    //    obj.company_name = companyname;
                    //    obj.cnd_company_reg_no = compregno;
                    //    obj.cnd_reg_certificate_url = url;
                    //    call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#BankDetail_footer_Template', '#BankDetail_footer_Placeholder');
                    //    $('#txtAccountHolder, #txtAccountNumber,#txtSortCode,#txtCompanyName,#txtCompanyRegNo,#RegUrl').val('');
                    //}
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });

    },

    bindAgency: function (ctrl_dropdown) {
        var params = { orgIdORsecId: 0, dro: 'org' };
        ns_ajax.get(
            'api/ImportApi/',
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var serverResponse = $.parseJSON(response.split('|')[1]);

                    if (ctrl_dropdown !== '') {
                        var str = '';
                        $.each(serverResponse.dropdown_data, function (key, value) {
                            str += "<option value=" + value.Id + ">" + value.Name + "</option>";
                        });
                        $(ctrl_dropdown).html(str);                       
                    }                
                }
            }
        );
    },

    updateLeave: function (total_leave, cnd_id,action_by) {
        var JsonLeaveData = {
            "action": 'UPDATELEAVE',
            "cnd_profile": 'PROFILES',
            
            "action_by": action_by,
            "cnd_id": cnd_id,
            "total_leave": total_leave        
        }
        var params = "[" + JSON.stringify(JsonLeaveData) + "]";
      
        ns_ajax.post(
            urls.employees + 'post',
            params,
            function (response) {
                //if (response.split('|')[0] == "OK") {
                //    ShowAlertMessage("Message", 'Updated', "A");
                //}
            });
    }
}



ns_employee_template = {
    bindDropdowns: function (params) {
        ns_ajax.get(
            urls.employeesApi,
            params,
            function (data) {               
                if (data.Status === 'OK') {
                    var serverResponse = data.Response;
                    if (cnd_profile_block.toUpperCase() == 'ABSENCES') {
                        $("#modalAbsenceddlAbsenceType").empty();
                        $("#modalAbsenceddlAbsenceType").append($('<option/>', {
                            value: 0,
                            text: "All Absences"
                        }));
                        $.each(serverResponse.absences, function (key, value) {
                            $('#modalAbsenceddlAbsenceType').append($('<option/>', {
                                value: this.Id,
                                text: this.Name
                            }));
                        })
                    }
                    else if (cnd_profile_block.toUpperCase() == 'ALL-ABSENCES') {
                        $("#ddlAbsenceType" + dynamic_id).empty();
                        $("#ddlAbsenceType" + dynamic_id).append($('<option/>', {
                            value: 0,
                            text: "All Absences"
                        }));
                        $.each(serverResponse.absences, function (key, value) {
                            $("#ddlAbsenceType" + dynamic_id).append($('<option/>', {
                                value: this.Id,
                                text: this.Name
                            }));
                        })

                        $("#ddlAbsenceType" + dynamic_id + " option[value=" + absence_id + "]").attr('selected', 'selected');
                        $(".btn-update-absence").removeAttr('disabled');

                    }
                    else if (cnd_profile_block.toUpperCase() == 'TERMS') {
                        $("#ddlTermsJobRoles").empty();
                        $("#ddlTermsJobRoles").append($('<option/>', {
                            value: 0,
                            text: "All Roles"
                        }));
                        var currentparent = "", previousparent = "";
                        $.each(serverResponse.roles, function (key, value) {
                            currentparent = value.parent_id;
                            var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                            if (previousparent == "" || currentparent != previousparent) {
                                $('#ddlTermsJobRoles').append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                                previousparent = value.parent_id;
                            }
                            if (value.role_id != value.parent_id)
                                $('#ddlTermsJobRoles').append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                        })
                        // set selected index of terms job role
                        $('#ddlTermsJobRoles option[value=' + $('#ddlTermsJobRoles').attr('data-selected-id') + ']').prop('selected', true)


                        // Cnd Working Pattern
                        ns_WorkingPattern.FillDropdownWithPatternList('#ddlWorkingTimePattern', 0);

                        $("#ddlTermsTeam").empty();
                        $("#ddlTermsTeam").append($('<option/>', {
                            value: 0,
                            text: "All Teams"
                        }));
                        $.each(serverResponse.teams, function (key, value) {
                            $('#ddlTermsTeam').append($('<option/>', {
                                value: this.Id,
                                text: this.Name
                            }));
                        })
                        // set selected index of terms team
                        $('#ddlTermsTeam option[value=' + $('#ddlTermsTeam').attr('data-selected-id') + ']').prop('selected', true);

                        // Cnd autocomplete
                        fn_autocomplete('txtTermsReportTo', 'cnd', 'txt-terms-report-to');

                    }
                    else {
                        $(".clearText").val('');
                        $("#ddlCndJobRole").empty();
                        $("#ddlCndJobRole").append($('<option/>', {
                            value: 0,
                            text: "Select Role"
                        }));
                        var currentparent = "", previousparent = "";
                        $.each(serverResponse.eroles, function (key, value) {
                            /*currentparent = value.parent_id;*/
                            var color = '#000';// (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                            //if (previousparent == "" || currentparent != previousparent) {
                            //    $('#ddlCndJobRole').append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                            //    previousparent = value.parent_id;
                            //}
                            //if (value.role_id != value.parent_id)
                                $('#ddlCndJobRole').append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                        })

                        $("#ddlCndLocation").empty();
                        if (serverResponse.locations.length > 0) {
                            //$("#ddlCndLocation").append($('<option/>', {
                            //    value: 0,
                            //    text: "None"
                            //}));
                            $('#ddlCndLocation').val(1).trigger('change.select2');
                            $.each(serverResponse.locations, function (key, value) {
                                $('#ddlCndLocation').append($('<option/>', {
                                    value: this.Id,
                                    text: this.Name
                                }));
                            });
                           
                        }
                    }
                }
            }
        );
    },
}

$(document).ready(function () {
    $(document).on('click', '.cls-docs-action', function (e) {
        var action = $(this).attr('data-action');
        if (action == 'edit' || action == 'upload' || action == 'reupload') {
            var dataDocJson = $(this).attr('data-doc-json');
            $('.documentation_view').hide(300);
            $('.documentation_edit').show(300);
            var add_more_status = 0;
            dataDocJson = dataDocJson == "" ? null : jQuery.parseJSON(dataDocJson);
            ns_compliance.EditDoc(dataDocJson, add_more_status);
        }
        if (action == 'edit-view') {
            var dataDocJson = $('#' + $(this).attr('id')).attr('data-doc-json');
            $('#btnsavedocument').attr('add_more_status', '0');
            $('.documentation_view').hide(300);
            $('.documentation_edit').show(300);
            var add_more_status = 0;
            dataDocJson = dataDocJson == "" ? null : jQuery.parseJSON(dataDocJson);
            ns_compliance.EditDoc(dataDocJson, add_more_status);
            $('#modalComplanceDetails').modal('hide');
            $(".modal-backdrop").css('display', 'none');
        }
        if (action == 'deletefile') {
            var filepath = $(this).attr('data-path');
            var uid = $(this).attr('data-uid');
            var jsonData = {
                "action": action,
                "section": "cndactions",
                "cnd_id": $('.profile-id').attr('data-id'),
                "uid": uid,
                "filepath": filepath
            }
            var param = "[" + JSON.stringify(jsonData) + "]";
            ns_compliance.post(param, action, e);
        }
        if (action == 'upload_more') {
            var cat_id = $(this).attr('data-cat_id');
            var doc_name = $(this).attr('data-doc_name');

            $('.documentation_view').hide(300);
            $('.documentation_edit').show(300);
            var add_more_status = 1;
            var OtherfileJson = '{"cat_id":' + cat_id + ',"doc_id":0,"sort_order":0,"required_status":0,"doc_cat_uid":"","doc_name":"' + doc_name + '","doc_desc":"","required_issue_date":1,"required_expiry_date":1,"required_doc_number":1,"required_other_input":1,"doc_help_desc":"","doc_no":"","doc_uid":"","doc_custom_name":"' + doc_name + '","doc_issue_date":"","doc_expiry_date":"","doc_path":"[]","add_more":"1"}';
            ns_compliance.EditDoc(jQuery.parseJSON(OtherfileJson), add_more_status);
        }
        if (action == 'update') {
            var add_more_status = $(this).attr('add_more_status');
            var doc_custom_name = $('#txtDocNameView').val().trim();
            var doc_no = $('#txtDocNoView').val().trim();
            var doc_issue_date = $('#txtDocIssueDateView').val().trim();
            var doc_expiry_date = $('#txtDocExpiryDateView').val().trim();
            if (doc_custom_name == '') {
                ShowAlertMessage("Message", "Please enter document custom name", "A");
                $("#txtDocNameView").focus();
                return false;
            }
            else if (add_more_status == '1' && attchFile_IdCounter == 0) {
                ShowAlertMessage("Message", "Browse the file and attach to upload", "A");
                return false;
            }
            else {
                var add_to_master_status = 0;
                add_to_master_status = $('#chkAddtoMasterList').prop('checked') ? 1 : 0;

                var cat_id = $(this).attr('data-cat_id');
                var doc_id = $(this).attr('data-doc_id');
                var uid = $(this).attr('data-uid');
                var jsonData = {
                    "action": action,
                    "section": "cndactions",
                    "cnd_id": $('.profile-id').attr('data-id'),
                    "cat_id": cat_id,
                    "doc_id": doc_id,
                    "uid": uid,
                    "doc_custom_name": doc_custom_name,
                    "doc_no": doc_no,
                    "doc_issue_date": doc_issue_date,
                    "doc_expiry_date": doc_expiry_date,
                    "add_more_status": add_more_status,
                    "add_to_master_status": add_to_master_status,
                    "doc_files": arrDocAttachFiles_Data
                }

                var param = "[" + JSON.stringify(jsonData) + "]";
                ns_compliance.post(param, action, e);
            }
        }
        if (action == 'view') {
            var uid = $(this).attr('data-uid');
            if (uid !== '') {
                var doname = $(this).attr('data-docname');              
                ns_compliance.get(action, e, uid);
                $('#docFilename').html(doname);
                $('#modalComplanceDetails').modal();
            }
            else
                ShowAlertMessage("Message", "Please first upload the document.", 'A');
        }
        if (action == 'verify') {
            if ($('input[name="rdoAprovalStatus"]:checked').length == 0) {
                ShowAlertMessage("Message", "Please select status", "A");
                $("#rdoApprove").focus();
                return false;
            }
            else {
                var docStatus = $('input[name="rdoAprovalStatus"]:checked').val();
                var comments = $('#txtDocCommentsView').val().trim();
                var uid = $(this).attr('data-uid');
                var jsonData = {
                    "action": action,
                    "section": "cndactions",
                    "cnd_id": $('.profile-id').attr('data-id'),
                    "uid": uid,
                    "status": docStatus,
                    "comments": comments
                }
                var param = "[" + JSON.stringify(jsonData) + "]";
                ns_compliance.post(param, action, e);
            }
        }
        if (action == 'viewfile') {
            var extension = $(this).attr('data-extension');
            var url = $(this).attr('data-url');
            ns_compliance.viewFile(extension, url);
        }
        if (action == 'download_file') {
            var dowloaduri = $('#iframedocfile').attr('data-download-url');
            window.open(dowloaduri);
            return false;
        }
    });
    $(document).on('click', '.clsChkUploadedDocs', function () {
        var flag = $(this).prop('checked');
        var action = $(this).attr('data-action');
        if (action == "OTA") {
            var docStatusId = $(this).attr('data-doc-status');

            $('.clsOta-' + docStatusId).each(function () {
                var doc_name = $(this).attr('id');
                var status = $(this).attr('data-status');
                if (!(status == 'PENDING') && (flag == true))
                    $('#' + doc_name).prop('checked', true);
                else
                    $('#' + doc_name).prop('checked', false);
            });
        }
        else {
            var docId = $(this).attr('data-doc-id');
            $('.clsAdd-' + docId).each(function () {
                var doc_name = $(this).attr('id');
                var status = $(this).attr('data-status');
                if (!(status == 'PENDING') && (flag == true))
                    $('#' + doc_name).prop('checked', true);
                else
                    $('#' + doc_name).prop('checked', false);
            });
        }

    });
    $(document).on('click', '#btnViewAllUploadedDocs', function () {
        var length = $('.clsViewAllUploadedDocs:checked').length;
        if (length == 0) {
            ShowAlertMessage("Message", "Select atleast one document to view", 'A');
            ModalHide('#modalViewAllDocs');
        }
        else {
            $('#modalViewAllDocs').modal('show');
            var StrFileIds = new Array();
            $('.clsViewAllUploadedDocs:checked').each(function () {
                var fileId = $(this).attr('data-file-id');
                var verifyStatus = $(this).attr('data-status');
                StrFileIds.push(fileId);
            });
            ns_CompliancesDocuments.viewAllUploadedDocs(StrFileIds);
        }
    });

    //Files
    $(document).on('click', ".file-uploader", function () {
        var index = $(this).attr('data-val');
        $("#divFileUploader" + index).css('border', 'none');
    });
    $(document).on('click', ".cls-doc-file-action", function () {
        var action = $(this).attr('data-action');
        if (action == 'add') {
            $("#divAttachedFiles, .divAttachedFiles").hide();
            $("#divFileAttachfile").show('slow');
            if (attchFile_IdCounter == 0)
                ns_compliance.addFileUploaderRow();
        }
        if (action == 'cancel') {
            $("#divFileAttachfile, .divAttachedFiles").hide();
            $("#divAttachedFiles").show('slow');
        }
    });

    $(document).on('click', ".removeTaskFile", function () {
        if (attchFile_IdCounter > 1) {
            var index = $(this).attr('data-val');
            $("#attachedFileRow" + index).remove();
            attchFile_IdCounter--;
        }
    });
    $(document).on('click', ".modal-taskfile-btn", function () {
        var action = $(this).attr('task-action');
        var actionFrom = $(this).attr('action-from');
        if (action === 'addMoreFiles') {
            if (attchFile_IdCounter == 5) {
                ShowAlertMessage("Message", "Maximum file attach limit exceeded !", "A");
                return false;
            }
            else {
                arrDocAttachFiles_Data.length = 0;
                for (i = 1; i <= attchFile_IdCounter; i++) {
                    var isRowHidden = $("#txtFileDescription" + i).attr('row-hidden');
                    if (isRowHidden == "false") {
                        var fileUploader = $("#fileUploader" + i);
                        var fileDescription = $("#txtFileDescription" + i);
                        var divFileUploader = $("#divFileUploader" + i);
                        if (fileUploader.get(0).files.length === 0) {
                            divFileUploader.css('border', '0.5px solid red');
                            ShowAlertMessage("Message", "Please select file !", "A");
                            return false;
                        }
                        if (fileDescription.val().trim() === 0) {
                            fileDescription.css('border', '0.5px solid red');
                            ShowAlertMessage("Message", "Enter file name!", "A");
                            return false;
                        }
                    }
                }
                ns_compliance.addFileUploaderRow();
            }
        }
        else if (action == "attachFiles") {
            var atFilerow = "", attachFilesData = "";
            var taskId = (actionFrom == 'taskCard' ? $(this).attr('data-val') : 0);
            arrDocAttachFiles_Data.length = 0;
            var arrTaskFiles = [], fileExt;
            var data = new FormData();
            for (i = 1; i <= attchFile_IdCounter; i++) {
                var isRowHidden = $("#txtFileDescription" + i).attr('row-hidden');
                if (isRowHidden == "false") {
                    var fileUploader = $("#fileUploader" + i);
                    var fileDescription = $("#txtFileDescription" + i);
                    var divFileUploader = $("#divFileUploader" + i);
                    if (fileUploader.get(0).files.length === 0) {
                        divFileUploader.css('border', '0.5px solid red');
                        ShowAlertMessage("Message", "Please choose file !", "A");
                        return false;
                    }
                    //Getting file size from bytes
                    var fileSize = ns_compliance.getAttachedFileSize(fileUploader.get(0).files[0].size);
                    if (fileSize == 'error') {
                        divFileUploader.css('border', '0.5px solid red');
                        ShowAlertMessage("Message", "File size should be less than or equal to 5 MB", "A");
                        return false;
                    }
                    // geting file extention here
                    fileExt = fileUploader.get(0).files[0].name.split(/[.]+/).pop();
                    arrTaskFiles.push(fileUploader.get(0).files[0]);
                    attachFilesData = { "doc_file_id": "0", "doc_file_status": "0", "doc_file_upload_date": "",  "doc_file_name": fileDescription.val(), "doc_file_extension": "." + fileExt }
                    if (fileUploader.get(0).files[0].name.split('.')[1] === ".exe") {
                        divFileUploader.css('border', '0.5px solid red');
                        ShowAlertMessage("Message", "Executeable file not alloweded", "A");
                        return false;
                    }
                    if (fileUploader.get(0).files[0].name.split('.')[1] === ".mp3" || fileUploader.get(0).files[0].name.split('.')[1] === ".mp4" || fileUploader.get(0).files[0].name.split('.')[1] === ".wav") {
                        divFileUploader.css('border', '0.5px solid red');
                        ShowAlertMessage("Message", "Music file not alloweded", "A");
                        return false;
                    }
                    if (fileDescription.val().trim() === 0) {
                        fileDescription.css('border', '0.5px solid red');
                        ShowAlertMessage("Message", "Enter file name!", "A");
                        return false;
                    }
                    arrDocAttachFiles_Data.push(attachFilesData);
                    if (actionFrom == 'taskEdit' || actionFrom == 'taskAdd') {
                        //Created attached files row to show in table
                        atFilerow += '<tr><td>' + i + '</td><td class="text-left">' + (fileDescription.val().length == 0 ? "NA" : fileDescription.val()) + '</td><td class="text-left">' + fileSize + '</td><td class="text-left">' + fileUploader.get(0).files[0].name + '</td></tr>';
                    }
                }
            }

            // converting file into base64 here
            let customJsonFiles = ns_compliance.processAllAttachedFiles(arrTaskFiles);
            customJsonFiles.then(function (promise) {
                $.each(arrDocAttachFiles_Data, function (key, attachData) {
                    attachData.doc_file_path = promise[key].base64StringFile;
                });
            });

            if (actionFrom == 'taskCard')
                ns_compliance.actions(this);
            else {
                $("#tblBodyAttachedFiles").empty();
                $("#tblBodyAttachedFiles").append(atFilerow);
                //$("#attachedFileCount").html('<b>Total Files = ' + attchFile_IdCounter + '</b>');
                $("#divFileAttachfile").hide();
                $("#divAttachedFiles, .divAttachedFiles").show('slow');
            }
        }
    });
});

ns_compliance = {
    get: function (action, evt, uid) {
        profile_Id = $('.profile-id').attr('data-id');
        var param = '{"action":"' + action + '","section":"cndactions","cnd_id":"' + profile_Id + '","uid":"' + uid + '"}';
        var params = { json: param }

        if (action == 'view')
            $('#divPreviewBodyContent_placeholder').html('<center>Loading...<img src="images/spin.gif" /></center>');
        else
            $('#TabCompliance_Placeholder').html('<div class="text-center">Loading...<img src="images/spin.gif" /></div>');

        ns_ajax.get(
            urls.employees,
            params,
            function (data) {
                if (data.Status == 'OK') {                                
                    if (action == 'view')
                        call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#divPreviewBodyContent_Template', '#divPreviewBodyContent_placeholder');
                    else
                        call_tmpl_binder(data.Response, '/Template/cnd_profile_tmpl.html', '#CndCompliance_Template', '#TabCompliance_Placeholder');
                }
            });
    },
    post: function (params, action, evt) {
        var btnid = evt.target.getAttribute("id");
        if (action == "update")
            $('#' + btnid).html('Process...<img src="images/spin.gif" />');
        if (action == 'verify')
            $('#btnverifydocs').html('Process...<img src="images/spin.gif" />');

        ns_ajax.post(
            urls.employees + 'compliance',
            params,
            function (response) {
                if (action == "update")
                    $('#' + btnid).html('Save');
                else if (action == 'verify')
                    $('#btnverifydocs').html('Submit');

                if (response.split('|')[0] === 'OK') {
                    var objResult = jQuery.parseJSON(response.split('|')[1]);
                    if (action == 'verify') {
                        ShowAlertMessage("Message", objResult[0].result, "C");
                        ns_compliance.get('view', evt, $('#btnverifydocs').attr('data-uid'));
                        ns_compliance.get('list', evt, '');
                    }
                    else if (action == 'deletefile') {
                        ShowAlertMessage("Message", objResult[0].result, "C");
                        //alert($('#' + btnid).attr('data-path'));
                        //$('#file-').remove();  
                        ns_compliance.get('view', evt, $('#btnverifydocs').attr('data-uid'));
                    }
                    else if (action == "update") {

                        arrDocAttachFiles_Data = [];

                        //for (i = 1; i <= attchFile_IdCounter; i++) {
                        //    var isRowHidden = $("#txtFileDescription" + i).attr('row-hidden');
                        //    if (isRowHidden == "false") {
                        //        var fileUploader = $("#fileUploader" + i);
                        //        $("#txtFileDescription" + i).val('');
                        //        $("#divFileUploader" + i).val(null);                              
                        //    }
                        //}
                        attchFile_IdCounter = 0;

                        $('.documentation_edit').hide(300);
                        $('.documentation_view').show(300);
                        ShowAlertMessage("Message", objResult[0].result, "C");
                        ns_compliance.get('list', evt, '');
                    }
                    else
                        ShowAlertMessage("Message", objResult[0].result, "C");
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            }
        );
    },
    EditDoc: function (dataDocJson, add_more_status) {
        call_tmpl_binder(dataDocJson, '/Template/cnd_profile_tmpl.html', '#divAddEditDoc_Template', '#divAddEditDoc_Placeholder');

        setTimeout(
            function () {
                $('#btnsavedocument').attr('add_more_status', add_more_status);
            }, 300);

    },
    actions: function (e) {
        var params = "";
        var btnTitle = $(e).attr('data-title');
        var FileId = $(e).attr('data-val');
        var action = $(e).attr('task-action');
        var FileStatus = $(e).attr('task-status');
        var taskCat = $(e).attr('task-cat');
        if (taskCat == 1)
            var index = $(e).attr('data-index');
        var documentData = {
            "task_id": (action === 'delete-file' ? FileId + "," + $(e).attr('data-file') : FileId),
            "task_status": FileStatus,
            "task_category": taskCat,
            "action": action
        }
        if (btnTitle !== "UploadFiles")
            params = "[" + JSON.stringify(documentData) + "]";
        else
            params = "[" + JSON.stringify(documentData) + "]";
        ns_compliance.post(params, action, e);
    },
    viewFile: function (extension, url) {
        if (url !== "") {
            $('#iframedocfile').attr('data-download-url', url);
            if (extension == '.xls' || extension == '.xlsx' || extension == '.csv')
                $('#iframedocfile').show().attr('src', '/images/excel.png');
            else if (extension == '.doc' || extension == '.docx')
                $('#iframedocfile').show().attr('src', '/images/doc_docx.png');
            else
                $('#iframedocfile').show().attr('src', url);
        }
        else {
            $('#iframedocfile').show().attr('src', '/images/not_available.png');
        }
    },
    addFileUploaderRow: function () {
        attchFile_IdCounter++;
        var attachFileRow = '<div id="attachedFileRow' + attchFile_IdCounter + '" class="row">' +
            '<div style="padding-top: 33px;"><label ></label><label id="lblTaskFile">' + attchFile_IdCounter + '</label></div>' +
            '<div class="col-md-6" id="divFileUploader' + attchFile_IdCounter + '">' +
            '<div><label>Choose file<span>*</span></label>' +
            '<div class="input-group" style="margin-bottom:5px;">' +
            '<div class="input-group-prepend">' +
            '<span id="fileUploaderAddOn" class="input-group-text clearTextFile">Upload</span>' +
            '</div>' +
            '<div class="custom-file">' +
            '<input id="fileUploader' + attchFile_IdCounter + '"  accept="image/*,application/pdf,application/msword/,application/xlxs/,application/xlx,.txt,.docx,.doc,.zip,.rar,.mp4,.wav,.3gp" type="file" row-hidden="true" data-val="' + attchFile_IdCounter + '" class="custom-file-input file-uploader clearTextFile" aria-describedby="fileUploaderAddOn"/>' +
            '<label class="custom-file-label" for="fileUploader">Choose file</label>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '<div class="col-md-4">' +
            '<div><label>File Name<span></span></label><input id="txtFileDescription' + attchFile_IdCounter + '" type="text" row-hidden="false" data-val="' + attchFile_IdCounter + '" class="form-control clearTextFile" autocomplete = "off" placeholder="Enter File description"/></div>' +
            '</div>' +
            '<div class="col-md-1">' +
            '<div class="mt-4">';
        if (attchFile_IdCounter > 1) {
            attachFileRow += '<a id="btnRemoveTaskFile' + attchFile_IdCounter + '"class="btn btn-outline-danger btn-md mt-2 removeTaskFile" data-val="' + attchFile_IdCounter + '"><i class="zmdi zmdi-delete btnlgt"></i></a>';
        }
        attachFileRow += '</div></div> </div>';

        $("#divAttchFiles").append(attachFileRow);
    },
    processAllAttachedFiles: function (files) {
        return Promise.all(files.map(file => ns_compliance.genrateBase64File(file)));
    },
    genrateBase64File: function (file) {
        var reader = new FileReader();
        return new Promise((resolve, reject) => {
            reader.onerror = () => { reader.abort(); reject(new Error("Error parsing file")); }
            reader.onload = function () {
                //This will result in an array that will be recognized by C#.NET WebApi as a byte[]
                let bytes = Array.from(new Uint8Array(this.result));
                //if you want the base64encoded file you would use the below line:
                let base64StringFile = btoa(bytes.map((item) => String.fromCharCode(item)).join(""));
                //Resolve the promise with your custom file structure
                resolve({
                    base64StringFile: base64StringFile,
                });
            }
            reader.readAsArrayBuffer(file);
        });
    },
    getAttachedFileSize: function formatBytes(bytes) {
        if (bytes < 1024) return bytes + " Bytes";
        else if (bytes < 1048576) return Math.round(bytes / 1024) + " KB";
        else if (bytes < 1073741824) {
            if (bytes / 1048576 > 5)
                return 'error';
            else
                return Math.round(bytes / 1048576) + " MB"
        };
    },
}


ns_rota = {
    // Job Roles
    getUniversalRoles: function (Id) {
        $(Id).empty();
        $(Id).append($("<option />").val('').text('All Roles'));
        var param = { id: '0', role_id: '0', search: '', type: 'UNIVERSAL_ROLE' };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var currentparent = "", previousparent = "";
                    $.each(obj, function (key, value) {
                        currentparent = value.parent_id;
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        if (previousparent == "" || currentparent != previousparent) {
                            jQuery(Id).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                            previousparent = value.parent_id;
                        }
                        if (value.role_id != value.parent_id)
                            jQuery(Id).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    });
                    $(Id).append($("<optgroup style='font-weight:bold;background-color:#ccc;color:#f00' label='Other Role' id='0'></optgroup>"));
                    $(Id).append($("<option />").val('0').text('Other'));
                    var role_id = $(Id).attr('data-role-id');
                    role_id > 0 ? $(Id).val(role_id) : '';
                }
            }
        );
    },
    FillDropdownWithCustomRoles: function (Id) {
      
        $(Id).empty();
        $(Id).append($("<option />").val('').text('Select Role'));       
        $(Id).append($("<option />").val('0').text('Default'));
        var param = { id: 0 };
        ns_ajax.get(
            urls.rotaApi + "location",
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    $.each(obj.JobRole, function (key, value) {
                        $(Id).append("<option data-role-id='" + value.role_id + "' data-rate=" + value.cnd_custom_role_rate + " value=" + value.cnd_custom_role_id + " title='" + value.cnd_custom_role_name + "'>" + value.cnd_custom_role_alias + "</option>");
                    });
                    var role_id = $(Id).attr('data-role-id');
                    role_id > 0 ? $(Id).val(role_id) : '';
                }
            }
        );
    },
    GetRolesList: function () {
        
        $('#tblCustomRole').html('<td colspan="9" style="margin-bottom:10px;"><div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div></td>');
            var type = "jobrole";
        var id = $('#btnCustomRole').attr('data-id');
        var role_id = '';//$('#ddlfilterrole').val();
        var search = $('#txtfilterSearch').val();
        var param = { id: id, role_id: role_id, search: search, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#CustomeRole_Template', '#tblCustomRole');
                }
                else {
                    var msg = "Role(s) not found.";                    
                    var link = 'Please Add role by click on button <a id="BtnAddNewRole" class="btn btn-outline-primary btn-sm ClsCustomRole"  data-action="openmodal" data-toggle="modal" data-target="#ModalCustomRole"><i class="ti ti-plus"></i> Configure</a>';
                    $('#tblCustomRole').html(nodata2(msg, link));
                }
                  
            });
    },
    GetCustomeRoleDetails: function () {
        var type = "jobrole";
        var id = $('#btnCustomRole').attr('data-id');
        var param = { id: id, role_id: "0", search: "", type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    var str = '';
                    $.each(obj, function (key, value) {
                        //ns_rota.getUniversalRoles('#ddlRoleCategory');
                        $("#ddlRoleCategory").attr("data-role-id", value.role_id);
                        $("#txtRolename").val(value.cnd_custom_role_name);
                        $("#txtRoleAlias").val(value.cnd_custom_role_alias);
                        $("#txtDefaultBreak").val(value.cnd_custom_break_min);
                        $("#txtDefaultRate").val(value.cnd_custom_role_rate);
                        $("#txtLabelColorCode").val(value.cnd_custom_role_color);
                    });
                }
            });
    },
    InsertUpdateCustomeRole: function () {
        var obj = {};
        var role_id = 0;// $("#ddlRoleCategory").val();
        var rolename = $("#txtRolename").val();
        var rolealias = $("#txtRoleAlias").val();
        var defaultbreak = $("#txtDefaultBreak").val();
        var defaultrate = $("#txtDefaultRate").val();
        var rolecolor = $("#txtLabelColorCode").val();

        //if (role_id == '') {
        //    $("#ddlRoleCategory").focus();
        //    ShowAlertMessage("Message", "Select a category", "A");
        //    return false;
        //}
        if (rolename == '') {
            $("#txtRolename").focus();
            ShowAlertMessage("Message", "Enter role name", "A");
            return false;
        }
        if (rolealias == '') {
            $("#txtRoleAlias").focus();
            ShowAlertMessage("Message", "Enter role alias", "A");
            return false;
        }
        if (rolecolor == '') {
            $("#txtLabelColorCode").focus();
            ShowAlertMessage("Message", "Select color", "A");
            return false;
        }
       
        obj.cnd_custom_role_id = $('#btnCustomRole').attr('data-id');
        obj.role_id = role_id;
        obj.cnd_custom_role_name = rolename;
        obj.cnd_custom_role_alias = rolealias;
        obj.cnd_custom_break_min = defaultbreak;
        obj.cnd_custom_role_rate = defaultrate;
        obj.cnd_custom_role_color = rolecolor;
        obj.action = 'role_add_update';
        var param = "[" + JSON.stringify(obj) + "]";
       
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ModalHide('#ModalCustomRole');
                    ShowAlertMessage("Message", "Role has been " + (obj.cnd_custom_role_id == 0 ? 'Save' : 'Updated') + '  successfully.', "C");

                    ns_rota.ClearRoleCtr();
                    ns_rota.GetRolesList();
                    ns_rota_planner.GetJobRoles($('#btnaddlocationRole').attr('data-location'));
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ChangeStatusCustomRole: function (id, status, action) {
        var obj = {};
        obj.cnd_custom_role_id = id;
        obj.status = status;
        obj.action = action;
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    if (action == 'ROLE_CHANGE_STATUS') {
                    /*    ShowAlertMessage("Message", "Status has been changed successfully.", "C");*/
                        $('#Status-' + id).attr('data-status', status);
                        ns_rota.ChangeStatus('Status-' + id, status);
                    }
                    else
                        $('#tr-' + id).remove();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ClearRoleCtr: function () {
        $('#btnCustomRole').attr('data-id', "0");
        $('#btnCustomRole').html('Save');
        $("#ddlRoleCategory").val('');
        $("#txtRolename").val('');
        $("#txtRoleAlias").val('');
        $("#txtDefaultBreak").val('');
        $("#txtDefaultRate").val('');
        $("#txtLabelColorCode").val('');
        $("#ddlfilterrole").val('');
        $(".ClslblMaster").prop('checked', false);

    },
    ChangeStatus: function (id, status) {
        if (status == 1) {
            $('#' + id).html('Active');
            $('#' + id).removeClass('btn-warning');
            $('#' + id).addClass('btn-success');
        }
        else {
            $('#' + id).html('Inactive');
            $('#' + id).removeClass('btn-success');
            $('#' + id).addClass('btn-warning');
        }
    },
    //Shift times
    GetShiftTimmingList: function () {
        $('#tblRotaShiftTimming').html('<td colspan="6" style="margin-bottom:10px;"><div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div></td>');
        var type = "shifttime";
        var id = $('#btnRotaShiftTimming').attr('data-id');
        var role_id = $('#ddlfilterrole').val();
        var search = $('#txtfilterSearch').val();
        var param = { id: id, role_id: role_id, search: search, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#ShiftTime_Template', '#tblRotaShiftTimming');
                }
                else {
                    $('.tblRotaShiftTimming').html('<td colspan="6" style="margin-bottom:10px;"><div class="empty" style="color:#C4814B"><center><i class="fa fa-meh-o" style="font-size:27px; color:#95C7E7">&nbsp;SORRY !</i><br>There is no records</center></div></td>');

                }
            });
    },
    GetShiftTimmingDetail: function () {
        var type = "shifttime";
        var id = $('#btnRotaShiftTimming').attr('data-id');
        var param = { id: id, role_id: 0, search: "", type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    var str = '';
                    $.each(obj, function (key, value) {
                        $("#txtShiftTimmingName").val(value.shift_timing_name);
                        $("#txtShiftTimeFrom").val(value.shift_start_time);
                        $("#txtShiftTimeTo").val(value.shift_end_time);
                        $("#txtLabelColorCode").val(value.shift_timing_color);
                        $("#ddlRoleCustom").attr('data-role-id', value.job_role_id);
                        ns_rota.FillDropdownWithCustomRoles('#ddlRoleCustom');
                       
                        $(".ClslblMaster").each(function () {
                            if ($(this).val() == value.shift_timing_color.trim())
                                $(this).prop('checked', true);
                            else
                                $(this).prop('checked', false);
                        });
                    });
                }
            });
    },
    ShiftTimmingClear: function () {       
        $('#btnRotaShiftTimming').attr('data-id', "0");
        $('#btnRotaShiftTimming').html('Save');
        $("#ddlRoleCustom").val('').attr('data-role-id', "0");
        $("#txtShiftTimmingName").val('');
        $("#txtShiftTimeFrom").val('');
        $("#txtShiftTimeTo").val('');
        $("#txtDuration").val('');
        $("#txtLabelColorCode").val('');        
        $("#txtfilterSearch").val('');
        $("#ddlfilterrole").val('');
        $(".ClslblMaster").prop('checked', false);
    },
    InsertUpdateShiftTimming: function () {
        var obj = {};
        var role_id = $("#ddlRoleCustom").val();
        var shiftname = $("#txtShiftTimmingName").val();
        var shifttimefrom = $("#txtShiftTimeFrom").val();
        var shifttimeto = $("#txtShiftTimeTo").val();
        var rolecolor = $("#txtLabelColorCode").val();

        var para = role_id == '' ? '' : shiftname == '' ? '' : shifttimefrom == '' ? '' : shifttimeto == '' ? '' : rolecolor == '' ? '' : 'NA';
        var para1 = role_id == '' ? '#ddlRoleCustom' : shiftname == '' ? '#txtShiftTimmingName' : shifttimefrom == '' ? '#txtShiftTimeFrom' : shifttimeto == '' ? '#txtShiftTimeTo' : rolecolor == '' ? '#txtLabelColorCode' : 'NA';
        var msg = role_id == '' ? 'Select a category' : shiftname == '' ? 'Enter shift time name' : shifttimefrom == '' ? 'Enter shift time from' : shifttimeto == '' ? 'Enter shift time to' : rolecolor == '' ? 'Select label color' : 'NA';
        var resp = ns_rota.Validation(para, para1, msg);
        if (resp == false) return false;

        obj.id = $('#btnRotaShiftTimming').attr('data-id');
        obj.role_id = role_id;
        obj.shift_timing_name = shiftname;
        obj.shift_start_time = shifttimefrom;
        obj.shift_end_time = shifttimeto;
        obj.shift_timing_color = rolecolor;
        obj.action = 'shift_add_update';
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Shift Timming has been " + (obj.id == 0 ? 'Save' : 'Updated') + ' successfully.', "C");
                    ModalHide('#ModalShiftTimming');
                    ns_rota.ShiftTimmingClear();
                    ns_rota.GetShiftTimmingList();
                    ns_rota_planner.Get_Shift_JobRole_Location_masters('', '', '#selectshifttiming', '0', '0');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    Validation: function (para, para1, msg) {
        if (para == '') {
            $(para1).focus();
            ShowAlertMessage("Message", msg, "A");
            return false;
        }
    },
    ChangeStatusShiftTime: function (id, status, action) {
        var obj = {};
        obj.id = id;
        obj.status = status;
        obj.action = action;
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    if (action == 'SHIFT_CHANGE_STATUS') {
                        //ShowAlertMessage("Message", "Status has been changed successfully.", "C");
                        $('#Status-' + id).attr('data-status', status);
                        ns_rota.ChangeStatus('Status-' + id, status)
                    }
                    else
                        $('#tr-' + id).remove();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    //Group
    GetGroupList: function () {
        $('#tblGroupMaster_Placeholder').html('<td colspan="2" style="margin-bottom:10px;"><div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div></td>');
        var type = "group";
        var group_name = $('#txtfilterSearch').val();
        var param = { id: 0, role_id: 0, search: group_name, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#Group_Template', '#tblGroupMaster_Placeholder');
                }
                else
                    $('.tblGroupMaster_Placeholder').html('<td colspan="2" style="margin-bottom:10px;">Not Available</div></td>');
            });
    },
    GetGroupDetails: function (id) {
        var type = "group";
        var group_name = $('#txtfilterSearch').val();
        var param = { id: id, role_id: 0, search: "", type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    $.each(obj, function (key, value) {
                        $("#btnGroupMaster").attr('data-id', value.group_id);
                        $("#txtGroupName").val(value.group_name);
                    });
                }
            });
    },
    AddUpdateGroup: function () {
        var obj = {};
        var group = $("#txtGroupName").val();
        if (group == '') {
            $("#txtGroupName").focus();
            ShowAlertMessage("Message", "Enter group name !", "A");
            return false;
        }
        obj.group_id = $("#btnGroupMaster").attr('data-id');
        obj.group_name = group;
        obj.action = 'group';

        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", '' + (obj.group_id == '0' ? 'saved' : 'updated') + ' successfully.', "C");
                    $("#btnGroupMaster").attr('data-id', "0");
                    $("#btnGroupMaster").html('Save');
                    $("#txtGroupName").val('');
                    ModalHide('#ModalGroupMaster');
                    ns_rota.GetGroupList();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    DeleteGroup: function (id) {
        var obj = {};
        obj.group_id = id;
        obj.action = 'groupdelete';
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.employerApi + 'profile',
            param,
            function (response) {
                if (response.split("|")[0] == 'OK') {
                    ShowAlertMessage("Message", "Group has been delete successfully.", "C");
                    $('#tr-' + id).remove();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
}




ns_Emp_Payment_Setting = {
    UpdateCompanyDetails: function () {
        var company_name = $("#txt_org_name").val();
        var industry_type = $("#ddl_industry").val();
        var number_of_employees = $("#ddl_number_of_employees").val();

        if (company_name == '') {
            $("#txt_org_name").focus();
            ShowAlertMessage("Message", "Enter Company/Organisation name", "A");
            return false;
        }
        else if (company_name !== '' && company_name.length < 3) {
            $("#txt_org_name").focus();
            ShowAlertMessage("Message", "Company/Organisation name must be at least 3 characters long", "A");
            return false;
        }
        else if (industry_type == null || industry_type == '') {
            $("#ddl_industry").focus();
            ShowAlertMessage("Message", "Select industry", "A");
            $('#ddl_industry').trigger('click');
            return false;
        }
        else if (number_of_employees == null || number_of_employees == '0') {
            ShowAlertMessage("Message", "How many have you got employee?", "A");
            $("#ddl_number_of_employees").focus();
            return false;
        }
        else {            
            var obj = {};
            obj.company_name = $("#txt_org_name").val().trim();
            obj.industry = $("#ddl_industry").find(':selected').attr('data-industry');
            obj.category = $("#ddl_industry").val();
            obj.number_of_employees = $("#ddl_number_of_employees").val();
            obj.action = 'basic_details';
            var params = "[" + JSON.stringify(obj) + "]";
            ns_ajax.post(
                urls.companyApi,
                params,
                function (data) {
                    if (data.Status == 'OK') {
                        ShowAlertMessage('Message', data.Response, 'C');
                        ns_users.getUserprofile();
                    }
                    else
                        ShowAlertMessage("Message", data.Error, "A");
                });

        }      
    },

    SubmitPaymentSetting: function () {
        var obj = {};
        var status = $("input[name='vat_status']").prop('checked') ? '1' : '0';
      
        if ($('input[name="vat_status"]:checked').length == 0) {
            ShowAlertMessage("Message", 'Choose VAT status', "A");
            return false;
        }
        else {
            var VatRuleApplicableDate = $('#txtVatRuleApplicableDate').val();
            obj.vat_rule_on_total = $('#chkvatruleontotal').prop('checked') ? '1' : '0';
            obj.vat_rule_on_margin = 0;// $('#chkvatruleonmargin').prop('checked') ? '1' : '0';
            obj.direct_engagement = 0;// $('#chkDirectEngagement').prop('checked') ? '1' : '0';
            if (obj.vat_rule_on_total == 1) {
                if ($("#txtvatRate").val() == '' || $("#txtvatRate").val() == 0 || $("#txtvatRate").val() == '0.0') {
                    $("#txtvatRate").focus();
                    ShowAlertMessage("Message", "Enter vat rate", "A");
                    return false;
                }
            }
            //if (VatRuleApplicableDate == '') {
            //    $("#txtVatRuleApplicableDate").focus();
            //    ShowAlertMessage("Message", "Select date", "A");
            //    return false;
            //}

            obj.emp_id = $('#hdfEmpIdProfile').val();
            obj.status = status;
            obj.vat_value = $('#txtvatRate').val();
            obj.payment_on_job_date = 0;// $('#chkEmpJobDate').prop('checked') ? '1' : '0';
            obj.payment_on_invoice_date = 0;// $('#chkEmpInvoiceDate').prop('checked') ? '1' : '0';
            obj.payment_type = 0;// $('#chkEmpSelf').prop('checked') ? '0' : '1';
            obj.payment_terms_start_days = 0;// $('#selectpaymentterms option:selected').attr('data-mindays');
            obj.payment_terms_end_days = 0;// $('#selectpaymentterms option:selected').attr('data-maxdays');
            obj.rule_applicable_date = '';// VatRuleApplicableDate;
            obj.finance_status = 0;// $('#chkFinance').prop('checked') ? '1' : '0';
            obj.finance_deatils = '';// $('#txtFinanceDetails').val();
            obj.action = 'update';
            var params = "[" + JSON.stringify(obj) + "]";
            ns_ajax.post(
                urls.companyApi,
                params,
                function (data) {
                    if (data.Status == 'OK') {
                        ShowAlertMessage('Message', data.Response, 'C');
                        $('.ulEmpPaymentSetting').click();
                    }
                    else
                        ShowAlertMessage("Message", data.Error, "A");
                });
        }
    },
    LoadPaymentSettings: function () {
        ns_Emp_Payment_Setting.Clear();     
        var param = '{"action":"get"}';
        var params = { json: param }

        ns_ajax.get(
            urls.companyApi,
            params,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response[0].CompanySetting;// jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {                       
                        value.status == "1" ? $("#rdo_vat_status_yes").prop('checked', true) : $("#rdo_vat_status_no").prop('checked', true);
                        
                        value.vat_rule_on_total == "1" ? $('#divVatRate').show() : $('#divVatRate').hide();
                        value.vat_rule_on_total == "1" ? $('#chkvatruleontotal').prop('checked', true) : $('#chkvatruleontotal').prop('checked', false);
                        value.vat_rule_on_margin == "1" ? $('#chkvatruleonmargin').prop('checked', true) : $('#chkvatruleonmargin').prop('checked', false);
                        value.direct_engagement == "1" ? $('#chkDirectEngagement').prop('checked', true) : $('#chkDirectEngagement').prop('checked', false);

                        $("#txtvatRate").val(value.vat_value);
                        if (value.status == '1') {
                            $('#clsDivVaTRule').show('slow');
                            $('#divVatRate').show('slow');
                        }
                        else {
                            $('#clsDivVaTRule').hide('slow');
                            $('#divVatRate').hide('slow');
                        }

                        $("#txtVatRuleApplicableDate").val(value.rule_applicable_date2);
                        $("#selectpaymentterms").val(value.payment_terms_start_days + '#' + value.payment_terms_end_days);
                        value.payment_on_job_date == "1" ? $('#chkEmpJobDate').prop('checked', true) : $('#chkEmpJobDate').prop('checked', false);
                        value.payment_on_invoice_date == "1" ? $('#chkEmpInvoiceDate').prop('checked', true) : $('#chkEmpInvoiceDate').prop('checked', false);
                        value.payment_type == "1" ? $('#chkEmpDirect').prop('checked', true) : $('#chkEmpSelf').prop('checked', true);
                      
                        value.invoice_finance_status == "1" ? $('#chkFinance').prop('checked', true) : $('#chkFinance').prop('checked', true);
                        value.invoice_finance_status == "1" ? $('#divFinanceDetails').show() : $('#divFinanceDetails').hide();
                        
                        
                        $('#txtFinanceDetails').val(value.invoice_finance_details);


                        (value.create_date2 == null || value.create_date2 == '') ? 'Not Available' : $('#spnEmpPSCreatedate').html(value.create_date2);
                        (value.update_date2 == null || value.update_date2 == '') ? 'Not Available' : $('#spnEmpPSUpdatedate').html(value.update_date2);


                        setTimeout(function () {
                            DatePairFuction();
                        }, 700);


                    });
                }
                else {
                    $('#divVatRate').hide();
                    $('#chkvatruleontotal').prop('checked', false);
                    $('#chkvatruleonmargin').prop('checked', false);
                    $('#chkDirectEngagement').prop('checked', false);
                    $("#txtvatRate").val('');
                    $("#txtVatRuleApplicableDate").val('');
                    $("#selectpaymentterms").val('0#14');
                    $('#chkEmpJobDate').prop('checked', false);
                    $('#chkEmpInvoiceDate').prop('checked', false);
                    $('#chkEmpDirect').prop('checked', false);
                    $('#chkEmpSelf').prop('checked', false);

                    $('#spnEmpPSCreatedate').html('Not create yet');
                    $('#spnEmpPSUpdatedate').html('Not update yet');
                    //ShowAlertMessage("Message", response, "A");
                    setTimeout(function () {
                        DatePairFuction();
                    }, 700);

                }
            });
    },
    Clear: function () {
        $("input[name='vat_status']").prop('checked', false);
        $('#chkvatruleontotal').prop('checked', false);
        $('#chkvatruleonmargin').prop('checked', false);
        $('#chkEmpJobDate').prop('checked', false);
        $('#chkEmpInvoiceDate').prop('checked', false);
        $('#chkEmpDirect').prop('checked', false);
        $('#chkEmpSelf').prop('checked', false);
        $("#txtvatRate").val('0.00');
        $("#txtVatRuleApplicableDate").val('');
    },
}

ns_candidate = {
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == 'No Records') {
            //$('.cls-All, .cls-ACTIVE, .cls-INACTIVE, .cls-DELETED).html('0');
        }
        else {
            if (obj.length == 1)
                flag = false;
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'ACTIVE' || value.status == 'INACTIVE' || value.status == 'DELETED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }
    },
    GetCandidates: function (obj) {
        var TotalRecords = 0;
        var rows = '';
        if (obj !== 'No Records') {
            $.each(obj, function (key, value) {
                TotalRecords = value.TotalRecord;
                var cndid = value.cnd_id;
                var account_status_label = value.account_status_label;
                var cndname = value.cnd_name;
                rows += '<tr>';
                rows += '<td><div class="checkbox"><input id="chkAllMsg' + cndid + '" type="checkbox"><label for="chkAllMsg' + cndid + '">&nbsp;</label></div></td>';
                $.each(value, function (i, item) {
                    var field = i;
                    var val = value[i] == null ? '' : value[i];
                    if (field == 'TotalRecord') { }
                    else if (field == 'RowNumber') {
                        rows += '<td class="' + field + '">' +
                            //SrNo.
                            '<span>' + val + '</span>' +
                            //Action Buttons   
                            '<span class="table-row-btn">';
                        var clsAction = 'class="btn btn-outline-primary btn-sm mr-1 btn-account-action"';

                        rows += '<a ' + clsAction + ' data-action="blockpayment" data-toggle="modal" data-target="#block-payment"><i class="zmdi zmdi-flag"></i></a>';

                        rows += '<a class="btn btn-outline-primary btn-sm mr-1 btnNotes" data-id="' + cndid + '" data-name="' + (cndname.split('#')[0]) + '" data-role="' + (cndname.split('#')[1]) + '" data-profile-type="CND" title="Notes" data-toggle="modal" data-target="#ModalNotes"><i class="zmdi zmdi-file-text"></i></a>';

                        //rows += '<a ' + clsAction + ' data-action="notes" data-toggle="modal" data-target="#notes-modal"><i class="zmdi zmdi-file-text"></i></a>';
                        //rows += '<a ' + clsAction + ' data-action="comments" data-id="' + cndid + '" title="Comments" data-toggle="modal" data-target="#comments"><i class="zmdi zmdi-comment-more col-brown">&nbsp;</i></a>';
                        rows += '<a ' + clsAction + ' data-action="view" data-id="' + cndid + '" data-name="' + (cndname.split('#')[0]) + '" data-role="' + (cndname.split('#')[1]) + '" data-profile-type="CND" title="View" data-toggle="modal" data-target="#viewprofile"><i class="zmdi zmdi-search col-teal">&nbsp;</i>View</a>';
                        rows += '</span>';
                        '</td>';
                    }
                    else if (field == 'cnd_id') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<a data-action="view" data-id="' + cndid + '" title="View" data-toggle="modal" data-target="#viewprofile" class="btn-account-action col-blue"><b>' + val + '</b></a>' +
                            '</td>';


                    }
                    else if (field == 'cnd_name') {
                        rows += '<td class="' + field + '">' +
                            '<span class="ml-1">' +
                            '<span><b>' + (val.split('#')[0]) + '</b></span>' +
                            '<br><small class="col-lime"><b>' + (val.split('#')[1]) + '</b></small>' +
                            '</span>' +
                            '</td>';
                    }
                    else if (field == 'owner_name') {
                        rows += '<td class="' + field + '">' +
                            '<a class="badge badge-primary" data-toggle="modal" data-target="#ownership">' + GetShortName(val) + '</i></a>' +
                            '</td>';
                    }
                    else if (field == 'cnd_email_details') {
                        rows += '<td class="' + field + '">' +
                            '<a href="#" class="EShow "><i class="zmdi zmdi-email-open"></i> ' + val.split("#")[0] + '</a>' +
                            (val.split("#")[1] == '1' ? '<br><span class="col-green"><i class="zmdi zmdi-check-all"></i> Verified</span><br>' + val.split("#")[2] + ''
                                : '<br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i> Not Verified</span>') +
                            '</td>';
                    }
                    else if (field == 'cnd_mobile_details') {
                        rows += '<td class="' + field + '">' +
                            '<a href="#" class="PShow col-grey"><i class="zmdi zmdi-phone-in-talk"></i> ' + val.split("#")[0] + '</a>' +
                            (val.split("#")[1] == '1' ? '<br><span class="col-green"><i class="zmdi zmdi-check-all"></i> Verified</span><br>' + val.split("#")[2] + ''
                                : '<br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i> Not Verified</span>') +
                            '</td>';
                    }
                    else if (field == 'cnd_audit_status') {
                        rows += '<td class="' + field + '">' +
                            (val == '1' ? '<span class="col-green"><b><i class="zmdi zmdi-check-all">&nbsp;</i>Audited</b></span>' :
                                '<span class="badge badge-default"><b>Audit</b></span>') +
                            '</td>';
                    }
                    else if (field == 'mdr') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-danger" data-toggle="tooltip" title="Non Compliant" ' +
                            'data-original-title="Non Compliant"> <i class="fa fa-warning faa-flash animated red">&nbsp;</i></a>' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-danger m-1" data-toggle="tooltip" title="Non Compliant Mandatory Docs" ' +
                            'data-original-title="Non Compliant Mandatory Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }
                    else if (field == 'trn') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-warning btn-sm red" data-toggle="tooltip" title="Non Compliant Training Docs"' +
                            'data-original-title="Non Compliant Training Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }
                    else if (field == 'opt') {
                        rows += '<td class="' + field + '">' +
                            '<a data-toggle="modal" data-target="#viewalldocs18" class="badge badge-info btn-sm viewalldocs" data-toggle="tooltip" title="Non Compliant Optional Docs"' +
                            'data-original-title="Non Compliant Optional Docs">' + (val.split('#')[0]) + ' <b>/</b> ' + (val.split('#')[1]) + '</a>' +

                            '</td>';
                    }
                    else if (field == 'account_status_label') {
                        rows += '<td class="' + field + '">' +
                            (val == 'ACTIVE' ? '<span class="badge badge-success"><b>' + val + '</b></span>' :
                                val == 'INACTIVE' ? '<span class="badge badge-default"><b>' + val + '</b></span>' : +
                                    val == 'DELETED' ? '<span class="badge badge-danger"><b>' + val + '</b></span>' : '') +
                            '</td>';
                    }
                    else {
                        rows += '<td class="' + field + '">' +
                            '<span>' + val + '</span>' +
                            '</td>';
                    }
                });
                rows += '</tr>';
            });
        }
        else {
            rows = '<td colspan="5" style="height:100px;color:lightcoral; font-size:16px">' + obj + '</td>';
        }
        result = ns_Paging._Object(rows, TotalRecords);
        $('.tblRecods').html(rows);
        DatePairFuction();
        return result;
        fn_autocomplete('txtcandidatename', 'cnd', 'txtcandidatename');
    },

    Insert_Candidate: function () {
      
        var obj = {};
        var ddlCat = $("#ddlcat").val();
        var ddlRole = $("#ddlRole").val();
        var ddlTitle = $("#ddltitle").val();
        var txtFirstName = $("#txtFirstName").val();
        var txtLastName = $("#txtLastName").val();
        var txtGmcNumber = $("#txtGmcNumber").val();
        var txtMobileNumber = $("#txtCndMobileNumber").val();
        var txtCndEmail = $("#txtCndEmail").val();
        var Gender = $("input[name='Gender']:checked").val();
        var txtPostcode = $("#txtPostCode").val();
        var ddlCndLocation = $("#selectList2").val();
        var txtCndAddress1 = $("#txtaddressline2").val();
        var txtCity = $("#txtCndCity").val();
        var txtCounty = $("#tctCndCounty").val();
        var IsEmailChecked = $('#ChkCndSignupEMAIL').is(":checked");
        var IsSmsChecked = $('#ChkCndSignupSMS').val();
        if ($('#ChkCndSignupEMAIL').attr('type') === 'checkbox')
            IsEmailChecked = +$('#ChkCndSignupEMAIL').is(':checked');
        if ($('#ChkCndSignupSMS').attr('type') === 'checkbox')
            IsSmsChecked = +$('#ChkCndSignupSMS').is(':checked');


        if (ddlTitle == '0') {
            $("#ddlTitle").focus();
            ShowAlertMessage("Message", "Select Title ", "A");
            return false;
        }
        if (txtFirstName == '') {
            $("#txtFirstName").focus();
            ShowAlertMessage("Message", "Enter First Name ", "A");
            return false;
        }
        if (txtMobileNumber != '' && txtMobileNumber.length < 10) {
            $("#txtMobileNumber").focus();
            ShowAlertMessage("Message", "Enter Valid Mobile Number", "A");
            return false;
        }
        if (txtCndEmail != '' && !IsEmail(txtCndEmail)) {
            $("#txtCndEmail").focus();
            ShowAlertMessage("Message", "Enter Valid Email", "A");
            return false;
        }
        if (ddlCat == '') {
            $("#ddlcat").focus();
            ShowAlertMessage("Message", "Select Category ", "A");
            return false;
        }
        if (ddlRole == 0) {
            $("#ddlRole").focus();
            ShowAlertMessage("Message", "Select Role ", "A");
            return false;
        }
        //if (txtPostcode == '') {
        //    $("#txtPostCode").focus();
        //    ShowAlertMessage("Message", "Enter Post Code ", "A");
        //    return false;
        //}
        obj.cnd_id = 0;
        obj.cnd_role_id = $("#ddlRole").val();
        obj.emp_title = ddlTitle;
        obj.cnd_first_name = txtFirstName;
        obj.cnd_last_name = txtLastName;
        obj.cnd_gender = Gender;
        obj.cnd_mobile = txtMobileNumber;
        obj.cnd_email = txtCndEmail;
        obj.IsEmailChecked = IsEmailChecked;
        obj.IsSmsChecked = IsSmsChecked;
        obj.cnd_postcode = txtPostcode;
        obj.cnd_address1 = txtCndAddress1;
        obj.cnd_city = txtCity;
        obj.cnd_county = txtCounty;
       
        ns_ajax.post(
            'Candidate/InsertCandidate',
            obj,
            function (response) {
                if (response == 'OK') {
                    ShowAlertMessage("Message", 'Candidate <b>' + obj.cnd_first_name + '</b> has been registered successfully.', "C");
                    $('#register-new-candidate-modal').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    ns_candidate.Reset();
                    ns_Paging._createPager('#PgData', (ns_gris_setting.get_grid_field(ns_Paging.options.currentIndex, ns_Paging.options.rPP)));
                    ns_employee.get('Profiles');
                    ns_candidate.GetCandidateList();
                   
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ChangeStatus: function (cnd_id, status, action, type) {
        var param = '{cnd_id:"' + cnd_id + '",status:"' + status + '",type:"' + action + '"}';
        ns_ajax.post(
            'Candidate/ChangeCandidateStatus',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Status has been changed successfully.", "C");
                    if (type == 'M') {
                        if (status == 1)
                            $('#CandidateChangeStatus-' + cnd_id).html('<i class="zmdi zmdi-check-all">&nbsp;</i>Active').removeClass('btn btn-warning btn sm').addClass('btn btn-success btn sm');
                        else
                            $('#CandidateChangeStatus-' + cnd_id).html('<i class="zmdi zmdi-money-off">&nbsp;</i>Inactive').removeClass('btn btn-success btn sm').addClass('btn btn-warning btn sm');
                    }
                    else
                        ns_candidate.GetCandidate(cnd_id);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    GetCandidateList: function () {
        var Param = { status: IsActive };
        ns_ajax.get(
            'Candidate/GetCandidate',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var strVal = '', i = 0, AllCount = 0;
                    var TotalCountObj = jQuery.parseJSON(response.split('|')[2]);
                    $('.cls-ACTIVE').html('0');
                    $('.cls-INACTIVE').html('0');
                    $.each(TotalCountObj, function (key, value) {
                        $('.cls-DELETED').html(value.deletecount);
                        if (value.cnd_account_status == 1 ? $('.cls-ACTIVE').html(value.totalcount) : $('.cls-INACTIVE').html(value.totalcount));
                        AllCount += parseInt(value.totalcount);
                    });
                    $('.cls-All').html(AllCount);
                    $.each(obj, function (key, value) {
                        var StrStatus = value.cnd_account_status == 1 ? '<a id="CandidateChangeStatus-' + value.cnd_id + '"  class="w65 btn btn-success btn sm CandidateChangeStatus"  title="Click to change status"><i class="zmdi zmdi-check-all">&nbsp;</i>Active</a>' : '<a id="CandidateChangeStatus-' + value.cnd_id + '"  class="w65 btn btn-warning btn sm CandidateChangeStatus"  title="Click to change status"><i class="zmdi zmdi-money-off">&nbsp;</i>Inactive</a>';
                        var MobileNumber = '<a class="PShow col-grey"><i class="zmdi zmdi-phone-in-talk">&nbsp;</i>' + value.cnd_mobile + '</a> <span class="col-grey Ptarget"><i class="zmdi zmdi-phone-in-talk"></i><b>' + value.cnd_mobile + '</b></span><br><span class="col-green"><i class="zmdi zmdi-check-all"></i>Verified</span>';
                        var Email = '<a href="#" class="EShow "><i class="zmdi zmdi-email-open">&nbsp;</i>' + value.cnd_email + '<span class="text-blue Etarget"><i class="zmdi zmdi-email-open"></i>' + value.cnd_email + '</span><br><span class="col-red"><i class="zmdi zmdi-alert-triangle"></i>Not Verified</span></a>';
                        var Action = '<span class="table-row-btn"><a class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#viewprofile"><i class="zmdi zmdi-eye"></i>view</a><a class="btn btn-outline-primary btn-sm" title="History" data-toggle="modal" data-target="#history">H</a><a class="ion btn btn-outline-danger btn-sm"><div class="lid"></div><div class="lidcap"></div><div class="bin"></div></a></span>';
                        strVal += '<tr>' +
                            '<td class="checkbox">' + '<input id="ChkCandidate-' + value.cnd_id + '" type="checkbox"><label for="ChkCandidate-' + value.cnd_id + '">&nbsp;</label>' + '</td>' +
                            '<td>' + value.ROWNUMBER + '</td>' +
                            '<td>' + value.cnd_first_name + ' ' + value.cnd_last_name + '<br>' + StrStatus + '</td>' +
                            '<td>' + 'CND' + '</td>' +
                            '<td>' + 'Self' + '</td>' +
                            '<td>' + Email + '</td>' +
                            '<td>' + MobileNumber + '</td>' +
                            '<td class="col-blue-grey">' + '<i class="zmdi zmdi-pin">&nbsp;</i>' + value.cnd_city + '</td>' +
                            '<td class="col-blue-grey">' + '<i class="zmdi zmdi-calendar">&nbsp;</i>' + value.create_date2 + Action + '</td>' +
                            '</tr>';
                    });
                    $('.tblManageCandidate').html(strVal);
                }
                else
                    $('.tblManageCandidate').html("");
            });
    },
    Bind_Parent: function () {
        $('#ddlcat').html('');
        ns_ajax.get(
            'Candidate/BindParentRoles',
            '',
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    StrVal = '<option value="">Select Category</option>';
                    $('#ddlRole').html('<option value="0">Select Role</option>');
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.role_id + '>' + value.role_name + '</option>'
                    })
                    $('#ddlcat').html(StrVal);
                }
            });
    },
    Bind_Role: function () {
        var role_id = $('#ddlcat').val();
        if (role_id == 0) {
            $('#ddlRole').html('<option value="0">Select Role</option>');
            return false;
        }
        $('#ddlRole').html('');
        var Param = { role_id: role_id };
        ns_ajax.get(
            'Candidate/BindRoles',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var objRole = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    StrVal = '<option value="0">Select Role</option>';
                    $.each(objRole, function (key, value) {
                        StrVal += '<option value=' + value.role_id + '>' + value.role_name + '</option>'
                    })
                    $('#ddlRole').html(StrVal);
                }
            });
    },
    VerifyRegNo: function () {
        var firstname = $("#txtFirstName");
        var lastname = $("#txtLastName");
        var gmcNumber = $("#txtGmcNumber");
        if (firstname.val() == '') {
            firstname.addClass('highlight');
            $("#txtFirstName").focus();
            ShowAlertMessage("Message", 'Enter first name', "A");
            return false;
        }
        if (lastname.val() == '') {
            lastname.addClass('highlight');
            $("#txtLastName").focus();
            ShowAlertMessage("Message", 'Enter last name', "A");
            return false;
        }
        if (gmcNumber.val() == '') {
            gmcNumber.addClass('highlight');
            $('#msgPractice').fadeIn('slow', function () {
                $('#msgPractice').css('color', '#A94442');
            });
            $("#txtGmcNumber").focus();
            var ph = $("#txtGmcNumber").attr('placeholder');
            ShowAlertMessage("Message", ph, "A");
            return false;
        }
        var api = "http://dev2.infospry.in/gmcapi/api/GMC/get?Gname=" + firstname.val() + "&SName=" + lastname.val() + "&GMC_No=" + gmcNumber.val() + "&Type=D";

        $.ajax({
            type: "GET",
            url: api,
            beforeSend: function () {
                $("#verifynumber").html("Wait...");
            },
            success: function (data) {
                var flag = false;
                var obj = jQuery.parseJSON(data);
                var status = obj.status;
                if (status == 'OK') {
                    $.each(obj.result, function (field, value) {
                        if (value.GMC_Ref_No == gmcNumber.val()) {
                            flag = true;
                            return false;
                        }
                    });
                    if (flag) {
                        gmcNumber.removeClass('highlight');
                        $('#msgPractice').fadeIn('slow', function () {
                            $('#msgPractice').html('');
                        });
                        $("#verifynumber").html("<i class='fa fa-check'></i>");
                    }
                    else {
                        gmcNumber.addClass('highlight');
                        $('#msgPractice').fadeIn('slow', function () {
                            $('#msgPractice').css('color', '#A94442');
                        });
                        ShowAlertMessage("Message", 'Sorry ! Not found.', "A");
                        $("#verifynumber").html("<i class='zmdi zmdi-search'>&nbsp;</i>Verify");
                    }
                }
                else {
                    gmcNumber.addClass('highlight');
                    $('#msgPractice').fadeIn('slow', function () {
                        $('#msgPractice').css('color', '#A94442');
                    });
                    ShowAlertMessage("Message", 'Sorry ! Not found.', "A");
                    $("#verifynumber").html("<i class='zmdi zmdi-search'>&nbsp;</i>Verify");
                }
            },
            error: function (request) {
                var obj = jQuery.parseJSON(request.responseText);
                ShowAlertMessage("Message", obj.Message + ' ! ' + $("#txtGmcNumber").attr('placeholder'), "A");
                $("#verifynumber").html("<i class='zmdi zmdi-search'>&nbsp;</i>Verify");
            }
        });
    },
    GetAddress: function () {
        var zip = $("#txtPostCode").val();
        if (zip == '') {
            ShowAlertMessage("Message", "Enter Postcode", "A");
            $("#txtPostCode").focus();
            return false;
        }
        $.ajax({

            type: "GET",
            url: urls.addressFinderApi + "?id=" + zip,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            headers: { 'UA-TOKEN': Token, 'RequestChecksum': RequestChecksum, 'Source': Source, 'Content-Type': 'application/json' },
            beforeSend: function (xhr) {
                $("#btnFindCndidatePostcode").html("Finding...");
            },
            success: function (data) {
                if (data != 'NO') {
                    $('#spannotfound2').html("");
                    $('.divselectAddres2').show();
                    //var js1 = JSON.stringify(data, null, 2);
                    var json1 = $.parseJSON(data);
                    ns_candidate.FillAddress(json1);
                    ns_candidate.FillForm(json1["Addresses"][0].split(',')[5], json1["Addresses"][0].split(',')[6]);
                    $("#btnFindCndidatePostcode").html('<i class="zmdi zmdi-search">&nbsp;</i>Find Address');
                }
                else {
                    $('#spannotfound2').html("Not found ! enter currect postcode.");
                    $("#btnFindCndidatePostcode").html('<i class="zmdi zmdi-search">&nbsp;</i>Find Address');
                }
            },
            error: function (error) {
                $('#spannotfound2').html("Not found ! enter currect postcode.");
                $("#btnFindCndidatePostcode").html('<i class="zmdi zmdi-search">&nbsp;</i>Find Address');
            }
        });
    },
    FillForm: function (town, county) {
        $("#txtCndCity").val(town);
        $("#tctCndCounty").val(county);
    },
    FillAddress: function (addr) {
        var list = $("#selectList2");
        list.empty();
        list.append(new Option("select address", ""));
        $.each(addr.Addresses, function (index, item) {
            list.append(new Option(item.split(',')[0] + " " + item.split(',')[1], item.split(',')[0] + " " + item.split(',')[1]));
        });
        list.append(new Option("Not Found ? enter address below", "other"));
    },
    Reset: function () {
        $("#ddlcat").val('');
        $("#ddlRole").val('0');
        $("#ddltitle").val('0');
        $("#txtFirstName").val('');
        $("#txtLastName").val('');
        $("#txtGmcNumber").val('');
        $("#txtCndMobileNumber").val('');
        $("#txtCndEmail").val('');
        $("input[name='Gender']:checked", false);
        $("#txtPostCode").val('');
        $("#selectList2").val('');
        $("#txtaddressline2").val('');
        $("#txtCndCity").val('');
        $("#tctCndCounty").val('');
        $('#ChkCndSignupEMAIL').is(":checked", false);
        $('#empemail').val('');
        $('#ChkCndSignupSMS').val();
    },

    //Compliance Documents
    GetCndFilesDetails: function (docId) {
        var cndId = $('#CndId').html();
        var Param = { CndId: cndId };
        ns_ajax.get(
            'Candidate/GetCndDocsDetails',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var currentdoc = "", previousdoc = "";
                    var cndDocs = "", cndDetails = ""; roleName = "", fileStatus = "";
                    var flag = false;
                    $.each(obj, function (key, value) {
                        roleName = value.role_name;
                        if (key == 0) {
                            cndDetails += '<tr>' +
                                '<td>Candidate: <b> ' + value.cnd_name + '</b></td>' +
                                '<td> A/c Status: <b class=" ' + (value.cnd_account_status == 1 ? 'col-green' : 'col-red') + '"> ' + (value.cnd_account_status == 1 ? 'Active' : 'Inactive') + '</b></td>' +
                                '<td>A/c Registration Date: <b>' + value.registration_date2 + '</b></td>' +
                                '</tr>';
                        }
                        currentdoc = value.doc_status;
                        if (previousdoc == "" || currentdoc != previousdoc) {
                            cndDocs += '<li class="list-group-item d-flex justify-content-between align-items-center">' +
                                '<div class="font-18">' +
                                '<i class="zmdi zmdi-file-text">&nbsp</i>' +
                                '<b>' + value.doc_status + '</b>' +
                                '</div>' +
                                '</li>';
                            previousdoc = value.doc_status;
                        }
                        if (value.doc_additional == 1 && (value.history_record == null || value.history_record == "")) {
                            $('#btnSubmitAddDoc').attr('data-doc-id', value.doc_id);
                            $('#btnAddMoreDoc').show();
                        }
                        else {
                            cndDocs += '<li id="UploadStatus-' + value.doc_id + '" data-fileid="' + value.file_id + '" data-docstatus="' + value.DocStatusId + '" class="list-group-item d-flex justify-content-between align-items-center UploadStatus">' +
                                '<div class="checkbox mb-0 mt-2">' +
                                '<input id="doc-' + value.doc_id + '" data-status="' + value.verify_status + '" data-docname="' + value.doc_name + '" class="ChkSendCndDoc" type="checkbox">' +
                                '<label class="elpis" for="doc-' + value.doc_id + '">' + value.doc_name + '</label>' +
                                '</div>' +
                                '<a id="VerifyStatus-' + value.doc_id + '" class="float-right text-right font-12 font-bold docVerifyStatus ' + (value.verify_status == 'UNVERIFIED' ? 'col-blue' : value.verify_status == 'APPROVED' ? 'col-green' : (value.verify_status == 'DISAPPROVED' || value.verify_status == 'EXPIRED' || value.verify_status == 'INAPPROPRIATE') ? 'col-red' : 'col-grey') + '">' + (value.verify_status) + '</a>' +
                                '</li>';

                        }

                        if (value.doc_additional == 1 && value.history_record == 1) {
                            $('#btnSubmitAddDoc').attr('data-doc-id', value.doc_id);
                            $('#btnAddMoreDoc').show();
                        }

                        if (flag == false && value.doc_additional == 1)
                            flag = true;
                    });
                    if (flag)
                        $('#btnAddMoreDoc').show();
                    else
                        $('#btnAddMoreDoc').hide();
                    $('#modalTitleRole').html(roleName + ' Compliance Documents');
                    $('#tbodycndDetails').html(cndDetails);
                    $('#CndDocuments').html(cndDocs);
                    if (docId == 0) {
                        $('.UploadStatus:first').trigger('click');
                        $('.docVerifyStatus:first').trigger('click');
                    }
                    else {
                        $('#doc-' + docId).prop('checked', true);
                        $('#UploadStatus-' + docId).css('background-color', 'yellow');
                    }

                }
            });
    },
    UploadCndDocument: function (data, docId, docName) {
        ns_ajax.upload(
            urls.uploadFileApi + "jobfile",
            data,
            function (response) {
                if (response == "OK") {
                    ShowAlertMessage("Message", docName + " uploaded successfully", 'C');
                    $('.SectionUpload').hide();
                    $('.SectionViewDoc').show();
                    ns_candidate.ResetCompliance();
                    ns_candidate.GetCndFilesDetails(docId);
                    ns_candidate.getFileHistory(docId);
                }
                else
                    ShowAlertMessage("Message", response, 'A');
            });
    },
    viewFile: function (fileId, fileName) {
        var param = { fileId: fileId, fileName: fileName };
        ns_ajax.get(
            urls.getFileApi + "jobfile",
            param,
            function (response) {
                if (response.split('##')[0] == "OK") {
                    var filePath = response.split('##')[1];
                    $('#vwHistoryFile').show().attr('src', filePath);
                }
                else {
                    $('#vwHistoryFile').show().attr('src', '');
                    ShowAlertMessage("Message", response, 'A');
                }
            });
    },
    getFileHistory: function (docId) {
        var cndId = $('#CndId').html();
        var Param = { CndId: cndId, DocId: docId };
        ns_ajax.get(
            'Candidate/getFileHistory',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var history = "";
                    $.each(obj, function (key, value) {
                        if (value.history_record == 0) {
                            var verify_status = '<span class="' + (value.verify_status == 'APPROVED' ? 'col-green' : (value.verify_status == 'DISAPPROVED' || value.verify_status == 'EXPIRED' || value.verify_status == 'INAPPROPRIATE') ? 'col-red' : 'col-blue') + '">' +
                                '<i class="' + (value.verify_status == 'APPROVED' ? 'zmdi zmdi-spellcheck' :
                                    (value.verify_status == 'DISAPPROVED' || value.verify_status == 'INAPPROPRIATE') ? 'zmdi zmdi-thumb-down' : value.verify_status == 'EXPIRED' ? 'zmdi zmdi-alert-triangle' : 'zmdi zmdi-time') + '"></i> ' + (value.verify_status) + '</span>';
                            history += '<div class="panel panel-primary" role="tab" id="acc-' + value.file_id + '">' +
                                '<div class="panel-heading" role="tab">' +
                                '<h4 class="panel-title">' +
                                '<a class="collapsed font-12" role="button" data-toggle="collapse" data-parent="#accordiondata" href="#collapse-' + value.file_id + '" aria-expanded="false" aria-controls="collapse">' +
                                verify_status +
                                '<span class="float-right">' +
                                '<i class="zmdi zmdi-calendar"></i> ' + value.upload_date + '</span>' +
                                '</a>' +
                                '</h4>' +
                                '</div>' +
                                '<div id="collapse-' + value.file_id + '" class="panel-collapse collapse" role="tabpanel" aria-labelledby="acc-' + value.file_id + '">' +
                                '<div class="panel-body  p-0">' +
                                '<table class="table table-bordered">' +
                                '<tr>' +
                                '<td>Issue Date</td>' +
                                '<td>' + value.issue_date + '</td>' +
                                '</tr>' +
                                '<tr>' +
                                '<td>Expiry Date</td>' +
                                '<td>' + value.expiry_date + '</td>' +
                                '</tr>' +
                                '<tr>' +
                                '<td>Doc Type</td>' +
                                '<td>' + (value.document_type) + '</td>' +
                                '</tr>' +
                                '<tr>' +
                                '<td>Doc Number</td>' +
                                '<td>' + (value.document_no) + '</td>' +
                                '</tr>' +
                                '<tr>' +
                                '<td>By User</td>' +
                                '<td>Admin</td>' +
                                '</tr>' +
                                '<tr>' +
                                '<td colspan="2">' +
                                '<a class="btn btn-outline-primary clsViewDocFile" data-file-id="' + value.file_id + '" data-file-name="' + value.file_path + '"  data-toggle="tooltip" title="View file">View</a>&nbsp' +
                                '<a id="delDocHistory-' + value.file_id + '" class="btn btn-danger clsDeleteDocHistory" data-toggle="tooltip" title="Delete">Delete</a>' +
                                '</td>' +
                                '</tr>' +
                                '</table>' +
                                '</div>' +
                                '</div>' +
                                '</div>';
                        }
                        else {

                            $('#txtDocType').val(value.document_type);
                            $('#txtDocNumber').val(value.document_no);
                            $('#Dociframe').show().attr('src', value.file_path);
                            $('#txtDocIssueDate').val(value.issue_date);
                            $('#txtDocExpiryDate').val(value.expiry_date);
                            var audit = "";
                            audit = '<b>Audit Status: <span class="pull-right">' + (value.audit_status == 1 ? '<b class="col-red">Audited</b>' : '<b class="col-red">Pending</b>') + ' ' + ((value.audit_date == '' || value.audit_date == null) ? '' : ' (' + value.audit_date + ')') + ' </span></b></br>' +
                                '<b>Audit By: <span class="pull-right">' + (value.doc_audit_by_user_name) + '</span></b>';
                            $('#auditDetails').html(audit);

                            value.file_verification_status == 1 ? $('#rdoApprove').prop('checked', true) :
                                value.file_verification_status == 2 ? $('#rdoDisapprove').prop('checked', true) :
                                    value.file_verification_status == 3 ? $('#rdoInappropriate').prop('checked', true) : '';
                            $('.clsVerifyStatus').trigger('change');


                            $('#ddlCommentReason').val(value.disapproved_reason);
                            $('#txtcommentReason').val(value.commentText);
                        }
                    });
                    $('#accordiondata').html(history);
                }
            });
    },
    SaveDocVerificationDetails: function (fileId, docId) {
        var issue_date = $('#txtDocIssueDate').val();
        var expiry_date = $('#txtDocExpiryDate').val();
        var doc_type = $('#txtDocType').val();
        var doc_number = $('#txtDocNumber').val();
        var verify_status = $('#rdoApprove').prop('checked') ? 1 : $('#rdoDisapprove').prop('checked') ? 2 : $('#rdoInappropriate').prop('checked') ? 3 : 0;
        var reason = $('#ddlCommentReason').val();
        var comment = $('#txtcommentReason').val();
        var msg = "", flag = 0;

        if (issue_date == "") {
            $("#txtDocIssueDate").focus();
            flag = 1;
            msg = "Enter document issue date";
        }
        else if (expiry_date == "") {
            $("#txtDocExpiryDate").focus();
            flag = 1;
            msg = "Enter document expiry date";
        }
        else if (issue_date == expiry_date) {
            $("#txtDocExpiryDate").focus();
            flag = 1;
            msg = "Both issue date and expiry date can not be same. Enter a different expiry date";
        }
        else if ((reason == "") && (verify_status != 1)) {
            $("#ddlCommentReason").focus();
            flag = 1;
            msg = "Select a reason";
        }
        else if ((comment == "") && (verify_status != 1)) {
            $("#txtcommentReason").focus();
            flag = 1;
            msg = "Enter a comment";
        }
        if (flag == 0) {
            var Param = "{FileId:'" + fileId + "',IssueDate:'" + issue_date + "',ExpiryDate:'" + expiry_date + "',docType:'" + doc_type + "',docNumber:'" + doc_number + "',VerifyStatus:'" + verify_status + "',Reason:'" + reason + "',CommentText:'" + comment + "'}";
            ns_ajax.post(
                'Candidate/SaveDocVerificationDetails',
                Param,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        ShowAlertMessage("Message", 'Verification details has been saved successfully.', "C");
                        ns_candidate.GetCndFilesDetails(docId);
                        ns_candidate.getFileHistory(docId);
                    }
                    else
                        ShowAlertMessage("Message", response, "A");
                });
        }
        else
            ShowAlertMessage("Message", msg, "A");
    },
    ResetCompliance: function () {
        $('#txtDocType').val('');
        $('#txtDocNumber').val('');
        $('#txtDocIssueDate').val('');
        $('#txtDocExpiryDate').val('');
        $('#ddlCommentReason').val('');
        $('#txtcommentReason').val('');
        $('#auditStatus').html('');
        $('#UploadedFile').val('');
        $('#SbmtCndUploadedFile').attr('id', 'btnUploadFile').html('Upload');
        $('.UploadStatus').css('background-color', '');
        $('#img-upload').attr('src', "");
    },
    DeleteCndDocHistory: function (fileId) {
        var Param = "{FileId: '" + fileId + "'}";
        try {
            ns_ajax.post(
                'Candidate/DeleteCndDocHistory',
                Param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "Document history deleted successfully.", 'C');
                        $("#acc-" + fileId).hide();
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    SendDocs: function () {
        var row = "";
        $('.ChkSendCndDoc:checked').each(function () {
            var docId = this.id.split('-')[1];
            var docName = $(this).attr('data-docname');
            var verifyStatus = $(this).attr('data-status');

            var verify_status = '<span class="' + (verifyStatus == 'APPROVED' ? 'col-green' : (verifyStatus == 'DISAPPROVED' || verifyStatus == 'EXPIRED' || verifyStatus == 'INAPPROPRIATE') ? 'col-red' : 'col-blue') + '">' +
                '<i class="' + (verifyStatus == 'APPROVED' ? 'zmdi zmdi-spellcheck' :
                    (verifyStatus == 'DISAPPROVED' || verifyStatus == 'INAPPROPRIATE') ? 'zmdi zmdi-thumb-down' : verifyStatus == 'EXPIRED' ? 'zmdi zmdi-alert-triangle' : 'zmdi zmdi-time') + '"></i> ' + (verifyStatus) + '</span>';
            row += '<tr>' +
                '<td>' +
                '<span>' +
                '<b> ' + docName + '</b>' +
                '</span>' +
                '</td>' +
                '<td><b>' + verify_status + '</b></td>' +
                '</tr>';
        });
        $('#tbodySendDocs').html(row);
    },
    GetCndUploadedDocs: function () {
        var cndId = $('#hdfCndId').val();
        var Param = { CndId: cndId };
        ns_ajax.get(
            'Candidate/GetAllCndUploadedFile',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var cndDocs = "", currentdoc = "", previousdoc = "";
                    $.each(obj, function (key, value) {
                        currentdoc = value.doc_status;
                        var verify_status = '<span class="' + (value.verify_status == 'APPROVED' ? 'col-green' : (value.verify_status == 'DISAPPROVED' || value.verify_status == 'EXPIRED' || value.verify_status == 'INAPPROPRIATE') ? 'col-red' : 'col-blue') + '"><i class="' + (value.verify_status == 'APPROVED' ? 'zmdi zmdi-spellcheck' : (value.verify_status == 'DISAPPROVED' || value.verify_status == 'INAPPROPRIATE') ? 'zmdi zmdi-thumb-down' : value.verify_status == 'EXPIRED' ? 'zmdi zmdi-alert-triangle' : 'zmdi zmdi-time') + '"></i> ' + value.verify_status + '</span>';
                        if (previousdoc == "" || currentdoc != previousdoc) {
                            cndDocs += '<tr class="bg-blu-lite">' +
                                '<td colspan="7">' +
                                '<b class="col-blue">' + value.doc_status + '</b>' +
                                '</td>' +
                                '</tr>';
                            previousdoc = value.doc_status;
                        }
                        cndDocs += '<tr>' +
                            '<td><span><b><i class="zmdi zmdi-check-all"></i> ' + value.doc_name + '</b></span></td>' +
                            '<td><i class="' + (value.issue_date == "" ? '' : 'zmdi zmdi-time') + '"></i> ' + (value.issue_date == "" ? 'NA' : value.issue_date) + '</td>' +
                            '<td><i class="' + (value.expiry_date == "" ? '' : 'zmdi zmdi-time') + '"></i> ' + (value.expiry_date == "" ? 'NA' : value.expiry_date) + '</td>' +
                            '<td><i class="zmdi zmdi-time"></i> ' + value.upload_date + '</td><td>' +
                            '<span>' +
                            '<a class="' + (value.audit_status == 1 ? 'col-green' : 'col-red') + '">' +
                            '' + (value.audit_status == 1 ? 'Audited' : 'Pending') + '</a>' +
                            '</span>' +
                            '</td>' +
                            '<td>' + verify_status + '</td><td>' +
                            '<a class="btn btn-outline-primary btn-sm clsViewUploadedFile" data-audit-status="' + value.audit_status + '" data-file-id="' + value.file_id + '" data-file-name="' + value.file_path + '" data-file-title="' + value.doc_name + '" data-toggle="tooltip" title="View file">' +
                            '<i class="zmdi zmdi-eye"></i>View' +
                            '</a>';
                        '</td>' +
                            '</tr>';
                    });
                    $('#tbodyCndUploadedDocs').html(cndDocs);
                }
            });
    },
    DeleteCndFile: function (docId, fileId) {
        var doc_expiry_date = $('#txtDocExpiryDate').val();
        var Param = "{FileId: '" + fileId + "', DocExpiryDate:'" + doc_expiry_date + "'}";
        try {
            ns_ajax.post(
                'Candidate/DeleteCndFile',
                Param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "Uploaded file deleted successfully.", 'C');
                        ns_candidate.GetCndFilesDetails(docId);
                        ns_candidate.getFileHistory(docId);
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    SaveDocAuditStatus: function (fileId) {
        var Param = "{FileId: '" + fileId + "'}";
        try {
            ns_ajax.post(
                'Candidate/SaveDocAuditStatus',
                Param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "Document audit status submitted successfully.", 'C');
                        ns_candidate.GetCndUploadedDocs();
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },

    //Profile  


    GetCandidate: function (CndId) {
        $('.ClsCndWizard').html('');
        var Param = { ProfileId: CndId, ProfileType: 'cnd', SettingType: 1 };
        ns_ajax.get(
            'Candidate/GetProfileWizard',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {

                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var objMulti = jQuery.parseJSON(response.split('|')[2]);
                    var StrVal = '', currentparent = '', previousparent = '';

                    $.each(obj.Table1, function (key, value) {
                        var MobileStatus = value.cnd_mobile_verification_status == 1 ? '<span class="col-green">Verified</span>' : '<a class="btnCndStatus btn btn-outline-primary" data-action="Mobile" data-status="' + value.cnd_mobile_verification_status + '" title="Verify Mobile" style="margin-left: 2px;padding: 4px;">Verify Mobile</a>';
                        var EmailStatus = value.cnd_email_verification_status == 1 ? '<span class="col-green">Verified</span>' : '<a class="btnCndStatus btn btn-outline-primary" data-action="Email" data-status="' + value.cnd_email_verification_status + '" title="Verify Email" style="margin-left: 2px;padding: 4px;">Verify Email</a>';
                        var AccountStatus = '<a class="btnCndStatus  ' + (value.cnd_account_status == 1 ? 'col-green' : 'col-red') + '" data-action="Account" data-status="' + value.cnd_account_status + '" title="Click to change status">' + (value.cnd_account_status == 1 ? 'Active' : 'Inactive') + '</a>';

                        $('#spnCndAcountStatus').html(AccountStatus);

                        $('#spnCndMobile').html((value.cnd_mobile == null || value.cnd_mobile == '') ? 'NA' : value.cnd_mobile + '&nbsp;' + MobileStatus);
                        $('#spnCndEmail').html((value.cnd_email == null || value.cnd_email == '') ? 'NA' : value.cnd_email + '&nbsp;' + EmailStatus);


                        $('#spnCndRoleName').html(value.cnd_role_name);
                        $('#hCndName').html(value.cnd_first_name + ' ' + value.cnd_last_name);
                        $('#spnCndGmcNumber').html((value.cnd_gmc_or_regnumber == null || value.cnd_gmc_or_regnumber == '') ? 'NA' : value.cnd_gmc_or_regnumber);
                        $('#spnCndSmartCard').html((value.cnd_smart_card == null || value.cnd_smart_card == '') ? 'NA' : value.cnd_smart_card);

                    });

                    if (objMulti !== '0') {
                        $.each(objMulti.Earning, function (key, value) {
                            $('#spnCndHourlyRate').html('£' + parseFloat(value.hourly_rate).toFixed(2));
                            $('#spnCndTotalEarned').html('£' + parseFloat(value.total_earned).toFixed(2));
                            $('#spnCndJobs').html(value.total_jobs);
                            $('#spnCndWorkedHours').html((value.hours_worked == null || value.hours_worked == '') ? '0' : value.hours_worked);
                        });
                    }
                    else {

                        $('#spnCndHourlyRate').html('£0.0');
                        $('#spnCndTotalEarned').html('£0.0');
                        $('#spnCndJobs').html('0');
                        $('#spnCndWorkedHours').html('0');
                    }

                    $.each(obj.WizardField, function (key, value) {
                        currentparent = value.w_id;
                        value.w_keyword == "WZLOCUMCONTACTADDRESS" ? $('.ulCndLocation').attr('data-wid', value.w_id) : '0';
                        if (value.w_keyword != "WZLOCUMCONTACTADDRESS") {
                            var Icon = (value.w_keyword == 'WZSOCIALPROFILES' || value.w_keyword == 'WZWORKHISTORY' || value.w_keyword == 'WZPROFESSIONALQUALIFICATION') ? '<i class="zmdi zmdi-plus-circle-o-duplicate"></i> Add' : '<i class="zmdi zmdi-edit"></i> Edit';
                            var ClsAttr = 'class="btn btn-sm btn-primary hover btnCndEditWizard"  data-btntype="edit"';
                            var ClsAdd = 'class="btn btn-sm btn-primary hover btnCndEditWizard"  data-btntype="add"';
                            var btn = (value.w_keyword == 'WZSOCIALPROFILES' || value.w_keyword == 'WZWORKHISTORY' || value.w_keyword == 'WZPROFESSIONALQUALIFICATION') ? '<a id="btnCndEditWizard-' + value.w_id + '" ' + ClsAdd + '>' + Icon + '</a>' : '<a id="btnCndEditWizard-' + value.w_id + '" ' + ClsAttr + '>' + Icon + '</a>';
                            if (previousparent == "" || currentparent != previousparent) {
                                StrVal += '</div></div>';
                                previousparent = value.w_id;
                                value.w_keyword == 'WZPERSONALSTATEMENT' ? StrVal += '<div class="bxsaddow  mt-4 col-md-12">' : StrVal += '<div class="bxsaddow  mt-4 col-md-6">';
                                StrVal += '<h4>' + '<span id=spnWId-' + value.w_id + '>' + value.w_name + '</span>' + btn + '</h4>';
                                StrVal += '<div id="CndWizardField-' + value.w_id + '" class="p-2 bdr1 h4show">';
                                //-----Social Profile
                                if (objMulti.length != 0) {
                                    if (value.w_keyword == 'WZSOCIALPROFILES') {
                                        StrVal += '<div class="class="table-responsive">'
                                        StrVal += '<Table class="table table-bordered mb-0">';
                                        StrVal += '<thead><tr><th>Profile Type</th><th>Profile Link</th><th>Action</th></tr></thead>';
                                        StrVal += '<tbody class="tbodyCndSocialProfile">';
                                        $.each(objMulti.SocialProfile, function (key, val) {
                                            StrVal += '<tr class="trMdelete-' + val.id + '">' +
                                                '<td><span>' + val.social_profile_type + '</span></td>' +
                                                '<td><span>' + val.social_profile_link + '</span></td>' +
                                                '<td>' + '<a id="btnCndWorkHistoryProfileEdit-' + val.id + '" class="btn btn-outline-primary btn-sm btnCndProfileEdit" data-wid="' + value.w_id + '" data-btntype="edit"><i class="zmdi zmdi-edit">&nbsp;</i></a>' +
                                                '&nbsp;<a id="btnCndWorkHistoryProfileDelete-' + val.id + '" class="btn btn-danger btn-sm btnCndProfileDelete" data-wid="' + value.w_id + '"  title="Delete"><i class="zmdi zmdi-delete">&nbsp;</i></a>' + '</td>' +
                                                '</tr>';
                                        });
                                        StrVal += '</tbody></Table>';
                                        StrVal += '</div>';
                                    }
                                    //-----Work History
                                    else if (value.w_keyword == 'WZWORKHISTORY') {
                                        StrVal += '<div class="class="table-responsive">'
                                        StrVal += '<Table class="table table-bordered mb-0">';
                                        StrVal += '<thead><tr><th>Hospitality/Employer</th><th>Role</th><th>From Date</th><th>To Date</th><th>Action</th></tr></thead>';
                                        StrVal += '<tbody class="tbodyCndWorkHistory">';
                                        $.each(objMulti.WorkHistory, function (key, val) {
                                            StrVal += '<tr class="trMdelete-' + val.id + '">' +
                                                '<td><span>' + val.cnd_employer_name + '</span></td>' +
                                                '<td><span class="col-green">' + (val.cnd_role_speciality == 0 ? '' : val.role_name) + '</span></td>' +
                                                '<td><span>' + val.from_date + '</span></td>' +
                                                '<td><span>' + val.to_date + '</span></td>' +
                                                '<td>' + '<a id="btnCndWorkHistoryProfileEdit-' + val.id + '" class="btn btn-outline-primary btn-sm btnCndProfileEdit" data-wid="' + value.w_id + '" data-btntype="edit"><i class="zmdi zmdi-edit">&nbsp;</i></a>' +
                                                '&nbsp;<a id="btnCndWorkHistoryProfileDelete-' + val.id + '" class="btn btn-danger btn-sm btnCndProfileDelete" data-wid="' + value.w_id + '"  title="Delete"><i class="zmdi zmdi-delete">&nbsp;</i></a>' + '</td>' +
                                                '</tr>';
                                        });
                                        StrVal += '</tbody></Table>';
                                        StrVal += '</div>';
                                    }
                                    //-----Qualification
                                    else if (value.w_keyword == 'WZPROFESSIONALQUALIFICATION') {
                                        StrVal += '<div class="class="table-responsive">'
                                        StrVal += '<Table class="table table-bordered mb-0">';
                                        StrVal += '<thead><tr><th>Institution</th><th>Qualification</th><th>Received Date</th><th>Action</th></tr></thead>';
                                        StrVal += '<tbody class="tbodyCndProfessionalQualification">';
                                        $.each(objMulti.Qualification, function (key, val) {
                                            StrVal += '<tr class="trMdelete-' + val.id + '">' +
                                                '<td>' + val.institution + '</td>' +
                                                '<td>' + val.qualification + '</td>' +
                                                '<td>' + val.received_date + '</td>' +
                                                '<td>' + '<a id="btnCndQualProfileEdit-' + val.id + '" class="btn btn-outline-primary btn-sm btnCndProfileEdit" data-wid="' + value.w_id + '"><i class="zmdi zmdi-edit">&nbsp;</i></a>' +
                                                '&nbsp;<a id="btnCndQualProfileDelete-' + val.id + '" class="btn btn-danger btn-sm btnCndProfileDelete"  data-wid="' + value.w_id + '" title="Delete"><i class="zmdi zmdi-delete">&nbsp;</i></a>' + '</td>' +
                                                '</tr>';
                                        });
                                        StrVal += '</tbody></Table>';
                                        StrVal += '</div>';
                                    }
                                }
                            }
                            if (value.ws_field_id != value.w_id) {
                                if (value.w_keyword == 'WZPERSONALSTATEMENT')
                                    value.ws_field_name == 'cnd_id' ? '' : StrVal += '<p class="mb-1"><span id="spnFieldId-' + value.ws_field_id + '">' + ((value.field_Value == null || value.field_Value == '') ? 'NA' : value.field_Value) + '</span></p>';
                                else if (value.w_keyword == 'WZSOCIALPROFILES')
                                    value.ws_field_name == 'cnd_id' ? '' : StrVal += '';
                                else if (value.w_keyword == 'WZWORKHISTORY')
                                    value.ws_field_name == 'cnd_id' ? '' : StrVal += '';
                                else if (value.w_keyword == 'WZPROFESSIONALQUALIFICATION')
                                    value.ws_field_name == 'cnd_id' ? '' : StrVal += '';
                                else {
                                    var Fieldval = ((value.ws_field_name == 'dateofbirth' || value.ws_field_name == 'cnd_dob') ? (value.field_Value == null ? 'NA' : value.field_Value.split(' ')[0]) : ((value.field_Value == null || value.field_Value == '') ? 'NA' : value.field_Value));
                                    value.ws_field_name == 'cnd_id' ? '' : StrVal += '<p class="mb-1"><span class="wd-16px">' + value.ws_field_label + '</span><span>:</span><span id="spnFieldId-' + value.ws_field_id + '">&nbsp;' + Fieldval + '</span></p>';
                                }
                            }
                        }
                    });
                    $('.ClsCndWizard').html(StrVal);
                }
            });
    },

    GetColumns: function (wid, cnd_id) {
        $('.clsCndFieldControl').html('');
        var Param = { WizardId: wid, ProfileId: cnd_id, ProfileType: 'cnd', SettingType: 1 };
        ns_ajax.get(
            'Candidate/GetProfileWizard',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    ns_candidate.GenerateControls(obj.WizardField, wid);
                }
            });
    },

    GenerateControls: function (obj, wid) {
        var StrVal = '', Control = '';
        $.each(obj, function (key, value) {
            var Placeholder = ((value.ws_place_holder == null || value.ws_place_holder == '') ? 'Enter ' + value.ws_field_label : value.ws_place_holder);
            var IsRequried = value.ws_isRequired == 0 ? '' : '<span>*</span>';
            var ControlActivity = value.ws_control_activity == null ? '' : value.ws_control_activity;
            var FieldValue = $('#btnCndEditWizard-' + wid).attr('data-btntype') == 'edit' ? FieldValue = 'value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '"' : FieldValue = 'value=""';
            var Attribute = 'data-fieldname="' + value.ws_field_name + '" data-fieldlabel="' + value.ws_field_label + '" data-required="' + value.ws_isRequired + '" data-wid="' + wid + '" placeholder="' + Placeholder + '"';
            if (value.ws_field_type == 'text') {
                if (ControlActivity.split('#')[0] == 'datepicker') {
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl datepicker" ' + Attribute + '   value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value.split(' ')[0]) + '">';
                }
                else if (value.ws_field_name == 'cnd_mobile')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl ChkMobile" maxlength="10" ' + Attribute + '   value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '">';
                else if (value.ws_field_name == 'extrampavcs')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl ChkDecimal" maxlength="5" ' + Attribute + '   value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '">';
                else if (value.ws_field_name == 'pension_tiered_rate')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl ChkMobile" maxlength="6" ' + Attribute + '   value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '">';
                else
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl" ' + Attribute + ' ' + FieldValue + '>';
            }
            else if (value.ws_field_type == 'multitext')
                Control = '<textarea id=txt-' + value.ws_field_id + ' class="form-control clsCndControl" ' + Attribute + '  style="height: 200px;">' + value.field_Value + '</textarea>';
            else if (value.ws_field_type == 'select') {
                if (ControlActivity.split('#')[1] == 'title') {
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsCndControl" ' + Attribute + '><option value="">Select a title...</option><option value="Dr">Dr</option><option value="Mr">Mr</option><option value="Mrs">Mrs</option><option value="Miss">Miss</option></select>';
                    // $('#ddl-' + value.ws_field_id).val(value.field_Value);                       
                }
                else {
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsCndControl" ' + Attribute + '><option value="' + FieldValue + '">Select</option></select>';
                    ns_candidate.BindControls(ControlActivity, value.ws_field_label, value.ws_field_id, value.ws_field_type);
                }
            }
            else
                Control = '<label id=lbl-' + value.ws_field_id + '>' + value.ws_field_label + '</label>';
            if (ControlActivity.split('#')[0] == 'datepicker')
                StrVal += '<div class="form-group mt-2 masked-input unset"><label>' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
            else
                value.ws_field_name == 'cnd_id' ? '' : StrVal += '<div class="form-group mt-2"><label id="' + value.ws_field_name + '">' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
        });

        $('#spnWizardHeading').html($('#spnWId-' + wid).html());
        $('.clsCndFieldControl').html(StrVal);
    },

    ForMultiValuesColumns: function (id, wid, cnd_id) {
        $('.clsCndFieldControl').html('');
        var Param = { id: id, WizardId: wid, ProfileId: cnd_id, ProfileType: 'cnd', SettingType: 1 };
        ns_ajax.get(
            'Candidate/GetFields',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    ns_candidate.MultiValuesControl(obj.WizardField, wid);
                }
            });
    },

    MultiValuesControl: function (obj, wid) {
        var StrVal = '', Control = '';
        $.each(obj, function (key, value) {
            var Placeholder = ((value.ws_place_holder == null || value.ws_place_holder == '') ? 'Enter ' + value.ws_field_label : value.ws_place_holder);
            var IsRequried = value.ws_isRequired == 0 ? '' : '<span>*</span>';
            var ControlActivity = value.ws_control_activity == null ? '' : value.ws_control_activity;
            var FieldValue = $('.btnCndProfileEdit').attr('data-btntype') == 'edit' ? FieldValue = 'value="' + ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) + '"' : FieldValue = 'value=""';
            var Attribute = 'data-fieldname="' + value.ws_field_name + '" data-fieldlabel="' + value.ws_field_label + '" data-required="' + value.ws_isRequired + '" data-wid="' + wid + '" placeholder="' + Placeholder + '"';
            if (value.ws_field_type == 'text') {
                if (ControlActivity.split('#')[0] == 'datepicker') {
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl datepicker" ' + Attribute + '   value="' + ($('.btnCndProfileEdit').attr('data-btntype') == 'edit' ? ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value.split(' ')[0]) : '') + '">';
                }
                else
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndControl" ' + Attribute + ' ' + FieldValue + '>';
            }
            else if (value.ws_field_type == 'select') {
                if (ControlActivity.split('#')[0] == 'SOCIAL') {
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsCndControl" ' + Attribute + '><option value="">Select profile type...</option><option value="Facebook">Facebook</option><option value="Twiter">Twiter</option><option value="Whatsapp">Whatsapp</option><option value="Linkdin">Linkdin</option></select>';
                }
                else {
                    Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsCndControl" ' + Attribute + '><option value="' + FieldValue + '">Select</option></select>';
                    ns_candidate.BindControls(ControlActivity, value.ws_field_label, value.ws_field_id, value.ws_field_type, value.field_Value);
                }
            }
            else
                Control = '<label id=lbl-' + value.ws_field_id + '>' + value.ws_field_label + '</label>';
            if (ControlActivity.split('#')[0] == 'datepicker')
                StrVal += '<div class="form-group mt-2 masked-input unset"><label>' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
            else
                value.ws_field_name == 'cnd_id' ? '' : StrVal += '<div class="form-group mt-2"><label id="' + value.ws_field_name + '">' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
        });
        $('#spnWizardHeading').html($('#spnWId-' + wid).html());
        $('.clsCndFieldControl').html(StrVal);
    },

    BindControls: function (ControlActivity, FieldLabel, ControlId, ControlType, FieldValue) {
        var StrVal = '';
        var ActionType = ControlActivity.split('#')[0];
        var RequestFor = ControlActivity.split('#')[1];
        if (ControlType == 'select') {
            if (ActionType == 'filldropdown') {
                if (RequestFor == 'parent') {
                    ns_ajax.get(
                        'Candidate/BindParentRoles',
                        '',
                        function (response) {
                            if (response.split('|')[0] == 'OK') {
                                var obj = jQuery.parseJSON(response.split('|')[1]);
                                StrVal = '<option value="0">Select  a ' + FieldLabel + '</option>';
                                $.each(obj, function (key, value) {
                                    StrVal += '<option value=' + value.role_id + '>' + value.role_name + '</option>';
                                })
                                $('#ddl-' + ControlId).html(StrVal);
                                if ($('.btnCndProfileEdit').attr('data-btntype') == 'edit')
                                    $('#ddl-' + ControlId).val(FieldValue);
                            }
                        });
                }
            }
        }
    },

    AddEditCandidateDetail: function (cndId) {
        var obj = [], Result = 1;
        $('.clsCndControl').each(function (index) {
            //remove apostrophy
            var val = $(this).val().replace(/'/g, '"');
            if ($(this).attr('data-required') == 1) {
                if ($(this).val() == '') {
                    ShowAlertMessage("Message", "Enter " + $(this).attr('data-fieldlabel') + "", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            if ($(this).attr('data-fieldname') == 'cnd_mobile') {
                if (val.length < 10) {
                    ShowAlertMessage("Message", "Enter correct mobile no..", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            if ($(this).attr('data-fieldname') == 'cnd_email') {
                if (val !== '' && IsEmail(val) == false) {
                    ShowAlertMessage("Message", "Enter correct email.", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            obj.push({
                id: $('#btnCndUpdateWizardField').attr('data-id'),
                cnd_id: cndId,
                w_id: $(this).attr('data-wid'),
                fieldname: $(this).attr('data-fieldname'),
                fieldvalue: val,
                action: $('#btnCndUpdateWizardField').attr('data-action')
            });
        });

        if (Result == 0) { return false; }
        ns_ajax.post(
            'Candidate/InsertCndProfile',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Fields has been update successfully.", "C");
                    $("#ModalEditDetails").modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    ns_candidate.GetCandidate(cndId);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    DeleteEmpProfile: function (profileid, id, wid) {
        var Param = '{profileid:"' + profileid + '",id:"' + id + '",wid:"' + wid + '" }';
        ns_ajax.post(
            'Candidate/DeleteEmpProfile',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "deleted successfully.", "C");
                    $('.trMdelete-' + id).remove();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    //Locations  
    AddEditLocation: function (Location_id, Action, Status) {
        var obj = [], Result = 1;
        if ($('.spannotfound2').html() != '') {
            ShowAlertMessage("Message", "Address not found ! enter correct postcode.", "A");
            Result = 0;
            return false;
        }
        if ($('#ddlCndLocation').val() == '') {
            ShowAlertMessage("Message", "Find address.", "A");
            $('#ddlCndLocation').focus()
            Result = 0;
            return false;
        }
        $('.clsCndLocation').each(function (index) {
            if ($(this).attr('data-required') == 1) {
                if ($(this).val() == '') {
                    ShowAlertMessage("Message", "Enter " + $(this).attr('data-fieldlabel') + "", "A");
                    $(this).focus();
                    Result = 0;
                    return false;
                }
            }
            obj.push({
                location_id: Location_id,
                cnd_id: CndId,
                w_id: $(this).attr('data-wid'),
                fieldname: $(this).attr('data-fieldname'),
                fieldvalue: $(this).val(),
                action: Action
            });
        });
        if (Result == 0) { return false; }
        ns_ajax.post(
            'Candidate/InsertUpdate',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    Action == 'INSERT' ? ShowAlertMessage("Message", "Contact address save successfully.", "C") : ShowAlertMessage("Message", "Contact address updated successfully.", "C");
                    ns_candidate.GetLocation(Status);
                    $('#ModalLocation').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    GetLocation: function (CndId, status) {
        var Param = { cnd_id: CndId, status: status };
        ns_ajax.get(
            'Candidate/GetLocations',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var objCountVal = jQuery.parseJSON(response.split('|')[2]);
                    //Show delete count
                    $.each(objCountVal, function (key, value) {
                        value.delete_status == 0 ? $('#spnLocationActive').html(value.total_count) : $('#spnLocationInactive').html(value.total_count);
                    });
                    var Str = '', btnClassAttr = '', Modal = '';
                    var EditClass = status == 0 ? 'btnCndEditLocation' : 'btnCndLocationRevert';
                    var Modal = status == 0 ? 'data-toggle="modal" data-target="#ModalLocation"' : '';
                    var ChangeEdithtml = status == 0 ? '<i class="zmdi zmdi-edit">&nbsp;</i>edit' : '<i class="zmdi zmdi-rotate-ccw">&nbsp;</i>Revert';
                    Str += '<a id="btnCndLocationAddMore" data-toggle="modal" data-target="#ModalLocation" data-action="edit">' +
                        '<div class="bxsaddow w-lft-qutr mt-3 bg-add" style="height:340px;"><b>&#43; </b>Add More</div> </a>';
                    $.each(obj, function (key, value) {
                        //Str += '</div></div>';
                        var btnStatus = '<a id="btnCndLocationStatus-' + value.location_id + '"  class="btn btn-sm ' + (value.cnd_status == 1 ? 'btn-success' : 'btn-warning') + ' btn sm btnCndLocationStatus"  title="Click to change status">' + (value.cnd_status == 1 ? '<i class="zmdi zmdi-check-all">&nbsp;</i>Active' : '<i class="zmdi zmdi-money-off">&nbsp;</i>Inactive') + '</a>';
                        var btnSetDefault = '<a id="btnCndDefaultStatus-' + value.location_id + '" data-status="1" class="btn btn-outline-primary btn-sm btnCndDefaultStatus">Set As Default</a>';
                        var btnDefault = value.cnd_default == 1 ? '<span id="spnEmpDefault-' + value.location_id + '" data-default="' + value.cnd_default + '" class="col-green" style="float:right;"><i class="zmdi zmdi-check">&nbsp;</i>Default</span>' : '<span id="spnEmpDefault-' + value.location_id + '" data-default="' + value.cnd_default + '"></span>';
                        var btnDelete = '<a id="btnCndLocationDelete-' + value.location_id + '" class="btn btn-danger btn-sm btnCndLocationDelete"><i class="zmdi zmdi-delete">&nbsp;</i>delete</a>';
                        var btnEdit = '<a id="btnCndEditLocation-' + value.location_id + '" class="btn btn-outline-primary btn-sm ' + EditClass + '"  ' + Modal + '>' + ChangeEdithtml + '</a> ';

                        Str += '<div id="divlocation-' + value.location_id + '" class="bxsaddow w-lft-qutr mt-3">' +
                            '<h4><span>Contact Address</span>' + btnDefault + '</h4>' +
                            '<div class="p-2 bdr1 h4show">' +
                            '<div style="height:240px;overflow:auto;">' +
                            '<div><label>Address</label><span class="m-l-2 mr-2">:</span></div>' +
                            '<div><i class="zmdi zmdi-pin col-blue-grey">&nbsp;</i>' + value.cnd_location + '</div>';
                        //Hide address if empty
                        if (value.cnd_address2 != null && value.cnd_address2 != '') {
                            Str += '<div><label>Address2</label><span>:</span</div>' +
                                '<div>' + value.cnd_address2 + '</div>';
                        }

                        Str += '<div><label>Phone</label><span class="m-l-2 mr-2">:</span>' + (((value.cnd_phone == null || value.cnd_phone == '')) ? 'NA' : value.cnd_phone) + '</div>' +
                            '</div>' +
                            '<hr class="mt-2" style="margin-bottom: 9px;"><span>' + (value.cnd_default == 1 ? '' : btnSetDefault) + '&nbsp;' + btnEdit + '&nbsp;' + '&nbsp;' + btnStatus + '&nbsp;' + (value.cnd_default == 1 ? '' : btnDelete) + '</span>' +
                            '</div></div>';
                    });
                    Str += '</div>';
                    $('.divCndLocation').html(Str);
                    if (status == 1) {
                        $('.btnCndDefaultStatus').hide();
                        $('.btnCndLocationStatus').hide();
                    }
                }
                else {
                    $('#spnLocationActive').html('0');
                    $('#spnLocationInactive').html('0');
                    $('.divCndLocation').html('<span class="col-green">Not Available</span>');
                }
            });
    },

    GetLocationColumns: function (CndId, wid, action, location_id) {
        $('.clsEmpLocationField').html('');
        var Param = { WizardId: wid, ProfileId: CndId, ProfileType: 'cnd', SettingType: 1, location_id: location_id };
        ns_ajax.get(
            'Candidate/GetProfileWizard',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    ns_candidate.GenerateLocationFields(obj.WizardField, wid, action);
                }
            });
    },

    GenerateLocationFields: function (obj, id, action) {
        var StrVal = '', Control = '';
        $.each(obj, function (key, value) {
            var HideDiv = '', FillAdd = '';
            if (value.ws_field_name == 'cnd_address1') { HideDiv = 'CndLAddressDiv none'; FillAdd = 'txtfillCndLAddress'; }
            else if (value.ws_field_name == 'cnd_city') { HideDiv = 'CndLCityDiv none'; FillAdd = 'txtfillCndLCity'; }
            else if (value.ws_field_name == 'cnd_county') { HideDiv = 'CndLCountyDiv none'; FillAdd = 'txtfillCndLCounty'; }

            var Placeholder = ((value.ws_place_holder == null || value.ws_place_holder == '') ? 'Enter ' + value.ws_field_label : value.ws_place_holder);
            var IsRequried = value.ws_isRequired == 0 ? '' : '<span>*</span>';
            var Attribute = 'data-fieldname="' + value.ws_field_name + '" data-fieldlabel="' + value.ws_field_label + '" data-required="' + value.ws_isRequired + '" data-wid="' + id + '" placeholder="' + Placeholder + '"';
            var FieldValue = $('#btnCndLocationAddMore').attr('data-action') == 'edit' ? ((value.field_Value == null || value.field_Value == '') ? '' : value.field_Value) : '';

            if (value.ws_field_type == 'text') {
                if (value.ws_field_name == 'cnd_postcode') {
                    Control = '<div class="row m-l-2"><input id=txt-' + value.ws_field_id + ' class="form-control clsCndLocation col-sm-8 txtPostcode" maxlength="15" ' + Attribute + ' value="' + FieldValue + '">&nbsp;<a id="btnCndContactAddress" class="btn btn-primary col-sm-3 GetAddress2"><i class="zmdi zmdi-search">&nbsp;</i>Find</a></div>' +
                        '<div><span id="spannotfound2" class="spannotfound2" style="color: #FF0000;"></span></div>';
                    Control += '<div class="form-group divselectAddres2 none mt-3" ><select id="ddlCndLocation" class="form-control"></select></div>';
                }
                else if (value.ws_field_name == 'cnd_phone')
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndLocation ChkLocationMobile" maxlength="11" ' + Attribute + ' value="' + FieldValue + '">';
                else
                    Control = '<input id=txt-' + value.ws_field_id + ' class="form-control clsCndLocation ' + FillAdd + '" ' + Attribute + ' value="' + FieldValue + '">';
            }
            else if (value.ws_field_type == 'select')
                Control = '<select id="ddl-' + value.ws_field_id + '" class="form-control clsCndLocation"  ' + Attribute + '><option  value="' + FieldValue + '">Select</option></select>';
            else {
                Control = '<label id=lbl-' + value.ws_field_id + '>' + value.ws_field_label + '</label>';
            }
            value.ws_field_name == 'cnd_id' ? '' : StrVal += '<div class="form-group mt-2 ' + HideDiv + '"><label id="' + value.ws_field_name + '">' + value.ws_field_label + '' + IsRequried + '</label>' + '' + Control + '</div>';
        });
        $('.clsCndLocationField').html(StrVal);
        if (action == 'edit') {
            $(".CndLAddressDiv").show();
            $('.CndLCityDiv').show();
            $('.CndLCountyDiv').show();
        }
    },

    ChangeGetLocationStatus: function (emp_id, Locationid, status, type) {
        var Param = '{cnd_id:"' + emp_id + '" ,location_id:"' + Locationid + '",Status:"' + status + '",type:"' + type + '" }';
        ns_ajax.post(
            'Candidate/ChangeLocationsStatus',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK')
                    ShowAlertMessage("Message", "Status has been changed successfully.", "C");
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    DeleteLocation: function (Locationid, status, ulstatus) {
        var Param = '{location_id:"' + Locationid + '",status:"' + status + '" }';
        ns_ajax.post(
            'Candidate/DeleteLocations',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Contact address has been deleted successfully.", "C");
                    ns_candidate.GetLocation(ulstatus);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    getEmployerJobShifts: function () {
        var CndId = $('#hdfCndId').val();
        var Param = { CndId: CndId };
        ns_ajax.get(
            'Candidate/GetEmployerJobShifts',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), index = 1, jobShifts = "";
                    $.each(obj, function (key, value) {
                        jobShifts += '<tr>' +
                            '<td><b>' + index + '</b></td>' +
                            '<td><a href="#"><b>' + value.total_jobs + '</b></a></td>' +
                            '<td class="col-blue-grey"><b>' + value.total_duration + '</b></td>' +
                            '<td><span><b>' + value.job_type_title.split('-')[1] + '</b></span></td>' +
                            '<td><span><b>' + value.emp_name + '</b></span></td>' +
                            '<td>' +
                            '<a class="btn btn-outline-primary btn-sm clsViewEmpJobShifts" data-title="' + value.emp_name + '" data-emp-id="' + value.emp_id + '" data-job-type="' + value.job_type_title.split('-')[0] + '" data-toggle="modal" data-target="#viewjobshifts"><i class="zmdi zmdi-eye">&nbsp</i>view</a>' +
                            '</td>' +
                            '</tr>';
                        index += 1;
                    });
                    $('#tbodyEmployers').html(jobShifts);
                }
                else
                    $('#tbodyEmployers').html("<tr><td colspan='5'><center>" + response + "<br/></center></td></tr>");
            });
    },

    ViewAllEmpJobShifts: function (empId, jobType) {
        var CndId = $('#hdfCndId').val();
        var Param = { CndId: CndId, EmpId: empId, JobType: jobType };
        ns_ajax.get(
            'Candidate/ViewAllEmpJobShifts',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), index = 1, row = "";
                    var totalDurations = 0;
                    $.each(obj, function (key, value) {
                        row += '<tr>' +
                            '<td><b>' + index + '</b></td>' +
                            '<td><span><b>' + value.job_id + '</b></span></td>' +
                            '<td class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.job_start_datetime2 + '</b></td>' +
                            '<td class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.job_end_datetime2 + '</b></td>' +
                            '<td><span><b>' + value.job_type_title.split('-')[1] + '</b></span></td>' +
                            '<td><span><b>' + value.job_duration + '</b></span></td>' +
                            '<td><span class="' + (value.job_status_label == "COMPLETED" ? 'col-green' : 'col-red') + '"><b>' + value.job_status_label + '</b></span></td>' +
                            '</tr>';
                        totalDurations = (parseFloat(totalDurations) + parseFloat(value.job_duration_in_hour) + (value.job_type == 'P' ? ' day(s)' : ' hr(s)'));
                        index += 1;
                    });
                    $('#tbodyEmpJobShifts').html(row);
                    $('#totalDurations').html(totalDurations);
                }
            });
    },

    //Change candidate Profile Images
    UploadImage: function (dataUrl, cnd_id) {
        var ImageURL = dataUrl;// $('#landscape img').first().attr('src');
        // Split the base64 string in data and contentType     
        var block = ImageURL.split(";");
        // Get the content type of the image
        var contentType = block[0].split(":")[1];// In this case "image/gif"
        // get the real base64 content of the file

        var realData = block[1].split(",")[1];// In this case "R0lGODlhPQBEAPeoAJosM...."

        // Convert it to a blob to upload
        var blob = b64toBlob(realData, contentType);
        //console.log('blob='+blob);
        var formData = new FormData();
        formData.append("image", blob);
        formData.append("type", contentType);
        formData.append("cnd_id", cnd_id);
        ns_ajax.upload_pw(
            urls.uploadFileApi + "CNDPROFILEIMG_EMP",
            formData,
            "", "",
            function (response) {
                if (response == '"OK"') {
                    $('#fileInput').val('');
                    $('#fileInput').attr('data-val', '0');
                    $(".pixelarity-img-edit-cancel").click();
                    ShowAlertMessage("Message", "Profile Picture uploaded successfylly.", 'C');
                }
                else
                    ShowAlertMessage("Message", response, 'A');
            });
    },

    InsertCandidate: function () {
        var obj = {};
      /*  var ddlCat = $("#ddlcat").val();*/
        var ddlRole = $("#ddlRole").val();
        var ddlTitle = $("#ddltitle_ss").val();
        var txtFirstName = $("#txtFirstName").val();
        var txtLastName = $("#txtLastName").val();
        var txtGmcNumber = $("#txtGmcNumber").val();
        var txtMobileNumber = $("#txtCndMobileNumber").val(); 
        var txtCndEmail = $("#txtCndEmail").val();
        var Gender = $("input[name='Gender']:checked").val();
        var txtPostcode = $("#txtPostCode_ss").val();
        var ddlCndLocation = $("#selectList2_ss").val();
        var txtCndAddress1 = $("#txtaddressline2_ss").val();
        var txtCity = $("#txtCndCity_ss").val();
        var txtCounty = $("#tctCndCounty_ss").val();
        var IsEmailChecked = $('#ChkCndSignupEMAIL').is(":checked");
        var IsSmsChecked = $('#ChkCndSignupSMS').val();
        var cndrefered_by = $("#hfcndid").val();

        if ($('#ChkCndSignupEMAIL').attr('type') === 'checkbox')
            IsEmailChecked = +$('#ChkCndSignupEMAIL').is(':checked');
        if ($('#ChkCndSignupSMS').attr('type') === 'checkbox')
            IsSmsChecked = +$('#ChkCndSignupSMS').is(':checked');

        
        var reftype = $('input[type=radio][name=ReferredBy]:checked').val();
        var cndrefered_by = '0';
        if (reftype == 'E')
            var cndrefered_by = $("#hfcndidExt").val();
        else
            var cndrefered_by = $("#hfcndid").val();

        var titleRef = $("#ddltitleRef").val();
        var FirstNameRef = $("#txtFirstNameRef").val();
        var LastNameRef = $("#txtLastNameRef").val();
        var EmailRef = $("#txtEmailRef").val();
        var MobileNumberRef = $("#txtCndMobileNumberRef").val();

      
        if (ddlTitle == '0') {
            $("#ddlTitle_ss").focus();
            ShowAlertMessage("Message", "Select Title ", "A");
            return false;
        }
        if (txtFirstName == '') {
            $("#txtFirstName").focus();
            ShowAlertMessage("Message", "Enter First Name ", "A");
            return false;
        }
        if (txtMobileNumber != '' && txtMobileNumber.length < 10) {
            $("#txtMobileNumber").focus();
            ShowAlertMessage("Message", "Enter Valid Mobile Number", "A");
            return false;
        }
        if (txtCndEmail != '' && !IsEmail(txtCndEmail)) {
            $("#txtCndEmail").focus();
            ShowAlertMessage("Message", "Enter Valid Email", "A");
            return false;
        }
        //if (txtPostcode == '') {
        //    $("#txtPostCode_ss").focus();
        //    ShowAlertMessage("Message", "Enter Post Code ", "A");
        //    return false;
        //}

        //if (reftype == 'E' && titleRef == '0' && cndrefered_by == '0') {
        //    ShowAlertMessage("Message", "Please select reference title", "A");
        //    $("#ddltitleRef").focus();
        //    return false;
        //}
        //if (reftype == 'E' && FirstNameRef == '' && cndrefered_by == '0') {
        //    ShowAlertMessage("Message", "Enter Reference First name", "A");
        //    $("#txtFirstNameRef").focus();
        //    return false;
        //}
        //if (ddlCat == '') {
        //    $("#ddlcat").focus();
        //    ShowAlertMessage("Message", "Select Category ", "A");
        //    return false;
        //}
        if (ddlRole == 0) {
            $("#ddlRole").focus();
            ShowAlertMessage("Message", "Select Role ", "A");
            return false;
        }
        obj.cnd_id = 0;
        obj.cnd_role_id = $("#ddlRole").val();
        obj.cnd_title = ddlTitle;
        obj.cnd_first_name = txtFirstName;
        obj.cnd_last_name = txtLastName;
        obj.cnd_gender = Gender;
        obj.cnd_mobile = txtMobileNumber;
        obj.cnd_email = txtCndEmail;
        obj.IsEmailChecked = IsEmailChecked;
        obj.IsSmsChecked = IsSmsChecked;

        obj.cnd_postcode = txtPostcode;
        obj.cnd_address1 = txtCndAddress1;
        obj.cnd_city = txtCity;
        obj.cnd_county = txtCounty;
        obj.cnd_gmc_number = txtGmcNumber;
        //Ref
        obj.reftype = reftype;
        obj.cnd_refered_by = cndrefered_by;
        obj.titleRef = titleRef;
        obj.FirstNameRef = FirstNameRef;
        obj.LastNameRef = LastNameRef;
        obj.EmailRef = EmailRef;
        obj.MobileNumberRef = MobileNumberRef;
        var Param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.candidateApi + "InsertCnd",//  'Candidate/InsertCandidate',
            Param,
            function (response) {
                if (response == 'OK') {
                    ShowAlertMessage("Message", 'Candidate <b>' + obj.cnd_first_name + '</b> has been registered successfully.', "C");
                    $('#register-new-candidate-modal').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    $("#txtCndMobileNumber").val(''); 
                    ns_candidate.Reset();
                    fnPG._createPager('#PgCnd', ns_gris_setting.get_grid_field(fnPG.options.currentIndex, fnPG.options.rPP));
                    //ns_candidate.GetCandidateList();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    Reset: function () {
       /* $("#ddlcat").val('');*/
        $("#ddlRole").val('0');
        $("#ddltitle_ss").val('0');
        $("#txtFirstName").val('');
        $("#txtLastName").val('');
        $("#txtGmcNumber").val('');
        
        $("#txtCndMobileNumber").val('');
        $("#txtCndEmail").val('');
        $("input[name='Gender']:checked", false);
        $("#txtPostCode_ss").val('');
        $("#selectList2_ss").val('');
        $("#txtaddressline2_ss").val('');
        $("#txtCndCity_ss").val('');
        $("#tctCndCounty_ss").val('');
        $('#ChkCndSignupEMAIL').is(":checked", false);
        $('#empemail').val('');
        $('#ChkCndSignupSMS').val();
    },

    AddUpdateProfile: function (block, action) {
        var obj = {}, val = '', ids = '';
        if (block == 'BASIC_INFO') {
            var firstname = $('#txtfirstName').val();
            var lastname = $('#txtLastName').val();
            var mobile = $('#txtMobile').val();
            var email = $('#txtEmail').val();
            if ($('#ddltitle').val() == '0') {
                $('#ddltitle').focus();
                ShowAlertMessage("Message", "Select title", "A");
                return false;
            }
            if (firstname == '') {
                $('#txtfirstName').focus();
                ShowAlertMessage("Message", "Enter first name", "A");
                return false;
            }

            obj.cnd_title = $('#ddltitle').val();
            obj.cnd_first_name = firstname;
            obj.cnd_last_name = lastname;
            obj.cnd_email = email;
            obj.cnd_mobile = mobile;
        }
        else if (block == 'PERSONAL_STATEMENT') {
            var statement = $('#txtPersonalStatement').val();
            if (statement == '') {
                $('#txtPersonalStatement').focus();
                ShowAlertMessage("Message", "Enter personal statement", "A");
                return false;
            }
            obj.personal_statement = statement;
        }
        else if (block == "PENSION") {
            var pensionscheme = $('#txtNhsPensionScheme').val();
            var tiredrate = $('#txtPensionTiredRate').val();
            var insurancenum = $('#txtNationalInsuranceNum').val();
            var addedyears = $('#txtPensionAddedYears').val();
            var dob = $('#txtdob').val();

            if (pensionscheme == '') {
                $('#txtNhsPensionScheme').focus();
                ShowAlertMessage("Message", "Enter pension scheme", "A");
                return false;
            }
            if (tiredrate == '') {
                $('#txtPensionTiredRate').focus();
                ShowAlertMessage("Message", "Enter tired rate", "A");
                return false;
            }
            if (insurancenum == '') {
                $('#txtNationalInsuranceNum').focus();
                ShowAlertMessage("Message", "Enter insurance number", "A");
                return false;
            }
            if (addedyears == '') {
                $('#txtPensionAddedYears').focus();
                ShowAlertMessage("Message", "Enter years", "A");
                return false;
            }
            if (dob == '') {
                $('#txtdob').focus();
                ShowAlertMessage("Message", "Enter date of birth", "A");
                return false;
            }
            obj.nhs_pension_scheme = pensionscheme;
            obj.pension_tiered_rate = tiredrate;
            obj.national_insurance_number = insurancenum;
            obj.pensionaddedyears = addedyears;
            obj.dateofbirth = dob;
            obj.extrampavcstype = $('#txtExtrampavsType').val();
            obj.hostnhscb_lhb = $('#txtHostnhscbLhb').val();
            obj.extrampavcs = $('#txtExtrampavs').val();
            obj.hostlhbrefno = $('#txtHostlhbRefNo').val();
            obj.nhspsrefnumber = $('#txtNhspsRefNumber').val();
        }
        else if (block.split('-')[0] == 'SOCIAL_PROFILE') {
            var id = block.split('-')[1];
            var profiletype = $('#txtProfileType' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var profilelink = $('#txtProfileLink' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            if (profiletype == '') {
                $('#txtProfileType' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter profile type", "A");
                return false;
            }
            if (profilelink == '') {
                $('#txtProfileLink' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter profile link", "A");
                return false;
            }
            obj.social_profile_type = profiletype;
            obj.social_profile_link = profilelink;
        }
        else if (block.split('-')[0] == 'WORK_HISTORY') {
            var id = block.split('-')[1];
            var workrole = $('#txtWorkRole' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var employername = $('#txtEmployer' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var fromdate = $('#txtFromDate' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var todate = $('#txtTodate' + (action == 'UPDATE' ? '-' + id : '') + '').val();

            if (workrole == '') {
                $('#txtWorkRole' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter work role", "A");
                return false;
            }
            if (employername == '') {
                $('#txtEmployer' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter employer name", "A");
                return false;
            }
            if (fromdate == '') {
                $('#txtFromDate' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter from date", "A");
                return false;
            }
            if (todate == '') {
                $('#txtTodate' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter to date", "A");
                return false;
            }
            obj.work_role = workrole;
            obj.cnd_employer_name = employername;
            obj.from_date = fromdate;
            obj.to_date = todate;
        }
        else if (block.split('-')[0] == "QUALIFICATION") {
            var id = block.split('-')[1];
            var recivedate = $('#txtReceivedate' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var qualification = $('#txtQualification' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var institutin = $('#txtInstitution' + (action == 'UPDATE' ? '-' + id : '') + '').val();

            if (recivedate == '') {
                $('#txtReceivedate' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Select date", "A");
                return false;
            }
            if (qualification == '') {
                $('#txtQualification' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter qualification", "A");
                return false;
            }
            if (institutin == '') {
                $('#txtInstitution' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter institution name", "A");
                return false;
            }
            obj.qualification = qualification;
            obj.institution = institutin;
            obj.received_date = recivedate;
        }
        else if (block.split('-')[0] == "ADDITIONAL_EXP") {
            var id = block.split('-')[1];
            var category = $('#txtCategory').val();
            var expdetails = $('#txtExpDetail').Editor("getText");

            if (category == '') {
                $('#txtCategory').focus();
                ShowAlertMessage("Message", "Enter Category", "A");
                return false;
            }
            if (expdetails == '') {
                $('#txtExpDetail').focus();
                ShowAlertMessage("Message", "Enter Experience Detail", "A");
                return false;
            }
            obj.experience_category = category;
            obj.experience_detail = expdetails;
        }
        else if (block.split('-')[0] == "ADDRESS") {
            var id = block.split('-')[1];
            var postcode = $('#txtPostCode').val();
            var address = $('#txtaddressline2').val();
            var city = $('#txtCndCity').val();
            var county = $('#txtCndCounty').val();
            if (postcode == '') {
                $('#txtPostCode').focus();
                ShowAlertMessage("Message", "Enter Postcode", "A");
                return false;
            }
            if (address == '') {
                $('#txtaddressline2').focus();
                ShowAlertMessage("Message", "Enter address", "A");
                return false;
            }
            if (city == '') {
                $('#txtCndCity').focus();
                ShowAlertMessage("Message", "Enter city", "A");
                return false;
            }
            if (county == '') {
                $('#txtCndCounty').focus();
                ShowAlertMessage("Message", "Enter county", "A");
                return false;
            }

            obj.location_id = id;
            obj.cnd_postcode = postcode;
            obj.cnd_area = '';
            obj.cnd_address1 = address;
            obj.cnd_city = city;
            obj.cnd_county = county;
        }
        else if (block.split('-')[0] == "DEFAULT_STATUS" || block.split('-')[0] == "BANK_DEFAULT") {
            obj.id = block.split('-')[1];
        }
        else if (block == "SUBSCRIPTION") {
            obj.jobemail = $("#email_jobs").is(':checked') ? '1' : '0';
            obj.jobsms = $("#sms_jobs").is(':checked') ? '1' : '0';
            obj.jobapp = $("#appnotification_jobs").is(':checked') ? '1' : '0';
            obj.invemail = $("#chkinemail").is(':checked') ? '1' : '0';
            obj.invsms = $("#chkinsms").is(':checked') ? '1' : '0';
            obj.invapp = $("#chkinapp").is(':checked') ? '1' : '0';
            obj.newsemail = $("#chknewslemail").is(':checked') ? '1' : '0';
            obj.newssms = $("#chknewslsms").is(':checked') ? '1' : '0';
            obj.newsapp = $("#chknewslapp").is(':checked') ? '1' : '0';
        }
        else if (block == "PREFRENCE" || block == "ITSYS" || block == "LANGUAGE") {
            var cls = block == "PREFRENCE" ? '.clschkpref' : block == "ITSYS" ? '.clschkIt' : block == "LANGUAGE" ? '.clschklang' : '';
            $(cls).each(function (index) {
                IsChecked = +$(this).is(':checked');
                if (IsChecked == '1') {
                    val += $(this).attr('name') + ',';
                    ids += $(this).val() + ',';
                }
            });
            obj.id = ids;
        }
        else if (block.split('-')[0] == "DEL_SOCIAL_PRO" || block.split('-')[0] == "DEL_WORK_HIST" || block.split('-')[0] == "DEL_QUALIFICATION" || block.split('-')[0] == "DEL_ADD_EXP" || block.split('-')[0] == "DEL_REFRENCE") {
            obj.id = block.split('-')[1];
        }
        else if (block.split('-')[0] == "DEL_BANK_DETAIL") {
            obj.id = block.split('-')[1];
        }
        else if (block.split('-')[0] == 'REFRENCE') {
            var id = block.split('-')[1];
            var name = $('#txtRefName' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var mobile = $('#txtRefMobile' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var email = $('#txtRefEmail' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            var address = $('#txtRefAddress' + (action == 'UPDATE' ? '-' + id : '') + '').val();
            if (name == '') {
                $('#txtRefName' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter name", "A");
                return false;
            }
            if (mobile == '') {
                $('#txtRefMobile' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter mobile number", "A");
                return false;
            }
            if (mobile !== '' && mobile.length < 10) {
                $('#txtRefMobile' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                ShowAlertMessage("Message", "Enter correct mobile number", "A");
                return false;
            }
            if (email !== '' && IsEmail(email) == false) {
                ShowAlertMessage("Message", "Enter correct email.", "A");
                $('#txtRefEmail' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
                Result = 0;
                return false;
            }
            obj.id = id;
            obj.name = name;
            obj.mobile = mobile;
            obj.email = email;
            obj.r_address = address;
        }

        obj.cnd_id = $('.profile-id').attr('data-id');
        obj.block = block;
        obj.action = action;
        var param = "[" + JSON.stringify(obj) + "]";
        ns_ajax.post(
            urls.candidateApi + 'profile',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var msg = '', id = 0;
                    id = block.split('-')[1];
                    block = block.split('-')[0];
                    if (block == 'BASIC_INFO') {
                        ShowAlertMessage("Message", "Information has been update successfully.", "C");
                        var status = $('#spnstatus').html();

                        var span = '[<b id="spnstatus" class="' + (status == 'Active' ? 'col-green' : 'col-red') + ' font-13 ml-1">' + status + '</b>]';
                        $('#spncndname').html('<b>' + obj.cnd_title + ' ' + obj.cnd_first_name + ' ' + obj.cnd_last_name + '</b>' + span);
                        $('#spncndname1').html('<b>' + obj.cnd_title + ' ' + obj.cnd_first_name + ' ' + obj.cnd_last_name + '</b>' + span);
                       
                        $('#spanprofile-name').html(obj.cnd_title + ' ' + obj.cnd_first_name + ' ' + obj.cnd_last_name);
                        $('.spanprofile-name').html(obj.cnd_title + ' ' + obj.cnd_first_name + ' ' + obj.cnd_last_name);

                        createCookie('pname', obj.cnd_title + ' ' + obj.cnd_first_name + ' ' + obj.cnd_last_name, 1);
                        $('#spncndmobile').html(obj.cnd_mobile);
                        $('#spncndemail').html(obj.cnd_email);
                        $('#txtfirstName').val(obj.cnd_first_name);
                        $('#txtLastName').val(obj.cnd_last_name);
                        $('#txtEmail').val(obj.cnd_email);
                        $('#txtMobile').val(obj.cnd_mobile);
                        $('.h_pro_edit').hide();
                        $('.s_pro_view, .hd-edit, .over-layer').show();
                    }
                    else if (block == "PERSONAL_STATEMENT") {
                        ShowAlertMessage("Message", "Personal Statement has been update successfully.", "C");
                        $('#spanstatement').html(obj.personal_statement);
                        $('#btnupdatestatement').attr('data-statement', obj.personal_statement);
                        $('#ModalPersonalStatement').modal('hide');
                        $(".modal-backdrop").css('display', 'none');
                        $('.personal_sat_edit, .cro_p').hide();
                        $('.hp-edit, .personal_sat_view').show();
                    }
                    else if (block == "SOCIAL_PROFILE") {
                        ShowAlertMessage("Message", "Social Profile has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spnlbltype-' + obj.id).html(obj.social_profile_type);
                            $('#spnlbllink-' + obj.id).html(obj.social_profile_link);
                            $('.sphide-' + obj.id).hide();
                            $('.spshow-' + obj.id).show();
                        }
                        else {
                            var lastrowSN = $('#Social_Profile_Placeholder').closest('table').find('tr:last td:first').text();
                            lastrowSN++;
                            obj.ROWNUMBER = lastrowSN;
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#SocialProfile_footer_Template', '#SocialProfile_footer_Placeholder');
                            $('.sodial_add, .cro_add').hide();
                            $('.had-add, .social_view').show();
                            $('#txtProfileType, #txtProfileLink').val('');
                        }
                    }
                    else if (block == "WORK_HISTORY") {
                        ShowAlertMessage("Message", "Work History has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spnworkrole-' + obj.id).html(obj.work_role);
                            $('#spnempname-' + obj.id).html(obj.cnd_employer_name);
                            $('#spnfromdate-' + obj.id).html(obj.from_date);
                            $('#spntodate-' + obj.id).html(obj.to_date);
                            $('.whhide-' + obj.id).hide();
                            $('.whshow-' + obj.id).show();
                        }
                        else {
                            var lastrowSN = $('#WorkHistory_Placeholder').closest('table').find('tr:last td:first').text();
                            lastrowSN++;
                            obj.ROWNUMBER = lastrowSN;
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#WorkHistory_footer_Template', '#WorkHistory_footer_Placeholder');
                            $('.add-evnt').hide();
                            $('.editshow').show();
                            $('#txtWorkRole, #txtEmployer, #txtFromDate, #txtTodate').val('');
                        }
                    }
                    else if (block == "QUALIFICATION") {
                        ShowAlertMessage("Message", "Qualification has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spnReceicedate-' + obj.id).html(obj.received_date);
                            $('#spnQualification-' + obj.id).html(obj.qualification);
                            $('#spnInstitution-' + obj.id).html(obj.institution);
                            $('.Qhide-' + obj.id).hide();
                            $('.Qshow-' + obj.id).show();
                        }
                        else {
                            var lastrowSN = $('#Qualification_Placeholder').closest('table').find('tr:last td:first').text();
                            lastrowSN++;
                            obj.ROWNUMBER = lastrowSN;
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#Qualification_footer_Template', '#Qualification_footer_Placeholder');
                            $('.d_noneedit').hide();
                            $('.qualshow').show();
                            $('#txtReceivedate, #txtQualification, #txtInstitution').val('');
                        }
                    }
                    else if (block == "ADDRESS") {
                        ShowAlertMessage("Message", "Address has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.location_id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spncityandcounty-' + obj.location_id).html(obj.cnd_city + ', ' + obj.cnd_county);
                            $('#spnpostcode-' + obj.location_id).html(obj.cnd_postcode);
                            $('#btnaddress-' + obj.location_id).html(obj.cnd_address1);
                            $('#btnContAddEdit-' + obj.location_id).attr('data-address', obj.cnd_address1).attr('data-city', obj.cnd_city).attr('data-county', obj.cnd_county).attr('data-postcode', obj.cnd_postcode);
                        }
                        else {
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#Address_footer_Template', '#ContactAddress_footer_Placeholder');
                            $('#txtPostCode, #txtaddressline2, #txtCndCity, #txtCndCounty').val('');
                        }
                        $('.disply_newaddresso').hide();
                        $('.disply_none_newcontacto').show();
                    }
                    else if (block == "PENSION" || block == "SUBSCRIPTION") {
                        ShowAlertMessage("Message", "" + (block == 'PENSION' ? 'Pension details' : 'Subscription') + " has been update successfully.", "C");
                        if (block == "PENSION") {
                            $('#spnpensionscheme').html(obj.nhs_pension_scheme);
                            $('#spntiredrate').html(obj.pension_tiered_rate);
                            $('#spninsurancenum').html(obj.national_insurance_number);
                            $('#spnpensionaddedyear').html(obj.pensionaddedyears);
                            $('#spndob').html(obj.dateofbirth);
                            $('#spnextrampavcstype').html(obj.extrampavcstype);
                            $('#spnhostnhscb_lhb').html(obj.hostnhscb_lhb);
                            $('#spnextrampavcs').html(obj.extrampavcs);
                            $('#spnhostlhbrefno').html(obj.hostlhbrefno);
                            $('#spnnhspsrefnumber').html(obj.nhspsrefnumber);
                            $('.disply_none_rowPension').show('slow');
                            $('.disply_rowPension').hide('slow');
                            $('.pnsnedt').hide();
                            $('.pnsnview, .pnsnbtn').show();
                        }
                    }
                    else if (block == "ADDITIONAL_EXP") {
                        ShowAlertMessage("Message", "Experience has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spncategory-' + obj.id).html(obj.experience_category);
                            $('#spncatdetail-' + obj.id).html(obj.experience_detail);
                            $('#btnExpedit-' + obj.id).attr('data-category', obj.experience_category).attr('data-cat-detail', obj.experience_detail);
                        }
                        else {
                            var lastrowSN = $('#Experience_Placeholder').closest('table').find('tr:last').attr('data-row');
                            lastrowSN++;
                            obj.ROWNUMBER = lastrowSN;
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#Experience_footer_Template', '#Experience_footer_Placeholder');
                        }
                        $('.edit-adition').hide();
                        $('.show-adition').show();
                    }
                    else if (block == "PREFRENCE" || block == "ITSYS" || block == "LANGUAGE") {
                        msg = block == 'PREFRENCE' ? 'Job Prefrence' : block == 'ITSYS' ? 'IT system' : block == 'LANGUAGE' ? 'Language' : '';
                        ShowAlertMessage("Message", "" + msg + " has been updated successfully.", "C");
                        var item = '', placeholder = '';
                        val = val.slice(0, -1);
                        if (block == "PREFRENCE") {
                            $('#btnEditPref').attr('data-ids', ids);
                            $('.jobprpedt').hide();
                            $('.jobprp, .jbe').show();
                            placeholder = 'Prefrence';
                        }
                        else if (block == "ITSYS") {
                            $('#btnEditITSys').attr('data-ids', ids);
                            $('.itsystedt').hide();
                            $('.itsystview, .itsyst').show();
                            placeholder = 'ITSystem';
                        }
                        else if (block == "LANGUAGE") {
                            $('#btnEditLang').attr('data-ids', ids);
                            $('.langedt').hide();
                            $('.langview, .langbtn').show();
                            placeholder = 'Language';
                        }
                        $('#' + placeholder + '_Placeholder').html('');
                        for (var i = 0; i < val.split(',').length; i++) {
                            item += '<span class="badge badge-info mr-1">' + val.split(',')[i] + '</span>';
                        }
                        $('#' + placeholder + '_Placeholder').html(item);
                    }
                    else if (block == "DEFAULT_STATUS") {
                        ShowAlertMessage("Message", "Default status has been change successfully.", "C");
                        $('.defaultstatus').html('').removeClass('bbl-light');
                        $('#spndefault-' + id).html('Main').addClass('bbl-light');
                        $('.removedisabled').removeClass('disabled');
                        $('#btnAddDel-' + id).addClass('disabled');
                        $('#btndefault-' + id).addClass('disabled');
                    }
                    else if (block == "DEL_SOCIAL_PRO" || block == "DEL_WORK_HIST" || block == "DEL_QUALIFICATION" || block == "DEL_ADD_EXP" || block == "DEL_REFRENCE") {
                        msg = block == 'DEL_SOCIAL_PRO' ? 'Social Profile' : block == 'DEL_WORK_HIST' ? 'Work History' : block == 'DEL_QUALIFICATION' ? 'Qualification' : block == 'DEL_ADD_EXP' ? 'Experience' : block == 'DEL_REFRENCE' ? 'Refenerce' : '';
                        var text = block == 'DEL_SOCIAL_PRO' ? 'trsp' : block == 'DEL_WORK_HIST' ? 'trwh' : block == 'DEL_QUALIFICATION' ? 'trQ' : block == 'DEL_ADD_EXP' ? 'txexp' : block == 'DEL_REFRENCE' ? 'ref' : '';
                        ShowAlertMessage("Message", "" + msg + " has been deleted successfully.", "C");
                        $('#' + text + '-' + id).remove();
                    }
                    else if (block == "DEL_ADDRESS") {
                        ShowAlertMessage("Message", "Address has been deleted successfully.", "C");
                        $('#divTemp-' + id).remove();
                    }
                    else if (block == "DEL_BANK_DETAIL") {
                        ShowAlertMessage("Message", "Bank detail has been deleted successfully.", "C");
                        $('#tbd-' + id).remove();
                    }
                    else if (block == "BANK_DEFAULT") {
                        ShowAlertMessage("Message", "Default status has been change successfully.", "C");
                        if ($('#btnBankdefault-' + id).attr('data-status') == 0) {
                            $('.clsrembtncol').attr('data-status', '0').removeClass('btn-success clsrembtncol').addClass('btn-warning ClsCndProfile').html('No');
                            $('#btnBankdefault-' + id).attr('data-status', '1').removeClass('btn-warning ClsCndProfile').addClass('btn-success clsrembtncol').html('Yes');
                        }
                    }
                    else if (block == "REFRENCE") {
                        ShowAlertMessage("Message", "References has been " + (action == 'UPDATE' ? 'updated' : 'saved') + " successfully.", "C");
                        obj.id = response.split('|')[1];
                        if (action == 'UPDATE') {
                            $('#spanrefname-' + obj.id).html(obj.name);
                            $('#spanrefmobile-' + obj.id).html(obj.mobile);
                            $('#spnrefemail-' + obj.id).html(obj.email);
                            $('#spnrefaddres-' + obj.id).html(obj.r_address);
                            $('.rhide-' + obj.id).hide();
                            $('.rshow-' + obj.id).show();
                        }
                        else {
                            $('.ref_add').hide();
                            $('.hadRef-add').show();
                            var lastrowSN = '';
                            var count = $('#Refrence_Placeholder tr').length;
                            if (count > 0)
                                lastrowSN = $('#Refrence_Placeholder').closest('table').find('tr:last td:first').attr('data-id');
                            else
                                lastrowSN = 0;

                            lastrowSN++;
                            obj.ROWNUMBER = lastrowSN;
                            call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#Refrence_Footer_Template', '#Refrence_Footer_Placeholder');
                            $('#txtRefName, #txtRefMobile,#txtRefEmail,#txtRefAddress').val('');
                        }
                    }
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    AddUpdateBankDetail: function (id, action) {
        var data = new FormData();
        var name = $('#txtAccountHolder' + (action == 'UPDATE' ? '-' + id : '') + '').val();
        var accountnumber = $('#txtAccountNumber' + (action == 'UPDATE' ? '-' + id : '') + '').val();
        var sortcode = $('#txtSortCode' + (action == 'UPDATE' ? '-' + id : '') + '').val();
        var companyname = $('#txtCompanyName' + (action == 'UPDATE' ? '-' + id : '')).val();

        var compregno = $('#txtCompanyRegNo' + (action == 'UPDATE' ? '-' + id : '') + '').val();
        var fileUpload = $('#RegUrl' + (action == 'UPDATE' ? '-' + id : '') + '').get(0);
        var files = fileUpload.files;
        if (name == '') {
            $('#txtAccountHolder' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
            ShowAlertMessage("Message", "Enter name", "A");
            return false;
        }
        if (accountnumber == '') {
            ShowAlertMessage("Message", "Enter account number", "A");
            $('#txtAccountNumber' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
            return false;
        }
        if (sortcode == '') {
            ShowAlertMessage("Message", "Enter sort code", "A");
            $('#txtSortCode' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
            return false;
        }
        if (sortcode.length < 6) {
            ShowAlertMessage("Message", "Sortcode must be 6 characters long", "A");
            $('#txtSortCode' + (action == 'UPDATE' ? '-' + id : '') + '').focus();
            return false;
        }
        data.append("FileUpload", files[0]);
        data.append("Id", id),
            data.append("Name", name),
            data.append("AccountNumber", accountnumber),
            data.append("SortCode", sortcode);
        data.append("CompanyName", companyname);
        data.append("CompanyRegNo", compregno);
        data.append("cnd_id", $('.profile-id').attr('data-id'));
        ns_ajax.upload2(
            urls.complianceApi + 'cndbankdetails',
            data,
            function (response) {
                response = response.slice(1, -1);
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Bank detail " + (id == 0 ? 'saved' : 'updated') + " successfully.", "C");

                    var id = response.split('|')[1];
                    var url = response.split('|')[2];
                    if (action == 'UPDATE') {
                        $('#spnAccountholder-' + id).html(name);
                        $('#spnAccountNumber-' + id).html(accountnumber);
                        $('#spnSortCode-' + id).html(sortcode);
                        $('#spnCompanyName-' + id).html(companyname);
                        $('#spnCompanyRegNo-' + id).html(compregno);
                        $('#spnRegUrl-' + id).html('<i class="zmdi zmdi-file-text"  style="font-size: 24px;">&nbsp;</i>');
                        $('#spnRegUrl-' + id).attr('data-file-name', url);
                        $('.bdhide-' + id).hide();
                        $('.bdshow-' + id).show();
                    }
                    else {
                        $('.bank_add').hide();
                        var count = $('#Bank_Detail_Placeholder tr').length;
                        var lastrowSN = count > 0 ? $('#Bank_Detail_Placeholder').closest('table').find('tr:last td:first').attr('data-id') : '0';
                        lastrowSN++;
                        var obj = {};
                        obj.id = id;
                        obj.ROWNUMBER = lastrowSN;
                        obj.cnd_account_holder_name = name;
                        obj.cnd_bank_account_number = accountnumber;
                        obj.cnd_sort_code = sortcode;
                        obj.company_name = companyname;
                        obj.cnd_company_reg_no = compregno;
                        obj.cnd_reg_certificate_url = url;
                        call_Sub_tmpl_binder(obj, '/Template/cnd_profile_tmpl.html', '#BankDetail_footer_Template', '#BankDetail_footer_Placeholder');
                        $('#txtAccountHolder, #txtAccountNumber,#txtSortCode,#txtCompanyName,#txtCompanyRegNo,#RegUrl').val('');
                    }
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });

    },
    viewRegcertificate: function (fileName) {
        $('#iframeCertificate').attr('src', "/images/process.gif");
        var param = { fileId: '0', fileName: fileName };
        ns_ajax.get(
            urls.complianceApi,
            param,
            function (response) {
                if (response.split('##')[0] == 'OK') {
                    var url = response.split('##')[1];
                    $('#iframeCertificate').attr('src', url);
                }
                else
                    $('#iframeCertificate').attr('src', "/images/notavailable.jpg");

            });
    },
}

ns_Notes = {
    InsertNotes: function (ProfileId, ProfileType, TaskType, TotalRecords, Status, Action) {
        var data = new FormData();
        var NoteId = $('#btnNotesSend').attr('data-id');
        var txtNotesDesc = $("#txtNotesDesc").val();
        var fileUpload = $('#fileupload').get(0);
        var files = fileUpload.files;
        var AddToTask = $('#ChkAddTask').prop('checked') ? '1' : '0';
        var ddlReason = $("#ddlNotesReason").val();
        var ddlRemind = $("#ddlNotesRemindMe").val();
        if (txtNotesDesc == '') {
            $("#txtNotesDesc").focus();
            ShowAlertMessage("Message", "Enter description", "A");
            return false;
        }
        if (AddToTask == 1) {
            if (ddlReason == '') {
                $("#ddlNotesReason").focus();
                ShowAlertMessage("Message", "Select a reason", "A");
                return false;
            }
            if (ddlRemind == '') {
                $("#ddlNotesRemindMe").focus();
                ShowAlertMessage("Message", "Select from remind me", "A");
                return false;
            }
        }
        //for (var i = 0; i < files.length; i++) {
        data.append("FileUpload", files[0]);
        data.append("NoteId", NoteId),
            data.append("ProfileType", ProfileType),
            data.append("ProfileId", ProfileId),
            data.append("Notes", txtNotesDesc);
        data.append("Reason", ddlReason);
        data.append("TaskTitle", $("#txttasktitle").val());
        data.append("TaskRepeat", ddlRemind);
        data.append("OnDate", $("#txtNoteOnDate").val());
        data.append("UtilDate", $("#txtNoteUtilDate").val());
        data.append("Ontime", $("#txtNoteOnTime").val());
        data.append("Utiltime", $("#txtNoteUtilTime").val());
        data.append("TaskType", TaskType);
        data.append("AddToTask", AddToTask);
        // }
        ns_ajax.upload(
            'Candidate/InsertNotes',
            data,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", (NoteId == '0' ? 'Notes has been created successfully' : 'Notes has been updated sucessfully'), "C");
                    ns_Notes.Clear();
                    ns_Notes.DisableControl();
                    ns_Notes.GetNotes(ProfileId, ProfileType, TotalRecords, Status, Action);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    GetNotes: function (ProfileId, ProfileType, TotalRecord, Status, Action) {
        $('.clsNotesDetails').html('');
        var param = { ProfileId: ProfileId, ProfileType: ProfileType, TotalRecord: TotalRecord, DeleteStatus: Status };
        ns_ajax.get(
            'Candidate/GetNotesDetails',
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var str = '';
                    var cls = (Action == 'LIST' ? 'RemoveEdit' : '');
                    $.each(obj, function (key, value) {
                        $('#spnNotesActive').html(value.active);
                        $('#spnNotesDelete').html(value.deleted);
                        var btnNotesFile = value.file_path == '' ? '' : '<a class="btn btn-primary pop"><img id="imgNotesFile-' + value.note_id + '" src="/NotesFile/' + value.file_path + '" style="height: 50px;width: 75px;display:none;" /><i class="zmdi zmdi-file">&nbsp;</i>File</a>';


                        str += '<div  id="divNote-' + value.note_id + '" class="div-chat clearfix p-b-0">' +
                            '<img src="images/profile.jpg" alt="avatar" class="img-responsive rounded-circle img" />' +
                            '<div class="about" style="margin-bottom:0px">' +
                            '<div class="name">' +
                            '<b class="col-blue">' + value.name + '</b>&nbsp;' +
                            //<em class="col-green">sent the proposal </em>
                            '<small><b class="col-grey ml-1">' + value.time + '</b></small>' +
                            '<span class="float-right"><a id="btnEditNotes-' + value.note_id + '" class="h_over btnEditNotes ' + cls + '" title="Edit" ><i class="zmdi zmdi-edit text-primary"></i></a>' +
                            '&nbsp;&nbsp;<a id="btnDeleteNotes-' + value.note_id + '" class="h_over ml-2 rmv btnDeleteNotes" title="Delete"><i class="zmdi zmdi-delete col-red"></i></a>' +
                            '</span>' +
                            '</div>' +
                            '<div class="noteshow"><span id="spnNotesDesc-' + value.note_id + '">' + value.notes + '</span>&nbsp;' + btnNotesFile + '</div>' +
                            '</div>' +
                            '</div>' +
                            '<hr  id = "hrNote-' + value.note_id + '" style="border: 1px solid #e9e4e4;" />';
                    });
                    if (Action == 'POP') $('.clsNotesDetails').html(str);
                    if (Action == 'SHORTNOTES') $('.clsShortNotes').html(str);
                    if (Action == 'LIST') {
                        $('.clsNotesList').html(str);
                        if (Status == 1) $('.RemoveEdit').hide();
                    }
                }
                else {
                    //ShowAlertMessage("Error !", response, "A");
                    var msg = 'Not Available !';
                    if (Action == 'POP') $('.clsNotesDetails').html(msg);
                    if (Action == 'SHORTNOTES') $('.clsShortNotes').html(msg);
                    if (Action == 'LIST') $('.clsNotesList').html(msg);
                    $('#spnNotesActive').html('0');
                    $('#spnNotesDelete').html('0');
                }
            }
        );
    },

    ChangeNoteStatus: function (NoteId, ProfileId, ProfileType, TotalRecords, Status, Action) {
        var param = '{NoteId: "' + NoteId + '",Status: "' + Status + '" }';
        ns_ajax.post(
            'Candidate/ChangeNoteStatus',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", 'Action has been processed successfuly.', "C");
                    $('#divNote-' + NoteId).remove();
                    $('#hrNote-' + NoteId).remove();

                    //ns_Notes.GetNotes(ProfileId, ProfileType, TotalRecords, Status, Action);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    Clear: function () {
        $("#txtNotesDesc").val('');
        $("#ddlNotesReason").val('');
        $("#txttasktitle").val('');
        $("#ddlNotesRemindMe").val('');
        $("#txtNoteOnDate").val('');
        $("#txtNoteUtilDate").val('');
        $("#txtNoteOnTime").val('');
        $("#txtNoteUtilTime").val('');
        $('#ChkAddTask').prop('checked', false);
        $('#btnNotesSend').attr('data-id', '0');
    },

    EnableControl: function () {
        $("#divTitle").show('slow');
        $("#divRemind").show('slow');
        $("#divOndate").show('slow');
        $("#divUtildate").show('slow');
        $('#btnAddNotes').show('slow');
        $('#btnCloseNotes').show('slow');
    },

    DisableControl: function () {
        $("#divTitle").hide('slow');
        $("#divRemind").hide('slow');
        $("#divOndate").hide('slow');
        $("#divUtildate").hide('slow');
        $('#btnAddNotes').hide('slow');
        $('#btnCloseNotes').hide('slow');
        $('#ChkAddTask').prop('checked', false);
    },

    NotesStringPattern: function () {
        var str = '';
        var Reason = $('#ddlNotesReason').val();
        var Remind = $('#ddlNotesRemindMe').val();
        var OnDate = $('#txtNoteOnDate').val();
        var OnTime = $('#txtNoteOnTime').val();
        var UtilDate = $('#txtNoteUtilDate').val();
        var UtilTime = $('#txtNoteUtilTime').val();
        if (Reason != '') str += Reason + ' ';
        if (Remind != '') str += Remind + ' ';
        if (OnDate != '') str += OnDate + ' ';
        if (OnTime != '') str += OnTime + ' ' + ' Until' + ' ';
        if (UtilDate != '') str += UtilDate + ' ';
        if (UtilTime != '') str += UtilTime + ' ';
        $('#txtNotesDesc').val(str.trim());
    },

    SetValue: function (ProfileId, ProfileType, Role, Name) {
        $('#spnNotesProfileId').html(ProfileId);
        $('#spnProfileType').html(ProfileType);
        $('#btnCreateNewNotes').attr('data-id', ProfileId);
        $('#btnCreateNewNotes').attr('data-role', Role);
        $('#btnCreateNewNotes').attr('data-name', Name);
        $('#spnNotesProfileName').html(name);
        $('#spnNotesTimeAndRole').html(GetCurrentTime() + '&nbsp;IST' + '&nbsp;<b class="col-green">' + Role + ' </b>');
        ns_Notes.GetNotes(ProfileId, ProfileType, 2, 0, 'SHORTNOTES');
    },
}

ns_admin_user_profile = {
    update_password: function () {
        var txtCurrentPassword = $('#txtCurrentPassword').val();
        var txtNewPassword = $('#txtNewPassword').val();
        var txtConfirmPassword = $('#txtConfirmPassword').val();
        if (txtCurrentPassword == '') {
            $("#txtCurrentPassword").focus();
            ShowAlertMessage("Message", "Enter current password", "A");
            return false;
        }
        if (txtNewPassword == '') {
            $("#txtNewPassword").focus();
            ShowAlertMessage("Message", "Enter New password", "A");
            return false;
        }
        if (txtNewPassword !== '' && txtNewPassword.length < 6) {
            $("#txtNewPassword").focus();
            ShowAlertMessage("Message", "New password should be minimum six charactor long", "A");
            return false;
        }
        if (txtConfirmPassword == '') {
            $("#txtConfirmPassword").focus();
            ShowAlertMessage("Message", "Enter Confirm password", "A");
            return false;
        }
        if (txtNewPassword == txtConfirmPassword) {
            var Param = "{ password: '" + txtCurrentPassword + "',NewPassword:'" + txtNewPassword + "'}";
            ns_ajax.post(
                'Home/UpdatePassword',
                Param,
                function (response) {
                    if (response == 'OK') {
                        ShowAlertMessage("Message", "Password update successfully.", "C");
                        $('#txtCurrentPassword').val('');
                        $('#txtNewPassword').val('');
                        $('#txtConfirmPassword').val('');
                    }
                    else {
                        ShowAlertMessage("Message", "Sorry ! Please try again.", "A");
                    }
                });
        }
        else
            ShowAlertMessage("Message", "New password and confirm password are not matched.", "A");
    },
    get_user_profile_detail: function () {
        ns_ajax.get(
            'Home/GetUserProfileDetail',
            '',
            function (response) {
                if (response.split('%')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('%')[1]);
                    var objloginhistory = jQuery.parseJSON(response.split('%')[2]);
                    var StrVal = '', i = 0;
                    $.each(obj, function (key, value) {
                        $('#spnorg').html(value.org_name);
                        $('#spnrolename').html(value.role_name);
                        $('#spnusername').html(value.first_name + ' ' + value.last_name);
                        $('#spnuserrole').html(value.role_name);
                        $('#spnfirstname').html(value.first_name);
                        $('#spnlastname').html(value.last_name);
                        $('#spnwebsite').html(value.website);
                        $('#spnemail').html(value.email);
                        $('#spnmobile').html(value.mobile);
                        $('#spnpostcode').html(value.postcode);
                        // $('#imglogo').attr('src', value.org_logo); 
                        $('#spnlastlogin').html(value.last_login_date);
                        //  $('#spnbrowser').html(value);
                        $('#spnipaddress').html(value.login_from_ip_address);
                        $('#spnaemail').html(value.email);
                    });

                    $.each(objloginhistory, function (key, value) {
                        i++;
                        StrVal += '<tr>' +
                            '<td>' + i + '</td>' +
                            '<td>' + (value.user_id == 1 ? 'Admin' : '') + '</td>' +
                            '<td class="col-blue">' + 'Admin User' + '</td>' +
                            '<td class="col-grey">' + '<i class="zmdi zmdi-calendar">&nbsp;</i>' + value.login + '</td>' +
                            '<td class="col-brown">' + value.ip + '</td>' +
                            '<td>' + value.browser + '</td>' +
                            '</tr>';
                    });
                    $('.tblloginhistory').html(StrVal);
                }
                else {
                    $('.tblloginhistory').html('');
                    ns_admin_user_profile.Clear();
                }
            });
    },
    Clear: function () {
        $('#spnorg').html('');
        $('#spnrolename').html('');
        $('#spnfirstname').html('');
        $('#spnlastname').html('');
        $('#spnwebsite').html('');
        $('#spnemail').html('');
        $('#spnmobile').html('');
        $('#spnpostcode').html('');
        // $('#imglogo').attr('src', ''); 
        $('#spnlastlogin').html('');
        //  $('#spnbrowser').html('');
        $('#spnipaddress').html('');
        $('#spnaemail').html('');
    },
}

Orglanguages = {
    select2: function () {
        $('.ddlOrgLanguage').select2({
            allowClear: true,
            width: '100%'
        })
    },
}

ns_Group_Setting = {
    //group master
    Insert_Group_Setting: function () {
        var obj = {};
        var GroupName = $("#txtgroupname").val();
        var GroupKey = $("#txtgroupkey").val();
        var ParentId = $("#ddlParent").val();
        if (GroupName == '') {
            $("#txtgroupname").focus();
            ShowAlertMessage("Message", "Enter Group Name", "A");
            return false;
        }
        if (GroupKey == '') {
            $("#txtgroupkey").focus();
            ShowAlertMessage("Message", "Enter Group Key", "A");
            return false;
        }
        obj.group_id = $("#btnSaveGroupSetting").attr('data-id');
        obj.group_name = GroupName;
        obj.group_key = GroupKey;
        obj.group_parent_id = ParentId;
        ns_ajax.post(
            '/MasterSettings/InsertGroupSetting',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    if (obj.id == 0)
                        ShowAlertMessage("Message", 'Group setting save successfully.', "C");
                    else
                        ShowAlertMessage("Message", 'Group setting updated successfully.', "C");
                    $("#btnSaveGroupSetting").attr('data-id', "0");
                    $("#txtgroupname").val('');
                    $("#txtgroupkey").val('');
                    $('#ddlParent').html('<option value="0">Select Parent</option>');
                    ns_Group_Setting.Get_Group_Setting();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    Change_group_Setting_Status: function (id) {
        var status = $('#GroupSettingChangeStatus-' + id + '').html();
        if (status == '<i class="zmdi zmdi-check-all">&nbsp;</i>Active')
            status = 0;
        else
            status = 1;
        var obj = {};
        obj.group_id = id;
        obj.group_status = status;
        ns_ajax.post(
            '/MasterSettings/ChangeGroupSettingStatus',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Status has been changed successfully.", "C");
                    if (status == 1)
                        $('#GroupSettingChangeStatus-' + id).html('<i class="zmdi zmdi-check-all">&nbsp;</i>Active').removeClass('btn btn-warning btn sm').addClass('btn btn-success btn sm');
                    else
                        $('#GroupSettingChangeStatus-' + id).html('<i class="zmdi zmdi-money-off">&nbsp;</i>Inactive').removeClass('btn btn-success btn sm').addClass('btn btn-warning btn sm');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    Edit_Group_Setting: function (id) {
        var Param = { group_id: id };
        ns_ajax.get(
            '/MasterSettings/GetSetting',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        $("#btnSaveGroupSetting").attr('data-id', value.group_id);
                        $("#txtgroupname").val(value.group_name);
                        $("#txtgroupkey").val(value.group_key);
                        $("#ddlParent").val(value.group_parent_id);
                    });
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    Get_Group_Setting: function () {
        var group_id = $("#btnSaveGroupSetting").attr('data-id');
        var groupname = $("#txtSearchGroupSetting").val();
        var Param = { group_id: group_id, group_name: groupname };
        ns_ajax.get(
            '/MasterSettings/GetAllSetting',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    $.each(obj, function (key, value) {
                        totalCount = value.totalrowcount;

                        var strStatus = value.group_status == 1 ? '<a id="GroupSettingChangeStatus-' + value.group_id + '"  class="w65 btn btn-success btn sm GroupSettingChangeStatus"  title="Click to change status"><i class="zmdi zmdi-check-all">&nbsp;</i>Active</a>' : '<a id="GroupSettingChangeStatus-' + value.group_id + '"  class="w65 btn btn-warning btn sm GroupSettingChangeStatus"  title="Click to change status"><i class="zmdi zmdi-money-off">&nbsp;</i>Inactive</a>';
                        var strEdit = '<a id ="EditGroupSetting-' + value.group_id + '" class="btn btn-outline-primary btn-sm EditGroupSetting"  data-toggle="modal" data-target="#modalGroupSetting"><i class="zmdi zmdi-edit">&nbsp;</i></a>';
                        var strDelete = '<a id="btnDeleteGroupSetting-' + value.group_id + '" class="btn btn-outline-danger btn-sm btnDeleteGroupSetting"><i class="zmdi zmdi-delete"></i>&nbsp;</a>';

                        StrVal += '<tr id=tr-' + value.group_id + '>' +
                            '<td class="text-center">' + value.ROWNUMBER + '</td>' +
                            '<td class="text-center">' + value.group_name + '</td>' +
                            '<td class="text-center">' + value.group_key + '</td>' +
                            '<td class="text-center">' + ((value.parent_group == null || value.parent_group == '') ? 'Self' : value.parent_group) + '</td>' +
                            '<td class="text-center">' + value.create_date + '</td>' +
                            '<td class="text-center">' + (value.update_date == null ? '' : value.update_date) + '</td>' +
                            '<td class="align-center class="text-center"">' + strStatus + '</td>' +
                            '<td class="align-center class="text-center"">' + strEdit + ' ' + strDelete + '</td>' +
                            '</tr>';
                    });
                    $('.tbodyGroupSettingList').html(StrVal);
                }
                else
                    $('.tbodyGroupSettingList').html("");
            });
    },

    Get_Parent: function () {
        $('#ddlsearchgroup').html('<option value="0">All Group</option>');
        $('#ddlParent').html('<option value="0">Select Parent</option>');
        var Param = '';
        ns_ajax.get(
            '/MasterSettings/GetParent',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.group_id + '>' + value.group_name + '</option>'
                    });
                    $('#ddlParent').append(StrVal);
                    $('#ddlsearchgroup').append(StrVal);
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    DeleteSettingGroup: function (id) {
        var obj = {};
        obj.group_id = id;
        ns_ajax.post(
            '/MasterSettings/DeleteSettingGroup',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", 'Group setting delete successfully.', "C");
                    $('#tr-' + id + '').remove();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    //setting master

    InsertGroupMaster: function () {
        var StrVal = '', cnt = 0;
        $('.groupsettingmaster').each(function (index) {
            cnt++;
            index = $(this).attr('id').replace('groupsettingmaster', '');
            var settingid = $('#btnGroupSettingMasterAddRow').attr('data-id');
            var ddlgroup = $('#ddlgroup' + index).val();
            var ddlsubgroup = $('#ddlsubgroup' + index).val();
            var txtkeyname = $('#txtkeyname' + index).val();
            var txtkeyvalue = $('#txtkeyvalue' + index).val();
            var txtsortorder = $('#txtsortorder' + index).val();
            var ddlkeycontrol = $('#ddlkeycontrol' + index).val();
            var txtkeyattr = $('#txtkeyattr' + index).val();
            if (ddlgroup == 0) {
                $('#ddlgroup' + index).focus();
                ShowAlertMessage("Message", "Select group", "A");
                cnt--;
                return false;
            }
            else if (txtkeyname == '') {
                $('#txtkeyname' + index).focus();
                ShowAlertMessage("Message", "Enter key name", "A");
                cnt--;
                return false;
            }
            else if (ddlkeycontrol == 0) {
                $('#ddlkeycontrol' + index).focus();
                ShowAlertMessage("Message", "Select control type", "A");
                cnt--;
                return false;
            }
            else
                StrVal += settingid + '-' + ddlgroup + '-' + ddlsubgroup + '-' + txtkeyname + '-' + txtkeyvalue + '-' + txtsortorder + '-' + ddlkeycontrol + '-' + txtkeyattr + '@';
        });
        if (cnt == $('.groupsettingmaster').length) {
            ns_Group_Setting.InsertSetting(StrVal);
        }
    },

    InsertSetting: function (StrVal) {
        if (StrVal != '') {
            StrVal = StrVal.slice(0, -1);
            var obj = {};
            obj.values = StrVal;
            ns_ajax.post(
                '/MasterSettings/InsertGroupSettingMaster',
                obj,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        ShowAlertMessage("Message", "Group setting save successfully.", "C");
                        ns_Group_Setting.Clear();
                        ns_Group_Setting.Get_Group_Setting_master();
                    }
                    else
                        ShowAlertMessage("Message", response, "A");
                });
        }
    },

    Edit_Group_Setting_master: function (setting_id) {
        $('#btnGroupSettingMasterAddRow').hide();
        var Param = { setting_id: setting_id };
        ns_ajax.get(
            '/MasterSettings/GetGroupSettingMaster',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        $('#btnGroupSettingMasterAddRow').attr('data-id', value.setting_id);
                        $('#ddlgroup0').val(value.group_id);
                        ns_Group_Setting.Get_Sub_Group(value.group_id, value.sub_group_id);
                        $('#txtkeyname0').val(value.key_name);
                        $('#txtkeyvalue0').val(value.key_value);
                        $('#txtsortorder0').val(value.sort_order);
                        $('#ddlkeycontrol0').val(value.key_control_type);
                        $('#txtkeyattr0').val(value.key_attr);
                        $('#spnGroupLastUpdateDate').html(value.update_date);
                    });
                }
            });
    },

    AddRow: function (PreviousValue) {
        Counter++;
        SerialNo++;
        var NewRow = "<tr id='groupsettingmaster" + Counter + "' class='groupsettingmaster'>" +
            "<td>" + Counter + "</td>" +
            "<td><select id='ddlgroup" + Counter + "' class='form-control ddlgroup'><option value='0'> Select group </option></select></td> " +
            "<td><select id='ddlsubgroup" + Counter + "' class='form-control'> <option value='0'>Select sub group</option></select></td>" +
            "<td><input type='text' id='txtkeyname" + Counter + "' class='form-control' placeholder='Key name' /></td>" +
            "<td><input type='text' placeholder='Key value' id='txtkeyvalue" + Counter + "' class='form-control sortorder' /></td>" +
            "<td><input type='text' placeholder='Sort order' id='txtsortorder" + Counter + "' class='form-control sortorder' value='" + SerialNo + "' /></td>" +
            "<td><select id='ddlkeycontrol" + Counter + "' class='form-control'><option value='0'>Select control type</option><option value='text'>text</option><option value='multitext'>multitext</option><option value='select'>select</option><option value='checkbox'>checkbox</option><option value='radio'>radio</option><option value='file'>file</option></select></td>" +
            "<td><input type='text' placeholder='Key attr' id='txtkeyattr" + Counter + "' class='form-control' /></td>" +
            "<td><a id='btnRemoveRowGroupSettingMaster" + Counter + "' class='btn btn-outline-danger btn-sm btnRemoveRowGroupSettingMaster'><i class='zmdi zmdi-delete'></i>&nbsp;</a></td></tr>";
        $('.tbodyGroupSettingMaster').append(NewRow);
        ns_Group_Setting.Get_Parent_Group_Setting_Master(PreviousValue);
        $('#txtkeyname' + Counter).val($('#txtkeyname' + PreviousValue).val());
        $('#txtkeyvalue' + Counter).val($('#txtkeyvalue' + PreviousValue).val());
        $('#ddlkeycontrol' + Counter).val($('#ddlkeycontrol' + PreviousValue).val());
        $('#txtkeyattr' + Counter).val($('#txtkeyattr' + PreviousValue).val());
        $('.tbodyGroupSettingMaster').find('tr').each(function (j) {
            var firsttd = $(this).find('td')[0];
            var $firstObj = $(firsttd);
            $firstObj.text(j + 1);
        });
    },

    Get_Parent_Group_Setting_Master: function (PreviousValue) {
        ns_ajax.get(
            '/MasterSettings/GetParent',
            '',
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    StrVal = '<option value="0">Select group</option>';
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.group_id + '>' + value.group_name + '</option>'
                    });
                    $('#ddlgroup' + Counter).html(StrVal);
                    if ($('.tbodyGroupSettingMaster tr').length > 1) {
                        $('#ddlgroup' + Counter).val($('#ddlgroup' + PreviousValue).val());
                        ns_Group_Setting.Get_Sub_Group($('#ddlgroup' + Counter).val(), PreviousValue);
                    }
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    Get_Sub_Group: function (group_id, PreviousValue) {
        var Param = { group_id: group_id };
        ns_ajax.get(
            '/MasterSettings/GetSubGroup',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '';
                    StrVal = '<option value="0">Select sub group</option>';
                    $.each(obj, function (key, value) {
                        StrVal += '<option value=' + value.group_parent_id + '>' + value.group_name + '</option>'
                    });
                    $('#ddlsubgroup' + Counter).html(StrVal);
                    if ($('#btnGroupSettingMasterAddRow').attr('data-id') > 0)
                        $('#ddlsubgroup0').val(PreviousValue);
                    if ($('.tbodyGroupSettingMaster tr').length > 1)
                        $('#ddlsubgroup' + Counter).val($('#ddlsubgroup' + PreviousValue).val());
                }
                else {
                    // ShowAlertMessage("Message", response, "A");
                    $('#ddlsubgroup' + Counter).html('<option value="0">Select sub group</option>');
                }
            });
    },

    Get_Group_Setting_master: function () {
        var groupname = $("#txtSearchGroupSetting").val();
        var group_id = $("#ddlsearchgroup").val();
        var Param = { group_id: group_id, group_name: groupname };
        ns_ajax.get(
            '/MasterSettings/GetAllGroupSettingMaster',
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var StrVal = '', KeyValue = '';
                    $.each(obj, function (key, value) {
                        lastrownum = value.ROWNUMBER;
                        KeyValue = value.key_value;
                        if (KeyValue == 0)
                            KeyValue = 'False';
                        else if (KeyValue == 1)
                            KeyValue = 'True';

                        var strSave = '<a id ="btnEditKeyValue-' + value.setting_id + '" class="btn btn-outline-primary btn-sm btnEditKeyValue"  title="Edit Key Value"><i class="zmdi zmdi-edit">&nbsp;</i></a>';
                        var strEdit = '<a id ="EditGroupSettingMaster-' + value.setting_id + '" class="btn btn-outline-primary btn-sm EditGroupSettingMaster" title="Edit"  data-toggle="modal" data-target="#ModalSettingMaster"><i class="zmdi zmdi-edit">&nbsp;</i></a>';
                        var strCancel = '<a  id ="btnCancelUpdateKeyValue-' + value.setting_id + '" title="Cancel" class="btn btn-danger btn-sm btnCancelUpdateKeyValue" style="display:none" ><i class="zmdi zmdi-close">&nbsp;</i></a>';
                        StrVal += '<tr>' +
                            '<td class="text-center">' + value.ROWNUMBER + '</td>' +
                            '<td class="text-center">' + value.group_name + '</td>' +
                            '<td class="text-center">' + value.sub_group + '</td>' +
                            '<td class="text-center done">' + value.key_name + '</td>' +
                            '<td id ="name-' + value.setting_id + '" class="text-center" contenteditable="false">' + '<span id="spnkeyval" class="font-bold col-blue">' + KeyValue + '</span>' + "<Select id='ddlkeyvalue-" + value.setting_id + "' style='display:none;' class='form-control w65 ddlkeyvalue' data-keyattr=" + value.key_attr + "></Select>" + '</td>' +
                            '<td class="text-center">' + strSave + ' ' + strCancel + '</td>' +
                            '<td class="text-center">' + value.sort_order + '</td>' +
                            '<td id="tdControltype-' + value.setting_id + '" class="text-center">' + value.key_control_type + '</td>' +
                            //'<td class="text-center">' + value.create_date + '</td>' +
                            //'<td class="text-center">' + value.update_date + '</td>' +

                            '<td class="text-center">' + strEdit + '</td>' +
                            '</tr>';
                    });
                    $('.tbodyGroupSettingMasterList').html(StrVal);
                }
                else
                    $('.tbodyGroupSettingMasterList').html("");
            });
    },

    Clear: function () {
        Counter = 0;
        $('#btnGroupSettingMasterAddRow').attr('data-id', '0');
        $(".tbodyGroupSettingMaster").find("tr:gt(0)").remove();
        $("#ddlgroup" + Counter).val('0');
        $("#ddlsubgroup" + Counter).val('0');
        $("#txtkeyname" + Counter).val('');
        $("#txtkeyvalue" + Counter).val('');
        $("#txtsortorder" + Counter).val('1');
        $("#ddlkeycontrol" + Counter).val('0');
        $("#txtkeyattr" + Counter).val('');
        $("#spnGroupLastUpdateDate").val('');
        $('#divGroupUpdateDate').hide();
    },

    UpdateKeyValue: function (id) {
        var obj = {}, keyvalue = '', control = '';
        control = $('#tdControltype-' + id).html();
        if (control == 'select') {
            keyvalue = $('#ddlkeyvalue-' + id + '').val();
            if (keyvalue == '') {
                $('#ddlkeyvalue-' + id + '').focus();
                ShowAlertMessage("Message", "Select value", "A");
                return false;
            }
        }
        else {
            keyvalue = $('#name-' + id + '').text();
            if (keyvalue == '') {
                $('#name-' + id + '').focus();
                ShowAlertMessage("Message", "Enter key value ", "A");
                return false;
            }
        }
        obj.setting_id = id;
        obj.key_value = keyvalue;
        ns_ajax.post(
            '/MasterSettings/UpdateKeyValue',
            obj,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Key value save successfully.", "C");
                    ns_Group_Setting.Get_Group_Setting_master();
                    SingleRowEditcounter = 1;
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

    getGroups: function () {
        ns_Group_Setting.Get_Group_Setting();
        ns_Group_Setting.Get_Parent();
    },
}

ns_gris_setting = {
    get_grid_field: function () {
        var objRecord; var param = '';
        JobType = $('.ul-main-tabs li .active').attr('data-job-type');
        SearchWizardId = readCookie('wzid');
        var ReqUri = '';
        var datakey = readCookie('datakey');
        if (datakey == 'WZBOOKEDJOBEMPLOYER') {
            ReqUri = urls.jobsApi + 'get';
            param = { SearchParam: SearchParam, JobType: JobType, JobStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        else if (datakey == 'WZJOBBOARDEMPLOYER') {
            ReqUri = urls.jobsApi + 'get';
            param = { SearchParam: SearchParam, JobType: JobType, JobStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        else if (datakey == 'WZINVOICEEMPLOYER') {
            ReqUri = urls.accountsApi + 'get';
            param = { SearchParam: SearchParam, InvType: 'I-L', JobStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        else if (datakey == 'WZDUEINVOICEEMPLOYER') {
            ReqUri = urls.accountsApi + 'get';
            param = { SearchParam: SearchParam, InvType: 'I-L', JobStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        else if (datakey == 'WZCANDIDATE') {
            ReqUri = '/Candidate/GetCandidate';
            param = { SearchParam: SearchParam, CndType: 'CND-CND', AccountStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        else if (datakey == 'WZEMPLOYER') {
            ReqUri = '/Employer/GetEmployers';
            param = { SearchParam: SearchParam, EmpType: 'EMP-EMP', AccountStatus: JobStatus, PageSize: PageSize, PageNumber: PageNumber, Wizard: SearchWizardId };
        }
        ns_ajax.get(
            ReqUri,
            param,
            function (response) {
                ns_gris_setting.FilterColumns(response);
            });

    },
    FilterColumns: function (response) {
        if (response.split('|')[0] == 'OK') {
            var obj = jQuery.parseJSON(response.split('|')[1]);
            var objRecords;
            if (obj.SeachResult.length > 0)
                objRecords = obj;
            else
                objRecords = "No Records";
            var StrCol = '', Strth = '', Strfilter = '';
            StrCol += '<li class="header line-hgt12 lststl"><span class="col-grey">Customize Columns</span><br></li>';
            StrCol += '<li class="list-group-item"><div id="grpChkBox" class="custom-checkbox">';
            var StrColFooter = '<li class="list-group-item">' +
                '<div class="form-group mb-0">' +
                '<a class="btn btn-outline col-blue font-14 mr-1 btn-sm locationbtn BtnWizardSearch"><i class="fa fa-floppy-o">&nbsp;</i>Save Above Setting</a>' +
                '</div></li>' +
                '<li class="list-group-item"><b>Saved setting(s) list:-</b></li>' +
                '<li class="list-group-item">' +
                '<div class="custom-checkbox">' +
                '<p><label><input type="checkbox" name="inclta" />Show 5 columns</label></p>' +
                '<p><label><input type="checkbox" name="inclta" />Show 9 columns</label></p>' +
                '</div>' +
                '</li>';

            Strth += '<tr class="">';
            Strth += '<th style="width:30px;"><div class="checkbox"><input id="chkAllMsg" class="chkAllMsg" type="checkbox"><label style="padding-left: 0px !important" for="chkAllMsg">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;S.N</label></div></th>';
            //Strth += '<th>SrNo.</th>';

            //Filter
            Strfilter += '<li class="header lststl">Customize Filter</li><li>';
            var StrfilterFooter = '<li class="list-group-item">' +
                '<div class="form-group mb-0">' +
                '<a class="btn btn-outline col-blue font-14 mr-1 btn-sm "><i class="fa fa-floppy-o">&nbsp;</i>Save Filter</a>' +
                '</div>' +
                '</li>' +
                '<li class="list-group-item"><b>Saved filter list:-</b></li>' +
                '<li class="list-group-item">' +
                '<div class="custom-checkbox">' +
                '<p><label>Filter-1</label></p>' +
                '<p><label>Filter-1</label></p>' +
                '</div>' +
                '</li>';

            $.each(obj.Filters, function (key, value) {
                var fieldname = value.ws_field_name;
                var filterfield = (value.ws_filter_field == null ? '' : value.ws_filter_field);
                var fieldlabel = value.ws_field_label;
                var fieldplaceholder = value.ws_place_holder;
                var fieldControlActivity = value.ws_control_activity;
                //Column Controler
                var chkChecked = value.ws_default == '1' ? 'checked="checked"' : '';

                StrCol += '<p><label><input type="checkbox" name="' + fieldname + '" ' + chkChecked + ' /> ' + fieldlabel + '</label></p>';

                //Table Column
                var clsWith = fieldname == 'job_full_location' ? 'w__250' : '';
                Strth += '<th class="' + fieldname + ' ' + clsWith + '" >' + fieldlabel + '</th>';

                //Filter 
                if (value.ws_filter_status == 1) {
                    if (fieldname !== 'employer')
                        Strfilter += '<a id="lbl' + fieldname + '" data-filterfield="' + filterfield + '" data-fieldtype="' + value.ws_field_type + '"  data-fieldlabel="' + fieldlabel + '" data-fieldName="' + fieldname + '" data-fieldplaceholder="' + fieldplaceholder + '" data-fieldControlActivity="' + fieldControlActivity + '" href="javascript:void(0);" class="dropdown-toggle clsfilterbtn" data-toggle="dropdown" role="button">' + fieldlabel + '</a>';
                }
            });
            $('#ulcolumn').html(StrCol + '</div></li>' + StrColFooter);
            $('.tblColumn').html(Strth + '</tr>');

            $('#ulGridFilter').html(Strfilter + '</li>' + StrfilterFooter);
            objRecord = ns_gris_setting.getGridRecords(objRecords);
        }
        //alert('Hi ! ' + JSON.stringify(objRecord));
        //return objRecord;

        $(function () {
            var $chk = $("#grpChkBox input:checkbox");
            var $tbl = $("#JobsTable");
            $chk.prop('checked', true);
            $chk.click(function () {
                var colToHide = $tbl.find("." + $(this).attr("name"));
                $(colToHide).toggle();
            });
        });
        $('.clsfilterbtn').click(function (event) {
            ns_gris_setting.generate_control($(this).attr('data-fieldtype'), $(this).attr('data-fieldName'), $(this).attr('data-filterfield'), $(this).attr('data-fieldlabel'), $(this).attr('data-fieldplaceholder'), $(this).attr('data-fieldControlActivity'));// 
            event.stopPropagation();
            $(".filter1").slideToggle("fast");
        });
        $(".filter1").on("click", function (event) {
            event.stopPropagation();
        });
        $(document).on("change", ".chkAllMsg", function () {
            $(".tblRecods input:checkbox").prop('checked', $(this).prop("checked"));
            if ($(this).prop("checked") == true) {
                var datakey = readCookie('datakey');
                if (datakey == 'WZJOBBOARDEMPLOYER') {
                    if (JobStatus == 'offline') {
                        $('#clsOfflineLive').attr('data-action', 'live');
                        $('#clsOfflineLive').html('<i class="zmdi zmdi-case-check col-green">&nbsp;</i>Make LIVE');
                        $('#clsOfflineLive').show();
                    }
                    else if (JobStatus == 'live') {
                        $('#clsOfflineLive').attr('data-action', 'offline');
                        $('#clsOfflineLive').html('<i class="zmdi zmdi-case-check col-red">&nbsp;</i>Make OFFLINE');
                        $('#clsOfflineLive').show();
                    }
                    else {
                        $('#clsOfflineLive').hide();
                    }
                }
            }
            else {
                $('#clsOfflineLive').hide();
            }

        });
        $(document).on("change", ".chkgrdJob", function () {
            var checkedNum = $('input[class="chkgrdJob"]:checked').length;
            if (checkedNum > 0) {
                var datakey = readCookie('datakey');
                if (datakey == 'WZJOBBOARDEMPLOYER') {
                    if (JobStatus == 'offline') {
                        $('#clsOfflineLive').attr('data-action', 'live');
                        $('#clsOfflineLive').html('<i class="zmdi zmdi-case-check col-green">&nbsp;</i>MAKE LIVE');
                        $('#clsOfflineLive').show();
                    }
                    else if (JobStatus == 'live') {
                        $('#clsOfflineLive').attr('data-action', 'offline');
                        $('#clsOfflineLive').html('<i class="zmdi zmdi-case-check col-red">&nbsp;</i>MAKE OFFLINE');
                        $('#clsOfflineLive').show();
                    }
                    else {
                        $('#clsOfflineLive').hide();
                    }
                }
            }
            else {
                $('#clsOfflineLive').hide();
            }
        });
    },
    generate_control: function (ControlType, fieldName, filterfield, fieldlabel, placeholder, controlActivity) {
        $('.controlfilter').html('');
        var autoAttr = '', cssClass = '', values = '';
        var activity = controlActivity.split('#')[0];
        var type = controlActivity.split('#')[1];

        if (activity == 'autocomplete') {
            cssClass = 'ui-autocomplete-input filterAutocomplete';
            autoAttr = 'autocomplete="off" data-item-id=""';
        }
        if (activity == 'filldropdown') {
            if (type == 'cnd')
                cssClass = 'clsddlcnd';
            if (type == 'jobtype')
                cssClass = 'clsddljobtype';
            if (type == 'jobtimesheet')
                cssClass = 'clsddljobtimesheet';
        }
        if (activity == 'datepicker')
            cssClass = 'daterange';


        var control = '<input id="txt' + fieldName + '" class="form-control ' + cssClass + '" ' + autoAttr + ' placeholder="' + placeholder + '">';
        if (ControlType == 'select')
            control = '<select id="txt' + fieldName + '"  class="form-control ' + cssClass + '"><option value="0">Select an option...</option></select>';

        var popover = '<div class="popover-header"> ' + fieldlabel + ' <a href="#" class="close clsCancel" data-dismiss="alert" aria-label="Close">&times;</a></div>' +
            '<div class="popover-body p-2"><div class="form-group"><div class="input-group"><div class="input-group-prepend">' +
            '</div>' + control + '</div> </div>' +
            '<div class="form-group">' +
            '<a id="tag' + fieldName + '" data-value="' + fieldlabel + '" data-fieldlabel="' + fieldlabel + '" data-fieldName="' + fieldName + '" data-filterfield="' + filterfield + '"  class="btn btn-primary font-11 mr-1 btn-sm clsApply">Apply</a>' +
            '<a class="btn btn-outline-danger font-11 btn-sm clsCancel" data-dismiss="alert" aria-label="Close">Cancel</a>' +
            '</div></div>';
        $('.controlfilter').html(popover);

        $('.clsApply').on("click", function () {
            ns_gris_setting.addSearch_tag(activity, $(this).attr('data-fieldName'), $(this).attr('data-filterfield'), $(this).attr('data-fieldlabel'));
            ns_gris_setting.get_grid_field();
        });

        $('.clsCancel').on("click", function () {
            $(".filter1").hide();
        });

        daterange();

        fn_autocomplete('txt' + fieldName, type, 'filterAutocomplete');

        if (type == 'role')
            ns_roleMaster.getAllActiveRoles(fieldName);
        if (type == 'jobtype')
            ns_roleMaster.getJobType(fieldName);
        if (type == 'jobtimesheet')
            ns_roleMaster.getJobtimesheetStatus(fieldName);


    },
    addSearch_tag: function (activity, fieldName, filterfield, fieldlabel) {
        var ctrlValues = '', ctrlText = '';
        if (activity == 'filldropdown') {
            ctrlValues = $('#txt' + fieldName).val();
            ctrlText = $("#txt" + fieldName + " option:selected").text();// $('#txt' + fieldName).text();
        }
        else if (activity == 'autocomplete') {
            ctrlValues = $('#txt' + fieldName).attr('data-item-id');
            ctrlText = $('#txt' + fieldName).val();
        }
        else {
            ctrlValues = ctrlText = $('#txt' + fieldName).val();
        }
        if (ctrlValues == '') {
            $('#txt' + fieldName).focus();
            return false;
        }
        else {
            var searchKey = fieldlabel.split(' ').join('');
            var searchValue = ctrlValues.split(' ').join('');
            var tag = '<span id="stag' + fieldName + '" class="btn btn-primary btn-sm tm12 stag  tagjobdate"> ' + fieldlabel + ' : <b data-field="' + searchKey + '" data-field-name="' + capitalize(filterfield) + '" data-searchtagval="' + searchValue + '" data-searchtagtext="' + ctrlText + '">' + ctrlText + '</b> <a id="stagCancel' + fieldName + '" class="cls col-red clsCancelTag">x</a></span>';
            $('.searchTags').append(tag);
            //$('.searchTags').append(addnew);
            $(".filter1").hide();
        }

        ns_gris_setting.getSearchParam();
        $('.clsCancelTag').on("click", function () {
            var id = $(this).attr('id').replace('stagCancel', '');
            $('#stag' + id).remove();
            ns_gris_setting.getSearchParam();
            ns_gris_setting.get_grid_field();
        });
    },
    getSearchParam: function () {
        var param = '';
        param = 'EmpId:"0",';
        $("span.searchTags span.stag b").each(function () {
            var key = $(this).attr('data-field-name');
            var val = $(this).attr('data-searchtagval');
            var text = $(this).attr('data-searchtagtext');
            param += key + ':"' + val + '",';
        });
        param = param == '' ? param : param.slice(0, -1);
        if (param !== '') {
            param = '[{' + param + '}]';
        }
        SearchParam = param;
        //return param;
    },
    getGridRecords: function (obj) {
        var objRecords, objCounter;
        if (obj !== 'No Records') {
            objRecords = obj.SeachResult;
            objCounter = obj.TotalCount;
        }
        else {
            objRecords = obj;
            objCounter = obj;
        }
        var result;
        var datakey = readCookie('datakey');
        if (datakey == 'WZBOOKEDJOBEMPLOYER') {
            result = ns_jobs.getBookedJobs(objRecords);
            ns_jobs.TotalQty(objCounter);
        }
        else if (datakey == 'WZJOBBOARDEMPLOYER') {
            result = ns_jobs.getJobBorad(objRecords);
            ns_jobs.TotalQty(objCounter);
        }
        else if (datakey == 'WZINVOICEEMPLOYER') {
            result = ns_Accounts.getInvoices(objRecords);
            ns_Accounts.TotalQty(objCounter);
        }
        else if (datakey == 'WZDUEINVOICEEMPLOYER') {
            result = ns_Accounts.getInvoices(objRecords);
            ns_Accounts.TotalQty(objCounter);
        }

        else if (datakey == 'WZCANDIDATE') {
            result = ns_candidate.GetCandidates(objRecords);
            ns_candidate.TotalQty(objCounter);
        }
        else if (datakey == 'WZEMPLOYER') {
            result = ns_employer.GetEmployers(objRecords);
            ns_employer.TotalQty(objCounter);
        }
        return result;
    },
    getProfileForm: function () {
        $('#divProfileSection').html('');
        var param = { ProfileId: '24', ProfileType: 'cnd', SettingType: 0 };
        ns_ajax.get(
            'Employer/GetWizardForms',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var currentparent = "", previousparent = "";
                    jQuery('#divProfileSection').append('');
                    $.each(obj, function (key, value) {
                        currentparent = value.w_id;
                        if (previousparent == "" || currentparent != previousparent) {
                            var wizardHead = '<div class="wd100"><div class="bxsaddow w-lft  mt-3"><h4><i class="zmdi zmdi-info-outline"> </i> ' + value.w_name +
                                '<a class="btn btn-sm btn-primary hover" data-toggle="modal" data-target="#p_Basic_Information"><i class="zmdi zmdi-edit"></i> Edit</a>' +
                                '</h4>';
                            jQuery('#divProfileSection').append(wizardHead);
                            previousparent = value.w_id;
                        }
                        if (value.ws_field_id != value.w_id) {
                            var strField = '<p class="mb-1"><span class="wd-16px">' + value.ws_field_label + '</span><span>:</span><span id="">NA</span></p></div>';
                            jQuery('#divProfileSection').append(strField);
                        }
                    });
                }
            }
        );
    },
}

ns_Accounts = {
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == 'No Records') {
            //$('.cls-All, .cls-UNVERIFIED, .cls-UNPAID, .cls-PAID, .cls-CANCELLED, .cls-SUSPENSE').html('0');
        }
        else {
            if (obj.length == 1)
                flag = false;
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'UNPAID' || value.status == 'PAID' || value.status == 'CANCELLED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                    flag = true;
                }
            });
            if (flag) {
                $('.cls-All').html(totaljobs);
            }
        }
    },
    getInvoices: function (obj) {
        var TotalRecords = 0;
        var CndTotalTop = 0, AdminTotalTop = 0, VatTotalTop = 0, GrandTotalTop = 0, MemoTotalTop = 0, DueTotalTop = 0;
        var rows = '';
        if (obj !== 'No Records') {
            $.each(obj, function (key, value) {
                TotalRecords = value.TotalRecord;
                CndTotalTop = CndTotalTop + value.cnd_total;
                AdminTotalTop = AdminTotalTop + value.admin_total;
                VatTotalTop = VatTotalTop + value.vat_total;
                GrandTotalTop = GrandTotalTop + value.grand_total;

                MemoTotalTop = MemoTotalTop + value.memo_total;
                DueTotalTop = DueTotalTop + value.due_total;


                var Row_Number = value.RowNumber;
                var jobid = (value.job_role_ref_po.split("##")[0]);
                var jobRole = value.job_role_name;
                var timesheet_url = value.timesheet_url;
                var inv_no = value.inv_number;
                var creditmemo = value.cd_memo_number.split('#')[0];
                var debitmemo = value.cd_memo_number.split('#')[1];
                var toTime = value.job_start_datetime2.split(' ')[1];
                var invStatus = (value.job_role_ref_po.split('##')[4]);
                var inv_id = (value.inv_number.split('#')[2]);
                var jobtype = 'job-type="' + (value.job_type_title).split("-")[0] + '"';
                rows += '<tr>';
                $.each(value, function (i, item) {
                    var field = i;
                    var val = value[i] == null ? '' : value[i];
                    if (field == 'TotalRecord') { }
                    else if (field == 'RowNumber') {
                        rows += '<th class="' + field + '">' +
                            //SrNo.
                            '<div class="checkbox"><input id="chkAllMsg' + jobid + '" type="checkbox" class="chkgrdJob"><label for="chkAllMsg' + jobid + '">' + Row_Number + '.</label></div>' +
                            //Action Buttons  //viewtimesheet viewjobfiles  
                            '<span class="table-row-btn">';
                        var clsAction = 'class="btn btn-outline-primary btn-sm mr-1 btn-inv-action"';
                        //rows += '<a ' + clsAction + ' data-action="audit" data-id="' + jobid + '" title="Audit the job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-spellcheck col-green">&nbsp;</i>Audit</a>';
                        //rows += '<a ' + clsAction + ' data-action="verify" data-id="' + jobid + '" title="Verify" data-toggle="modal" data-target="#verifyInvoices"><i class="zmdi zmdi-assignment col-yello">&nbsp;</i>Verify</a>';
                        //rows += '<a ' + clsAction + ' data-action="cancel" data-id="' + jobid + '" title="Cancel" data-toggle="modal" data-target="#verifyInvoices"><i class="zmdi zmdi-close col-red">&nbsp;</i>Cancel</a>';
                        //rows += '<a ' + clsAction + ' data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#viewtimesheet"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';

                        // rows += (timesheet_url == '' ? '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="timesheet" data-id="' + jobid + '" title="Upload Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-upload col-red">&nbsp;</i>TS</a>' +
                        //             '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="computer-generated-timesheet" data-id="' + jobid + '" title="Computer Generated Timesheet" data-toggle="modal" data-target="#ModalSysGenerateTimesheet"><i class="zmdi zmdi-devices"></i></a>'

                        //: '<a class="btn btn-outline-primary btn-sm mr-1 btnViewTimesheet" data-file-id="' + jobid + '" data-file-name="' + timesheet_url + '" data-action="timesheet" title="View Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-green">&nbsp;</i>TS</a>');


                        rows += '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';
                        rows += '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" data-action="trackhistory" data-id="' + jobid + '" title="Track History"  data-toggle="modal" data-target="#tracking">T</a>';

                        rows += '<a ' + clsAction + ' data-action="view" data-inv_no="' + inv_no + '" data-id="' + jobid + '" data-inv-id="' + inv_id + '" title="View" data-toggle="modal" data-target="#view-invoice"><i class="zmdi zmdi-search col-teal">&nbsp;</i>View</a>';
                        rows += '</span>';
                        '</th>';
                    }
                    else if (field == 'job_type_title') {
                        rows += '<th class="fixed-side ' + field + '">' +
                            '<span>' +
                            '<span class="col-grey"><b class="col-blue">' + (val.split('-')[1]) + '</b></span>' +
                            '<span>' +
                            '</th>';
                    }
                    else if (field == 'audit_detail') {
                        rows += '<th class="' + field + '">' +
                            ((val.split('#')[0]) == '1' ?
                                '<span style="color:#00b658!important"><i class="zmdi zmdi-search-replace"></i> Audited</span><br><span class="col-blue-grey"><i class="zmdi zmdi-calendar"></i> ' + (val.split('#')[1]) + '</span>'
                                : '<span style="color:#E74C3C!important"><i class="zmdi zmdi-search-replace"></i> No Audit</span>') +

                            '</th>';
                    }
                    else if (field == 'job_role_ref_po') {
                        rows += '<th class="fixed-side ' + field + '">' +
                            '<span><b>' +
                            //(val.split('##')[0]) + ' /<span class="col-green"> ' + (val.split('##')[1]) + '</span></b>' +
                            '<br><span class="col-grey">Ref.No: ' + (val.split('##')[2]) + '</span>' +
                            '<br><span class="col-grey">P.O: ' + (val.split('##')[3]) + '</span>' +
                            '<br/><span>' +
                            //(invStatus == 'UNVERIFIED' ? '<a class="badge badge-primary btn-inv-action" data-action="verify" data-inv_no="' + inv_no + '" data-id="' + jobid + '" data-inv-id="' + inv_id + '"  title="Verify Invoice" data-toggle="modal" data-target="#view-invoice">Verify</a>&nbsp;' : '') +
                            //(invStatus == 'CANCELLED' ? '<b class="col-red"><i class="zmdi zmdi-close"></i>Cancelled</b>' : '<a  class="badge badge-danger btn-inv-action" data-action="cancel" data-inv_no="' + inv_no + '" data-id="' + jobid + '" data-inv-id="' + inv_id + '"  title="Cancel / Unverify Invoice" data-toggle="modal" data-target="#view-invoice"><i class="zmdi zmdi-close"></i></a>') +
                            //(invStatus !== 'UNVERIFIED' && invStatus !== 'CANCELLED' && (creditmemo == '0' || debitmemo == '0') ? '&nbsp;<a  class="badge badge-info btn-inv-action " data-action="memo" data-inv_no="' + inv_no + '" data-id="' + jobid + '" data-inv-ref-no="' + val.split('##')[1] + '" data-inv-id="' + inv_id + '"  title="Create Credit/Debit Memo" data-toggle="modal" data-target="#createnewmemo">Memo</a>' : '') +

                            '</span>' +
                            '</span>' +
                            '</th>';
                    }
                    else if (field == 'inv_number') {
                        rows += '<th class="fixed-side ' + field + '">' +
                            '<span>' +
                            '<br><span class="col-grey"><b class="col-blue">' + (val.split('#')[0]) + ' ' + (creditmemo == '0' ? '' : ' / MEMO-' + creditmemo) + '</b></span>' +
                            '<br><span class="col-grey"><b class="col-green">' + (val.split('#')[1]) + ' ' + (debitmemo == '0' ? '' : ' / MEMO-' + debitmemo) + '</b></span>' +
                            '<span>' +
                            '</th>';
                    }
                    else if (field == 'job_datetime') {
                        rows += '<td class="' + field + '">' +
                            '<span class="col-blue-grey">' +
                            '<i class="zmdi zmdi-calendar">&nbsp;</i><b>' + (val.split(' ')[0]) + '</b>' +
                            '<br><small class="col-grey">' +
                            '<i class="zmdi zmdi-time">&nbsp;</i><b>' + (val.split(' ')[1]) + '</b>' +
                            '<br><i class="zmdi zmdi-time-interval"></i><b> ' + (val.split(' ')[2]) + ' hr(s)</b>' +
                            '</small>' +
                            '</span>' +
                            '</td>';
                    }
                    else if (field == 'actual_datetime') {
                        rows += '<td class="' + field + '">' +
                            '<span class="col-blue-grey">' +
                            '<i class="zmdi zmdi-calendar">&nbsp;</i>' +
                            '<b>' + (val.split(' ')[0]) + '</b>' +
                            '<br>' +
                            '<small class="col-grey">' +
                            '<i class="zmdi zmdi-time">&nbsp;</i>' +
                            '<b>' + (val.split(' ')[1]) + '</b>' +
                            '<br>' +
                            '<i class="zmdi zmdi-time-interval"></i>' +
                            '<b> ' + (val.split(' ')[2]) + ' hr(s) (Break: ' + (val.split(" ")[3]) + ' Min) </b>' +
                            '</small>' +
                            '</span>' +
                            '</td>';
                    }

                    else if (field == 'job_start_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime24') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-alarm"></i></span></div>' +
                            '<span class="form-control w130">' + (val.split(' ')[1]) + ' - ' + toTime + '</span>' +

                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_duration_hr_day') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey font-17">' + (val.split('#')[1] == 'L' ? val.split('#')[0] + ' hr(s)' : val.split('#')[0] + ' day(s)') + '</span>' +
                            '</td>';
                    }
                    else if (field == 'from_datetime_actual2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'to_datetime_actual24') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'to_datetime_actual2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-alarm"></i></span></div>' +
                            '<span class="form-control w130">' + (val.split(' ')[1]) + ' - ' + toTime + '</span>' +

                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'break_in_min') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-timer-off"></i></span></div>' +
                            '<span class="form-control w50">' + val + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_duration_hr_day_actual') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey font-17">' + (val.split('#')[1] == 'L' ? val.split('#')[0] + ' hr(s)' : val.split('#')[0] + ' day(s)') + '</span>' +
                            '</td>';
                    }
                    else if (field == 'cnd_no_of_home_visit') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey">' + (val == 0 ? 'No' : '<b class="col-green">Yes</b> <br>' + val + ' Time(s)') + ' </span>' +
                            '</td>';
                    }
                    else if (field == 'cnd_home_visit_amount') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-black bold"><span class="col-grey font-18">+</span> £' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }

                    else if (field == 'candidate_detail') {
                        rows += '<td id="cnd-' + jobid + '" class="' + field + ' w__250m"><i class="zmdi zmdi-account">&nbsp;</i><span id="cnd-' + jobid + '" data-status="cnd" class="col-brown pointer  clsshowCndDetails" data-value="' + val + '">' + (val.split('#')[0]) + '</span></td>';
                    }
                    else if (field == 'job_full_location') {
                        rows += '<td id="ltd-' + jobid + '" class="' + field + ' w__250m"><i class="zmdi zmdi-pin-drop">&nbsp;</i><span id="location-' + jobid + '" data-status="location" class="col-brown pointer clsshow clsshowfulladdress" data-value="' + val + '">' + (val.split('##')[0]) + '</span></td>';
                    }
                    else if (field == 'job_rate_emp') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-blue bold font-16">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_rate_cnd') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span style="color:#019496">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'cnd_total') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-blue bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            // '<a data-toggle="modal" data-target="#modaleditinvoice" class="ml-2 col-blue"><i class="zmdi zmdi-edit"></i></a>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'admin_total') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-black bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'grand_total') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-blue bold font-18">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'memo_total') {
                        rows += '<td class="text-center ' + field + '">' +
                            (
                                parseFloat(val) < 0 ? '<span id="spanMemoTotalAmount" data-val="' + parseFloat(val).toFixed(2) + '" data-memo_cnd_total="' + parseFloat(0).toFixed(2) + '" data-memo_admin_total="' + parseFloat(0).toFixed(2) + '" data-memo_vat_total="' + parseFloat(0).toFixed(2) + '" style="color:#f00">' + parseFloat(val).toFixed(2) + '</span>' :
                                    parseFloat(val) > 0 ? '<span id="spanMemoTotalAmount" data-val="' + parseFloat(val).toFixed(2) + '" data-memo_cnd_total="' + parseFloat(0).toFixed(2) + '" data-memo_admin_total="' + parseFloat(0).toFixed(2) + '" data-memo_vat_total="' + parseFloat(0).toFixed(2) + '" style="color:#019496">' + parseFloat(val).toFixed(2) + '</span>'
                                        : '<span id="spanMemoTotalAmount" data-val="' + parseFloat(val).toFixed(2) + '" data-memo_cnd_total="' + parseFloat(0).toFixed(2) + '" data-memo_admin_total="' + parseFloat(0).toFixed(2) + '" data-memo_vat_total="' + parseFloat(0).toFixed(2) + '" style="color:#ccc">' + parseFloat(val).toFixed(2) + '</span>'
                            )

                        '</td>';
                    }
                    else if (field == 'due_total') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span id="spanDueTotalAmount" class="col-green bold font-18" data-val="' + parseFloat(val).toFixed(2) + '">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'paid_status_cnd') {
                        rows += '<td class="' + field + '">' +
                            (val == '1' ?
                                '<span class="col-green"><i class="zmdi zmdi-check bold">&nbsp;</i>Paid</span><br/><small class="col-grey"><i class="zmdi zmdi-calendar"> </i> 30/01/2019</small>'
                                : '<span class="badge badge-warning">Pending</span>')
                        '</td>';
                    }
                    else if (field == 'paid_status_emp') {
                        rows += '<td class="' + field + '">' +
                            (val == '1' ?
                                '<span class="col-green"><i class="zmdi zmdi-check bold">&nbsp;</i>Recieved</span><br/><small class="col-grey"><i class="zmdi zmdi-calendar"> </i> 30/01/2019</small>'
                                : '<span class="badge badge-warning">Pending</span>')
                        '</td>';
                    }
                    else if (field == 'job_admin_fees') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-info bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'total_cost') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="text-green bold font-18">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'vat_amount') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }

                    else if (field == 'timesheet_url') {
                        rows += '<td class="' + field + '">' +
                            (val == '' ? '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="timesheet" data-id="' + jobid + '" title="Upload Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-upload col-red">&nbsp;</i>TS</a>' +
                                '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="computer-generated-timesheet" data-id="' + jobid + '" title="Computer Generated Timesheet" data-toggle="modal" data-target="#ModalSysGenerateTimesheet"><i class="zmdi zmdi-devices"></i></a>'

                                : '<a class="btn btn-outline-primary btn-sm mr-1 btnViewTimesheet" data-file-id="' + jobid + '" data-file-name="' + timesheet_url + '" data-action="timesheet" title="View Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-green">&nbsp;</i>TS</a>') +

                            '</td>';
                    }
                    else if (field == 'cd_memo_number') {
                        rows += '<th class="fixed-side ' + field + '">' +
                            '<span>' +
                            (val.split('#')[0] == '0' ? 'C.Memo: <span class="col-grey"><b class="col-blue">' + (val.split('#')[0]) + '</b></span>' : '') +
                            (val.split('#')[1] == '0' ? '<br>D.Memo: <span class="col-grey"><b class="col-green">' + (val.split('#')[1]) + '</b></span>' : '') +
                            '<span>' +
                            '</th>';
                    }
                    else if (field == 'org_alias_name_emp_cndtype') {
                        rows += '<td class="' + field + '">' +
                            '<span><b>' + (val.split("##")[0]) + '<br><span class="col-blue">' + (val.split("##")[1]) + '</span></b></span>' +
                            '</td>';
                    }

                    //else if (field == 'job_timesheet_status') {
                    //    rows += '<td class="' + field + '">' +
                    //                '<a data-toggle="modal" data-target="#menual" class="mr-1" title="Manual Timesheet"><i class="zmdi zmdi-file-text"></i></a>' +
                    //                '<a data-toggle="modal" data-target="#generate" class="mb-1" title="System Generate Timesheet"><i class="zmdi zmdi-devices"></i></a>' +
                    //                '<br><small class="col-grey"><i class="zmdi zmdi-calendar"> </i> 30/01/2019</small>' +
                    //              '</td>';
                    //}
                    else {
                        rows += '<td class="' + field + '">' +
                            '<span>' + val + '</span>' +
                            '</td>';
                    }

                });
                rows += '</tr>';
            });
        }
        else {
            rows = '<td colspan="5" style="height:100px;color:lightcoral; font-size:16px">' + obj + '</td>';
        }
        result = ns_Paging._Object(rows, TotalRecords);
        $('.tblRecods').html(rows);
        $('#spanCndTotalTop').html('£' + parseFloat(CndTotalTop).toFixed(2));
        $('#spanAdminTotalTop').html('£' + parseFloat(AdminTotalTop).toFixed(2));
        $('#spanVatTotalTop').html('£' + parseFloat(VatTotalTop).toFixed(2));
        $('#spanGrandTotalTop').html('£' + parseFloat(GrandTotalTop).toFixed(2));


        $('#spanMemoTotalTop').html(parseFloat(MemoTotalTop).toFixed(2));
        $('.spanMemoTotalTop').css('color', (parseFloat(MemoTotalTop) < 0 ? '#f00' : parseFloat(MemoTotalTop) > 0 ? '#019496' : '#ccc'));
        $('#spanDueTotalTop').html('£' + parseFloat(DueTotalTop).toFixed(2));

        DatePairFuction();
        return result;
        fn_autocomplete('txtcandidatename', 'cnd', 'txtcandidatename');
    },

    CombineInvoiceDetail: function (invNo, action) {
        var Param = { invoice_no: invNo, action: 'INV' };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        var inv_status = value.inv_status;
                        var vatRule = value.vat_rule;
                        if (vatRule == 'VOT') {
                            $('#thVatHead').html('');
                            $('#trVatAmount').show();
                            $('#spanInvVatAmt').html('£' + value.vat_amount.toFixed(2));
                        }
                        else if (vatRule == 'VOM') {
                            $('#thVatHead').html('VAT');
                            $('#trVatAmount').hide();
                            $('#spanInvVatAmt').html('£0.00');
                        }

                        if (action == 'verify' && inv_status == 'UNVERIFIED') {
                            $('#divcommentSec').html('Comments');
                            $('#txt_po_number').show();
                            $('#btnInvApproved').show();

                            $('#btnInvDispproved').hide();
                            $('#btnInvCancel').hide();
                            $('#btnInvDownload').hide();
                            $('#btnInvPrint').hide();
                        }
                        else if (action == 'cancel' && (inv_status == 'UNVERIFIED' || inv_status == 'UNPAID' || inv_status == 'SUSPENSE')) {
                            $('#divcommentSec').html('Reason<b class="col-red">*</b>');
                            $('#txt_po_number').hide();
                            $('#btnInvApproved').hide();

                            if (inv_status == 'UNVERIFIED')
                                $('#btnInvDispproved').hide();
                            else
                                $('#btnInvDispproved').show();

                            $('#btnInvCancel').show();
                            $('#btnInvDownload').hide();
                            $('#btnInvPrint').hide();
                        }
                        else {
                            $('#divcommentSec').html('Comments');
                            $('#txt_po_number').hide();
                            $('#btnInvApproved').hide();
                            $('#btnInvDispproved').hide();
                            $('#btnInvCancel').hide();
                            $('#btnInvDownload').show();
                            $('#btnInvPrint').show();
                        }
                        if (inv_status == 'CANCELLED') {
                            $('#spanCancellationSection').show();
                            $('#panCancellationReason').html(value.cancellation_comments);
                            $('#spanCancelationDate').html(value.cancellation_date12);
                            $('#spanCancelationBy').html(value.cancelled_by_user_name);
                        }
                        else {
                            $('#spanCancellationSection').hide();
                            $('#panCancellationReason').html('');
                            $('#spanCancelationDate').html('');
                        }
                        $('#spanInvTitle').html(value.job_type_title.split("-")[1]);
                        $('#spanInvTitle').attr('data-job-type', value.job_type_title.split("-")[0]);
                        $('.btn-inv-edit-details').attr('data-id', value.job_id);
                        $('.btn-inv-edit-details').attr('data-emp-org', value.emp_id + '-' + value.org_id);

                        //TO
                        $('#spanToEmpAddress').html('<b>' + value.emp_name + '</b><br>' + value.emp_full_aadress + '<br /><b>Phone No : </b>' + value.emp_phone + '<br /><b>Email ID : </b>' + value.emp_email + '');
                        $('#divToEdit').hide();
                        $('#divToDetails').show();
                        //From
                        $('#spanFromOrgAddress').html('<b>' + value.org_name + '</b><br>' + value.org_address + '<br /><b>Phone No : </b>' + value.org_phone + '<br /><b>Fax : </b>' + value.org_fax + '<br /><b>Email ID : </b>' + value.org_email + '');
                        $('#divFromEdit').hide();
                        $('#divFromDetails').show();

                        //Inv Number
                        $('#spanInvRefNumber').html(value.inv_ref_no);
                        $('#spanInvDate').html(value.inv_date12);
                        $('#txtInvoiceDate').val(value.inv_date12.substring(0, 10));

                        $('#spanInvPaymentTerms').html(value.inv_terms + ' day(s)');
                        $('#ddlPaymentTerms').val(value.inv_terms);
                        $('#spaninvDueDate').html(value.inv_due_date12 == '' ? 'NA' : value.inv_due_date12);


                        $('#spanInvPONumber').html(value.puchase_ord_no == '' ? 'NA' : value.puchase_ord_no);
                        $('#txteditponumber').val(value.puchase_ord_no);

                        $('.hide_150').show(500);
                        $('.show_150').hide(0);


                        //CND & ORG Invoices
                        $('.spanInvjobFromDate').html(value.job_start_datetime2.substring(0, 10));
                        $('#spanInvOrgInv').html(value.inv_number.split("#")[0]);
                        $('#spanInvOrgInv').attr('data-inv_no', value.inv_number.split("#")[0]);
                        $('#spanInvCndInv').html(value.inv_number.split("#")[1]);
                        $('#spanInvCndInv').attr('data-inv_no', value.inv_number.split("#")[1]);
                        $('.spanInvjobLocation').html('<i class="zmdi zmdi-pin">&nbsp;</i>' + value.job_full_location.split("##")[0]);
                        $('.spanInvjobid').html(value.job_id);
                        $('.spanInvjobRole').html(value.job_role_name);
                        $('#spanInvCndName').html(value.cnd_name);
                        $('#spanInvAdmFee').html('Admin Fee');
                        //Edit Inv Section

                        $('#txtInvEditStartDate').val(value.job_start_datetime24.split(" ")[0]);
                        $('#txtInvEditStartTime').val(value.job_start_datetime24.split(" ")[1]);
                        $('#txtInvEditEndDate').val(value.job_end_datetime24.split(" ")[0]);
                        $('#txtInvEditEndTime').val(value.job_end_datetime24.split(" ")[1]);
                        $('#txtInvEditDuration').val(value.job_duration_in_hour);
                        $('#txtInvEditDuration').attr('data-duration-in-min', value.job_duration_in_min);

                        $('.spanHrDay').html(value.job_type == 'P' ? ' day(s)' : ' hr(s)');
                        $('#txtInvEditClientRate').val(value.job_rate_emp);
                        $('#txtInvEditCndRate').val(value.job_rate_cnd);
                        $('#txtInvEditAdminFee').val(value.admin_total.toFixed(2));
                        $('#txtInvEditAdminFee').attr('data-admin-fee-percent', value.job_admin_fee_in_percent);

                        $('#chkyes').prop('checked', value.job_vat_status == '1' ? true : false);
                        $('#chkyes').attr('data-vat-percent', value.job_vat_in_percent);

                        $('#spanInvVATRule').html(vatRule);
                        $('#txtInvEditVatAmt').val(value.vat_total.toFixed(2));
                        $('#txtInvEditTotalAmount').val(value.payable_amount.toFixed(2));

                        $('#txtBreakInMins').val(value.job_break_in_min);
                        $('#txtNoOfHomeVisit').val(value.cnd_no_of_home_visit);

                        $('#txtInvEditStartDateActual').val(value.from_datetime_actual24.split(" ")[0]);
                        $('#txtInvEditStartTimeActual').val(value.from_datetime_actual24.split(" ")[1]);
                        $('#txtInvEditEndDateActual').val(value.to_datetime_actual24.split(" ")[0]);
                        $('#txtInvEditEndTimeActual').val(value.to_datetime_actual24.split(" ")[1]);
                        $('#txtInvEditDurationActual').val(value.job_duration_in_hour_actual);

                        //CND Amount
                        $('#spanInvCndAmt').html('£' + value.cnd_total.toFixed(2));
                        if (vatRule == 'VOT')
                            $('#spanInvCndVatAmt').html('');
                        else if (vatRule == 'VOM' || vatRule == 'DIE')
                            $('#spanInvCndVatAmt').html('£0.00');

                        $('#spanInvCndTotalAmt').html('£' + value.cnd_total.toFixed(2));

                        //Admin Amount  
                        $('#spanInvAdminAmt').html('£' + value.admin_total.toFixed(2));
                        if (vatRule == 'VOT')
                            $('#spanInvAdminVatAmt').html('');
                        else if (vatRule == 'VOM' || vatRule == 'DIE')
                            $('#spanInvAdminVatAmt').html('£' + value.vat_total.toFixed(2));

                        $('#spanInvAdminTotalAmt').html('£' + value.admin_grand_total.toFixed(2));
                        //Total Amount
                        $('#spanInvSubAmt').html('£' + value.inv_subtotal.toFixed(2));
                        $('#spanInvTotalAmt').html('£' + value.inv_subtotal.toFixed(2));
                        $("#spanInvTotalAmt").attr('data-amt', value.inv_subtotal.toFixed(2));
                        $('#txtInvAdjustment').html('£' + value.adjustment_amt.toFixed(2));


                        $('.spanMemoTotalAmt').html(value.memo_total.toFixed(2));

                        $('.spanMemoTotalAmt').css('color', (parseFloat(value.memo_total) < 0 ? '#f00' : parseFloat(value.memo_total) > 0 ? '#019496' : '#ccc'));
                        $('#spanInvNetPayableAmt').html('£' + value.due_total.toFixed(2));




                        $('#divinvlistedit').hide();
                        $('#divinvlistDetails').show();

                        //Job Details
                        var jobtiming = '<b>Job Timing:</b> ' + value.job_start_datetime2 + ' <b>to</b> ' + value.job_end_datetime2 + ' <b>  Duration: </b>' + (value.job_duration_in_hour_actual) + (value.job_type == 'P' ? ' day(s)' : ' hr(s)') + '</b>  <b style="padding-left:10px"> Break: </b>' + value.job_break_in_min + ' mins   <b style="padding-left:10px"> Hourly rate: </b>£' + value.job_rate_emp;
                        $('#spanInvJobActualTimeBreakDuration').html(jobtiming);

                        $('#txtinvcomments').html(value.inv_comments);

                        //Footer notes                      
                        if (value.inv_foot_note == '' || value.inv_foot_note == null) {
                            $('#txtfooternotes').html('');
                            $('#divfooternotesMsg').html('');
                            $('#divFooterNotes').hide();//  $('#divFooterNotes').show();
                            $('#divFooter').hide();

                            $('#btnUpdateFooter').attr('data-inv_no', value.inv_no);
                            $('#btnUpdateFooter').attr('data-id', value.job_id);
                        }
                        else {
                            $('#txtfooternotes').html(value.inv_foot_note);
                            $('#divfooternotesMsg').html(value.inv_foot_note);
                            $('#divFooterNotes').hide();
                            $('#divFooter').show();
                        }

                        //Bank Account For Payment
                        $('#accountname').html(value.account_holder);
                        $('#sortcode').html(value.sort_code);
                        $('#accountnob').html(value.account_number);
                        $('#spanbankname').html(value.bank_name);
                    });
                    //$.get("/Template/inv_tmpl.html", null, function (invTemp) {
                    //    $(invTemp).appendTo("body");
                    //    $('#invDetailsTemplate').tmpl(obj).appendTo("#tblInvoiceDetail");
                    //});
                }
                else {
                    //$("#tblInvoiceDetail").html('<div style="text-align:center;padding: 50px;color: #e79393;font-size: 22px;">Sorry for the inconvenience caused to you in this regard !</div>');
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    //getTimesheet: function (jobid) {
    //    $('#ScriptTimesheetTemplatePlaceholder').html(wait());
    //    var Param = { invoice_no: jobid, action: 'TIMESHEET' };
    //    ns_ajax.get(
    //         urls.accountsApi + "get",
    //         Param,
    //         function (response) {
    //             if (response.split('|')[0] == 'OK') {
    //                 var obj = jQuery.parseJSON(response.split('|')[1]);
    //                 call_tmpl_binder(obj, '/Template/jobs_tmpl.html', '#ScriptTimesheetTemplate', '#ScriptTimesheetTemplatePlaceholder');
    //             }
    //         });
    //    $('#TempModalBodyPlaceholder').html(empty());
    //},
    getTimesheet: function (jobid) {
        $('#ScriptTimesheetTemplatePlaceholder').html(wait());
        var Param = { invoice_no: jobid, action: 'TIMESHEET' };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    call_tmpl_binder(obj, '/Template/jobs_tmpl.html', '#ScriptTimesheetTemplate', '#ScriptTimesheetTemplatePlaceholder');

                }
            });
        //$('#TempModalBodyPlaceholder').html(empty());
    },
    inv_actions: function (params, action) {
        ns_ajax.post(
            urls.accountsApi + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");
                    var ParamData = JSON.parse(params);
                    ns_Accounts.CombineInvoiceDetail(ParamData[0]['inv_no'], action);
                }
                else {
                    ShowAlertMessage("Message", response, "");
                }

            });
    },
    calculateInvAmount: function (e) {
        var SiftDateStart = 'txtInvEditStartDate';
        var SiftTimeStart = 'txtInvEditStartTime';
        var SiftDateEnd = 'txtInvEditEndDate';
        var SiftTimeEnd = 'txtInvEditEndTime';

        var chkVAT = 'chkyes'; var VAT_Rule;
        if ($("#" + chkVAT).is(':checked')) { VAT_Rule = true; } else { VAT_Rule = false; }

        var fromDate = $("#" + SiftDateStart).val();
        var fromTime = $("#" + SiftTimeStart).val();
        var ToDate = $("#" + SiftDateEnd).val();
        var ToTime = $("#" + SiftTimeEnd).val();

        var txtduration = 'txtInvEditDuration';
        var duration = $("#txtInvEditDuration").attr('data-duration-in-min');
        if (fromDate != "" && fromTime != "" && ToDate != "" && ToTime != "") {
            fromDate = ConvertDateFormate(fromDate);
            ToDate = ConvertDateFormate(ToDate);
            var fromDT = fromDate + " " + fromTime;
            var toDT = ToDate + " " + ToTime;

            var startTime = new Date(fromDT);
            var endTime = new Date(toDT);
            var difference = (endTime - startTime); // This will give difference in milliseconds
            var resultInMinutes = (difference / 60000);
            if (resultInMinutes > 0)
                duration = resultInMinutes;

            var hour = parseInt(resultInMinutes / 60);
            var minutes = parseInt(resultInMinutes % 60);

            if (minutes == 0)
                $("#" + txtduration).val(parseInt(resultInMinutes / 60));
            else
                $("#" + txtduration).val(hour + '.' + minutes);
        }

        //Calculate Amount      
        var jobtype = $("#spanInvTitle").val();

        var txtHourlyRate = 'txtInvEditClientRate';
        var txtDoctorHourlyRate = 'txtInvEditCndRate';
        var txtadminFee = 'txtInvEditAdminFee';
        var txtvatamount = 'txtInvEditVatAmt';
        var txtTotalShiftCost = 'txtInvEditTotalAmount';
        var vatRule = $("#spanInvVATRule").html();
        var vatPercent = $("#chkyes").attr('data-vat-percent');

        $("#" + txtHourlyRate).val($("#" + txtHourlyRate).val());

        var offerRate = 0;
        if ($("#" + txtHourlyRate).val() !== '') {
            offerRate = parseFloat($("#" + txtHourlyRate).val()).toFixed(2);
        }

        var DoctorHourlyPayRate = 0;
        if ($("#" + txtDoctorHourlyRate).val() !== '') {
            DoctorHourlyPayRate = parseFloat($("#" + txtDoctorHourlyRate).val()).toFixed(2);
        }

        var Total = (parseFloat(offerRate * (duration / 60))).toFixed(2);

        var VATAMT = (parseFloat((Total * parseFloat(vatPercent)) / 100)).toFixed(2);
        if (vatRule == 'VOT' && VAT_Rule == true)
            $("#" + txtTotalShiftCost).val((parseFloat(Total) + parseFloat(VATAMT)).toFixed(2));
        else
            $("#" + txtTotalShiftCost).val(Total);

        //Remaining Amount (PayOffer - DoctorHourlyPayRate)
        var RemainingAmount = (parseFloat(offerRate - DoctorHourlyPayRate)).toFixed(2);

        if (vatRule == 'VOT') {
            if (VAT_Rule == true) {
                var TotalAgencyFee = (parseFloat(parseFloat(RemainingAmount) * (duration / 60))).toFixed(2);
                jQuery("#" + txtadminFee).val(TotalAgencyFee);
                jQuery("#" + txtvatamount).val(VATAMT);
            }
            else {
                var TotalAgencyFee = (parseFloat(parseFloat(RemainingAmount) * (duration / 60))).toFixed(2);
                jQuery("#" + txtadminFee).val(TotalAgencyFee);
                jQuery("#" + txtvatamount).val('0.00');
            }
        }
        else {
            //Agency Fee (RemainingAmount/1.2)   
            var AgencyFee = VAT_Rule == false ? (parseFloat(RemainingAmount / 1.0)).toFixed(5) : (parseFloat(RemainingAmount / 1.2)).toFixed(5);
            //Agency Fee TOTAL (AgencyFee * Duration)
            var TotalAgencyFee = (parseFloat(AgencyFee * (duration / 60))).toFixed(2);
            $("#" + txtadminFee).val(TotalAgencyFee);

            var agencyfee_in_percent = 0;
            if (TotalAgencyFee > 0) {
                agencyfee_in_percent = (parseFloat((TotalAgencyFee * 100) / Total)).toFixed(2);
            }
            $("#txtInvEditAdminFee").attr('data-admin-fee-percent', agencyfee_in_percent);

            //VAT Amount (RemainingAmount - AgencyFee)              
            var AvtAmount = (RemainingAmount - AgencyFee);
            //VAT Amount TOTAL (VAT * Duration)
            var TotalVAT = (parseFloat(AvtAmount * (duration / 60))).toFixed(2);
            $("#" + txtvatamount).val(TotalVAT);

            //Vat in %
            var VAT_in_percent = 0;
            if (TotalVAT > 0) {
                var VAT_in_percent = (parseFloat((TotalVAT * 100) / TotalAgencyFee)).toFixed(1);
            }
            $("#chkyes").attr('data-vat-percent', VAT_in_percent);
        }
        if (($("#" + txtHourlyRate).val() == "" || duration == "0")) {
            $("#" + txtTotalShiftCost).val("0.00");
        }
    },
    calculateInvDuration: function (e) {
        var SiftDateStart = 'txtInvEditStartDateActual';
        var SiftTimeStart = 'txtInvEditStartTimeActual';
        var SiftDateEnd = 'txtInvEditEndDateActual';
        var SiftTimeEnd = 'txtInvEditEndTimeActual';
        var txtbreak = 'txtBreakInMins';
        var Duration = 'txtInvEditDurationActual';

        var breakinMin = '0';
        if (jQuery("#" + txtbreak).val() !== '')
            breakinMin = jQuery("#" + txtbreak).val();

        var fromDate = jQuery("#" + SiftDateStart).val();
        var fromTime = jQuery("#" + SiftTimeStart).val();
        var ToDate = jQuery("#" + SiftDateEnd).val();
        var ToTime = jQuery("#" + SiftTimeEnd).val();

        if (fromDate != "" && fromTime != "" && ToDate != "" && ToTime != "") {
            var fromDT = ConvertDateFormate(fromDate) + " " + fromTime;
            var toDT = ConvertDateFormate(ToDate) + " " + ToTime;

            var startTime = new Date(fromDT);
            var endTime = new Date(toDT);

            var difference = (endTime - startTime); // This will give difference in milliseconds
            var resultInMinutes = (difference / 60000);

            resultInMinutes = (resultInMinutes - parseInt(breakinMin));

            var hour = parseInt(resultInMinutes / 60);
            var minutes = parseInt(resultInMinutes % 60);

            if (minutes == 0)
                $("#" + Duration).val(parseInt(resultInMinutes / 60));
            else
                $("#" + Duration).val(hour + '.' + minutes);
        }
    },
    viewCndAgyInvoice: function (invoice_no, action) {
        var Param = { invoice_no: invoice_no, action: action };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        if (action == 'view_cnd_inv') {
                            //From
                            $('#spanToCndAddressInv').html('<b>' + value.cnd_name + '</b><br>' + value.cnd_address + '<br /><b>Phone No : </b>' + value.cnd_mobile + '<br /><b>Email ID : </b>' + value.cnd_mobile + '');

                            //TO
                            $('#spanToEmpAddressInv').html('<b>' + value.emp_name + '</b><br>' + value.emp_full_aadress + '<br /><b>Phone No : </b>' + value.emp_phone + '<br /><b>Email ID : </b>' + value.emp_email + '');

                            //Inv Details
                            $("#spancndInvRefNo").html(value.inv_ref_no);
                            $("#spancndInvDate").html(value.inv_date12);
                            $("#spancndInvNo").html(invoice_no);

                            //Job Details
                            var jobtiming = '<span  style="line-height: 25px;"><b>Job Timing:</b> ' + value.from_datetime_actual2 + ' <b>to</b> ' + value.to_datetime_actual2 + ' <b>,<b style="padding-left:10px">H.Visit: </b>' + value.cnd_no_of_home_visit + ' Time(s),<br><b>Unpaid Break: </b>' + value.break_in_min + ' min(s)</span>';
                            $('#spanInvCndJobActualTimeBreak').html(jobtiming);


                            //Job Details
                            $("#spanCndJobDate").html(value.job_start_datetime2.substring(0, 10));
                            $("#spanCndJobIdRole").html(value.job_id + '/' + value.job_role_name);
                            $("#spanCndJobLocation").html('<i class="zmdi zmdi-pin">&nbsp;</i>' + value.job_full_location);
                            //Amount                                

                            $("#spanCndCost").html('£' + value.job_rate_cnd.toFixed(2));
                            $("#spanCndTotalDuaration").html(value.job_duration_in_hour_actual_after_break.toFixed(2));
                            $("#spanCndHomeVisitCost").html('£' + value.cnd_home_visit_amt.toFixed(2));
                            $("#spanCndTotalCost").html('£' + value.cnd_total.toFixed(2));
                            $("#spanCndPayableAmount").html('£' + value.cnd_total.toFixed(2));
                        }
                        else if (action == 'view_agy_inv') {
                            //From
                            $('#spanToAgyAddressInv').html('<b>' + value.org_name + '</b><br>' + value.org_address + '<br /><b>Phone No : </b>' + value.org_phone + '<br /><b>Fax : </b>' + value.org_fax + '<br /><b>Email ID : </b>' + value.org_email + '');
                            //To
                            $('#spanToEmpAddressInvAgy').html('<b>' + value.emp_name + '</b><br>' + value.emp_full_aadress + '<br /><b>Phone No : </b>' + value.emp_phone + '<br /><b>Email ID : </b>' + value.emp_email + '');

                            //Inv Details
                            $("#spancndInvRefNoAgy").html(value.inv_ref_no);
                            $("#spancndInvDateAgy").html(value.inv_date12);
                            $("#spancndInvDueDateAgy").html(value.inv_due_date12 == '' ? 'NA' : value.inv_due_date12);
                            $("#spancndInvNoAgy").html(invoice_no);
                            $("#spancndInvPONoAgy").html(value.puchase_ord_no == '' ? 'NA' : value.puchase_ord_no);
                            //Job Details
                            $("#spanAgyJobDate").html(value.job_start_datetime2.substring(0, 10));
                            $("#spanAgyJobIdRole").html(value.job_id + '/' + value.job_role_name);
                            $("#spanAgyJobLocation").html('<i class="zmdi zmdi-pin">&nbsp;</i>' + value.job_full_location);
                            //Amount
                            $("#spanAgyAdminFee").html('£' + value.admin_total.toFixed(2));
                            $("#spanAgyVATAmt").html('£' + value.vat_total.toFixed(2));
                            $("#spanAgyVatPercent").html('(' + value.job_vat_in_percent + '%)');
                            $("#spanAgyTotal").html('£' + value.admin_grand_total.toFixed(2));
                            $("#spanAgyGrandTotal").html('£' + value.admin_grand_total.toFixed(2));

                        }
                    });
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },

}

ns_memo = {
    //Memo
    MemoDetail: function (memo_id, invRefNo, memotype, profile_type, profile_id, action) {

        //var memotype = $("input[name='rbtnmemo']:checked").val();
        //var profile_id = $('#ddlProfileTypeMomo option:selected').val();
        //var profile_type = $('#ddlProfileTypeMomo option:selected').attr('data-type');
        //profile_type = (profile_type == 'undefined' || profile_type == '') ? 'EMP' : profile_type;
        profile_id = profile_type + '-' + profile_id;
        //var memo_id = '0';
        var Param = { memo_id: memo_id, invoice_ref_no: invRefNo, profile: profile_id, memotype: memotype };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {

                        $('#txtMemodate').val(value.memo_date12);
                        $('#txtInvoiceNo').val(value.invoice_ref_no);
                        if (value.memo_no !== 'NA' && value.memo_no !== '') {
                            $('#txtMemoNo').val(value.memo_no);
                            $('#divMemoNumber').show();
                            $('#btnSubmitCrDrMemo').html('Update');
                            $('#btnSubmitCrDrMemo').attr('data-action', 'update');
                            $('#btnSubmitCrDrMemo').attr('data-memo-id', value.memo_id);
                        }
                        else {
                            $('#txtMemoNo').val('');
                            $('#divMemoNumber').hide();
                            $('#btnSubmitCrDrMemo').html('Create');
                            $('#btnSubmitCrDrMemo').attr('data-action', 'create');
                            $('#btnSubmitCrDrMemo').attr('data-memo-id', '0');
                        }

                        $('#txtMemoDescription').val(value.description);
                        //Total Amount                          
                        $('#txtCndTotalMemo').val(value.total_cnd_amt.toFixed(2));
                        $('#txtAdmTotalMemo').val(value.total_admin_fees.toFixed(2));
                        $('#txtVatTotalMemo').val(value.total_vat_amt.toFixed(2));
                        $('#spanMemoTotalAmount').html('£' + value.payable_amount.toFixed(2));

                        profile_type == 'CND' ? $('#txtAdmTotalMemo').attr('disabled', 'disabled') : $('#txtAdmTotalMemo').prop("disabled", false);
                        profile_type == 'CND' ? $('#txtVatTotalMemo').attr('disabled', 'disabled') : $('#txtVatTotalMemo').prop("disabled", false);

                        //CND & EMP Address
                        var StrAdr = '<option value="0">Select profile</option>';
                        StrAdr += '<option value=' + value.emp_id + ' data-type="EMP" data-email="' + value.emp_phone + '##' + value.emp_email + '" data-address="' + value.emp_full_address + '"  >' + value.emp_name + '</option>';
                        StrAdr += '<option value=' + value.cnd_id + ' data-type="CND" data-email="' + value.cnd_mobile + '##' + value.cnd_email + '" data-address="' + value.cnd_address + '" >' + value.cnd_name + '</option>';
                        $('#ddlProfileTypeMomo').html(StrAdr);
                        $('#ddlProfileTypeMomo').val(profile_type == 'CND' ? value.cnd_id : value.emp_id);

                        //TO
                        profile_type = $('#ddlProfileTypeMomo option:selected').attr('data-type');
                        if (profile_type == 'EMP')
                            $('#divMemoAddrerss').html('<b>' + value.emp_name + '</b><br>' + value.emp_full_address + '<br /><b>Phone No : </b>' + value.emp_phone + '<br /><b>Email ID : </b>' + value.emp_email + '');
                        else if (profile_type == 'CND')
                            $('#divMemoAddrerss').html('<b>' + value.cnd_name + '</b><br>' + value.cnd_address + '<br /><b>Phone No : </b>' + value.cnd_mobile + '<br /><b>Email ID : </b>' + value.cnd_email + '');
                        else
                            $('#divMemoAddrerss').html('');


                    });
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },

    MemoView: function (invRefNo, memotype, profile_type, profile_id) {
        profile_id = profile_type + '-' + profile_id;
        var memo_id = '0';
        var Param = { memo_id: memo_id, invoice_ref_no: invRefNo, profile: profile_id, memotype: memotype };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        $('#spanDateMemo').html(value.memo_date12);
                        $('#spanInvoiceNo').html(value.invoice_ref_no);
                        $('#spanMemoNo').html(value.memo_no);

                        $('#DescriptionMemo').html(value.description);
                        //Total Amount                          
                        $('#cndtotalAmtMemo').html('£' + value.total_cnd_amt.toFixed(2));
                        $('#admintotalAmtMemo').html('£' + value.total_admin_fees.toFixed(2));
                        $('#vatTotalAmtMemo').html('£' + value.total_vat_amt.toFixed(2));
                        $('#spanTotalAmountMemo').html('£' + value.payable_amount.toFixed(2));
                        //TO      

                        if (value.profile_type == 'EMP')
                            $('#divAddrerssMemo').html('<b>To:</b><br><b>' + value.emp_name + '</b><br>' + value.emp_full_address + '<br /><b>Phone No : </b>' + value.emp_phone + '<br /><b>Email ID : </b>' + value.emp_email + '');
                        else if (value.profile_type == 'CND')
                            $('#divAddrerssMemo').html('<b>To:</b><br><b>' + value.cnd_name + '</b><br>' + value.cnd_address + '<br /><b>Phone No : </b>' + value.cnd_mobile + '<br /><b>Email ID : </b>' + value.cnd_email + '');
                        else
                            $('#divAddrerssMemo').html('');
                    });
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },

    memo_actions: function (params, action) {
        ns_ajax.post(
            urls.accountsApi + "memo",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");
                    var ParamData = JSON.parse(params);
                    memo_id = '0';
                    invRefNo = ParamData[0]['invoice_ref_no'];
                    memotype = ParamData[0]['memo_type'];
                    profile_type = ParamData[0]['profile_type'];
                    profile_id = ParamData[0]['profile_type_id'];
                    ns_memo.MemoDetail(memo_id, invRefNo, memotype, profile_type, profile_id, action);
                    if (action == 'delete')
                        $("#hideMemo-" + ParamData[0]['memo_id']).hide();
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },

    FillProfileTypeId: function (profileType) {
        fn_autocomplete('txtProfileTypeId', profileType, 'memo-user');
    },

    getMemoList: function (deleteStatus) {
        var strSearchVal = $('#txtSearchMemo').val();
        var searchMemoType = '';
        if ($('#SearchByCrMemo').prop('checked') == true && $('#SearchByDrMemo').prop('checked') == true) {
            searchMemoType = '';
        }
        else {
            searchMemoType = $('#SearchByCrMemo').prop('checked') ? 'CR' : $('#SearchByDrMemo').prop('checked') ? 'DR' : "";
        }
        var dateRange = $('#txtSearchDate').val();
        var searchProfileType = $('#ddlSearchByProfileType').val();
        var profile_id = '0';
        var Param = { DeleteStatus: deleteStatus, strSearchVal: strSearchVal, SearchMemoType: searchMemoType, DateRange: dateRange, SearchProfileType: searchProfileType, profile_id: profile_id };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var Memo = "";
                    var crTotal = 0, drTotal = 0;
                    $.each(obj, function (key, value) {
                        var id = value.memo_id;
                        var Particulars = '<span class="col-blue-grey"><b><span class="' + (value.memo_type == 'CR' ? 'col-green' : 'col-blue') + '">' + value.memo_type_label + '</span> memo for<span> ' + (value.profile_type == 'CND' ? value.cnd_name : value.emp_name) + '</span> with invoice reference no-<span> ' + value.invoice_ref_no + '</span>, Memo Date: ' + value.memo_date + '<br>' + value.description + '</span>';
                        var strEdit = '<a id="editMemo-' + id + '" class="btn btn-outline-primary btn-sm clsEditMemo" data-title="Edit"><i class="zmdi zmdi-edit"></i></a>';
                        var strView = '<a id="viewMemo-' + id + '" data-inv-ref-no="' + value.invoice_ref_no + '" data-memo-type="' + value.memo_type + '" data-profile-type="' + value.profile_type + '" data-profile-type-id ="' + value.profile_type_id + '" class="btn btn-outline-primary btn-sm clsViewMemo" data-title="View"><i class="zmdi zmdi-eye"></i></a>';
                        var strDelete = '<a id="deleteMemo-' + id + '" data-memo-no="' + value.memo_no + '" data-delete-status="' + value.delete_status + '"  class="ion btn btn-outline-danger btn-sm clsDeleteMemo" data-title="delete"><div class="lid"></div><div class="lidcap"></div><div class="bin"></div></a>';
                        Memo += '<tr id="hideMemo-' + id + '">' +
                            '<th>' +
                            '<span>' + value.RowNumber + '</span>' +
                            '</th>' +
                            '<td>' +
                            '<span><b>' + value.memo_no + '</b></span>' +
                            '</td>' +
                            '<td>' +
                            '<span><b>' + value.profile_type_label + '</b></span>' +
                            '</td>' +
                            '<td style="white-space:normal">' +
                            Particulars +
                            '<td style=" text-align:right">' +
                            '<span class="col-green">' + (value.memo_type == 'CR' ? '£' + parseFloat(value.payable_amount).toFixed(2) : '') + '</span>' +
                            '</td>' +
                            '<td style=" text-align:right">' +
                            '<span class="col-blue">' + (value.memo_type == 'DR' ? '£' + parseFloat(value.payable_amount).toFixed(2) : '') + '</span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp</i><b>' + value.create_date + '</b></span>' +
                            '</td>' +
                            '<td>' + (value.delete_status == 0 ? strEdit : '') + '&nbsp' + strView + '&nbsp' + strDelete + '</td>' +
                            '</tr>';

                        // Calculate total Cr and Dr amount

                        $('#headerAmt').show();
                        crTotal = (value.memo_type == 'CR' ? parseFloat(crTotal) + parseFloat(value.payable_amount) : parseFloat(crTotal) + parseFloat(0));
                        drTotal = (value.memo_type == 'DR' ? parseFloat(drTotal) + parseFloat(value.payable_amount) : parseFloat(drTotal) + parseFloat(0));

                    });
                    $('#tbodyCrDrMemo').html(Memo);
                    $('#CrSubtotal').html('£' + (crTotal.toFixed(2)));
                    $('#DrSubtotal').html('£' + (drTotal.toFixed(2)));
                }
                else {
                    $('#tbodyCrDrMemo').html("<tr><td colspan='8'><center>" + response + "<br/></center></td></tr>");
                    $('#headerAmt').hide();
                }
            });
    },

    getMemos: function (inv_ref_no) {
        var Param = { inv_ref_no: inv_ref_no };
        ns_ajax.get(
            urls.accountsApi + "get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var Memo = "";
                    $.each(obj, function (key, value) {
                        var id = value.memo_id;
                        var memoTypeDate = '<span class="col-blue-grey"><b><span class="' + (value.memo_type == 'CR' ? 'col-green' : 'col-blue') + '">' + value.memo_type_label + '</span><br>' + value.memo_date + '</span>';
                        var strEdit = '<a id="editMemo-' + id + '" data-inv-ref-no="' + value.invoice_ref_no + '" data-memo-type="' + value.memo_type + '" data-profile-type="' + value.profile_type + '" data-profile-type-id="' + value.profile_type_id + '" class="btn btn-outline-primary btn-sm clsEditMemo" data-title="Edit"><i class="zmdi zmdi-edit"></i></a>';
                        var strView = '<a id="viewMemo-' + id + '" data-inv-ref-no="' + value.invoice_ref_no + '" data-memo-type="' + value.memo_type + '" data-profile-type="' + value.profile_type + '" data-profile-type-id="' + value.profile_type_id + '" class="btn btn-outline-primary btn-sm clsViewMemo" data-title="View"><i class="zmdi zmdi-eye"></i></a>';
                        var strDelete = '<a id="deleteMemo-' + id + '" data-memo-no="' + value.memo_no + '" data-delete-status="' + value.delete_status + '"  class="ion btn btn-outline-danger btn-sm clsDeleteMemo" data-title="delete"><div class="lid"></div><div class="lidcap"></div><div class="bin"></div></a>';
                        Memo += '<tr id="hideMemo-' + id + '" data->' +
                            '<th>' +
                            '<span>' + value.RowNumber + '</span>' +
                            '</th>' +
                            '<td>' +
                            '<span><b>' + value.memo_no + '</b></span>' +
                            '</td>' +
                            '<td style="white-space:normal">' +
                            memoTypeDate +
                            '<td style=" text-align:right">' +
                            '<span class="col-green">' + (value.memo_type == 'CR' ? '£' + parseFloat(value.payable_amount).toFixed(2) : '') + '</span>' +
                            '</td>' +
                            '<td style=" text-align:right">' +
                            '<span class="col-blue">' + (value.memo_type == 'DR' ? '£' + parseFloat(value.payable_amount).toFixed(2) : '') + '</span>' +
                            '</td>' +

                            '<td  style="white-space:normal">' +
                            '<span><b>' + (value.profile_type == 'CND' ? value.cnd_name : value.emp_name) + '</b><br>(' + value.profile_type_label + ')</span>' +
                            '</td>' +
                            '<td  style="white-space:normal">' +
                            '<span class="col-blue-grey"><i class="zmdi zmdi-calendar">&nbsp</i><b>' + value.create_date + '</b></span>' +
                            '</td>' +
                            '<td>' + (value.delete_status == 0 ? strEdit : '') + '&nbsp' + strView + '&nbsp' + strDelete + '</td>' +
                            '</tr>';
                    });
                    $('#tbodyMemoList').html(Memo);
                    //$('#tblMemoList').show();

                }
                else {
                    $('#tbodyMemoList').html("<tr><td colspan='8'><center>" + response + "<br/></center></td></tr>");
                }
            });
    },
}

ns_jobs = {
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == 'No Records') {
            //$('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED').html('0');
        }
        else {
            if (obj.length == 1)
                flag = false;
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'BOOKED' || value.status == 'UNCOMPLETED' || value.status == 'COMPLETED' || value.status == 'NOTACCEPTED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
                if (value.status == 'OFFLINE' || value.status == 'LIVE' || value.status == 'APPLIED' || value.status == 'EXPIRED' || value.status == 'DELETED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }

    },
    //Jobs Board
    getJobBorad: function (obj) {
        var TotalRecords = 0;
        var rows = '';
        if (obj !== 'No Records') {
            $.each(obj, function (key, value) {
                TotalRecords = value.TotalRecord;
                var job_status_label = value.job_status_label;
                var jobid = value.job_id;
                var jobtype = '';// 'job-type="' + (value.job_type_title).split("-")[0] + '"';
                var toTime = value.job_start_datetime2.split(' ')[1];
                var Row_Number = value.RowNumber;
                rows += '<tr>';
                $.each(value, function (i, item) {
                    var field = i;
                    var val = value[i] == null ? '' : value[i];
                    if (field == 'TotalRecord') { }
                    else if (field == 'RowNumber') {
                        rows += '<td class="' + field + '">' +
                            //SrNo.
                            '<div class="checkbox"><input id="chkgrdJob' + jobid + '" type="checkbox" class="chkgrdJob"><label for="chkgrdJob' + jobid + '">' + Row_Number + '.</label></div>' +

                            //Action Buttons   
                            '<span class="table-row-btn">';
                        var clsAction = 'class="btn btn-outline-primary btn-sm mr-1 btn-job-action"';
                        if (job_status_label == 'OFFLINE' || job_status_label == 'LIVE') {
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="edit" data-id="' + jobid + '" title="Edit Job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-edit">&nbsp;</i>Edit</a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="assign" data-id="' + jobid + '" title="Assign Job to candidate" data-toggle="modal"><i class="zmdi zmdi-account">&nbsp;</i>Assign</a>';
                            rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="delete" data-id="' + jobid + '" title="Delete" data-toggle="modal"><i class="zmdi zmdi-close col-red">&nbsp;</i>Delete</a>';

                        }
                        if (job_status_label == 'DELETED') {
                            rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="restore" data-id="' + jobid + '" title="Restore" data-toggle="modal"><i class="zmdi zmdi-search-for col-green">&nbsp;</i>Restore</a>';
                        }

                        //rows += '<a ' + clsAction + ' data-action="comments" data-id="' + jobid + '" title="Comments" data-toggle="modal" data-target="#comments"><i class="zmdi zmdi-comment-more col-brown">&nbsp;</i>Comment</a>';
                        //rows += '<a ' + clsAction + ' data-action="upload" data-id="' + jobid + '" title="Upload Job Files" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-cloud-upload col-light-blue">&nbsp;</i>Upload</a>';
                        rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="view" data-id="' + jobid + '" title="View" data-toggle="modal" data-target="#viewjob"><i class="zmdi zmdi-search col-teal">&nbsp;</i>View</a>';
                        rows += '</span>';
                        '</td>';
                    }
                    else if (field == 'job_id') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<i class="zmdi zmdi-circle ' + (job_status_label == 'OFFLINE' ? 'col-grey' : 'col-green') + '">&nbsp;</i><a class="btn-job-action" data-action="view" data-id="' + jobid + '" title="View" data-toggle="modal" data-target="#viewjob"><b>' + val + '</b></a>' +
                            '</td>';
                    }
                    else if (field == 'job_type_title') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<span class="col-green"><b>' + val.split("-")[1] + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'job_speciality_name') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<span class="col-blue"><b>' + val + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'total_job_applications') {
                        rows += '<td class="' + field + '">' +
                            ' <span class="badge badge-neutral mr-1"><i class="zmdi zmdi-accounts">&nbsp;</i>' + val + '</span>' +
                            //'<span class="badge badge-neutral"><i class="zmdi zmdi-thumb-up"></i> [ 0 ]</span>' +
                            '</td>';
                    }
                    else if (field == 'job_status_label') {
                        rows += '<td class="' + field + '">' +
                            '<span class="badge badge-default wid100"><b>' + val + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'job_post_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<span class="col-grey"><i class="zmdi zmdi-calendar"></i>&nbsp;<b>' + val + '</b></span><br>' +
                            '<a href="#" title="Conversation" class="ml-1"data-toggle="modal" data-target="#myModal2"><span class="badge badge-primary"><i class="zmdi zmdi-comments"></i> [ 0 ]</span> </a>' +
                            //'<a class="ml-1 btn-job-action" data-action="jobfile" data-id="' + jobid + '" title="Job files"  data-toggle="modal" data-target="#job_files" title="Files"><span class="badge badge-neutral"><i class="zmdi zmdi-file-text"></i></span></a>' +
                            //'<a class="ml-1 btn-job-action" data-action="trackhistory" data-id="' + jobid + '" title="Track History"  data-toggle="modal" data-target="#tracking"><span class="badge badge-neutral"> T </span></a>' +
                            //'<a class="ml-1 btn-job-action" data-action="jobhistory" data-id="' + jobid + '" title="Job History"  data-toggle="modal" data-target="#ModalHistory"><span class="badge badge-neutral"> H </span></a>' +
                            '</td>';
                    }
                    else if (field == 'job_full_location') {
                        rows += '<td id="ltd-' + jobid + '" class="' + field + ' w__250m"><i class="zmdi zmdi-pin-drop">&nbsp;</i><span id="location-' + jobid + '" data-status="location" class="col-brown pointer clsshow clsshowfulladdress" data-value="' + val + '">' + (val.split('##')[0]) + '</span></td>';

                    }
                    else if (field == 'job_start_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime24') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-alarm"></i></span></div>' +
                            '<span class="form-control w130">' + (val.split(' ')[1]) + ' - ' + toTime + '</span>' +

                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'cnd_first_name') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-account"></i></span></div>' +
                            '<input id="txtcandidatename' + jobid + '"  value="' + val + '" data-item-id="" class="form-control w200 txtcandidatename bg-white" placeholder="Candidate Name" type="text">' +
                            '<span class="input-group-append"><a href="#" class="btn btn-primary">Book</a></span>'
                        '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_rate_emp') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="text-blue bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_rate_cnd') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="col-blue bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_vat_status') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset checkbox">' +
                            '' + (val == '1' ? '<input id="chkVAT' + jobid + '" type="checkbox" checked="checked" disabled><label for="chkVAT' + jobid + '">YES</label>' : '<input id="chkVAT' + jobid + '" type="checkbox" disabled><label for="chkVAT' + jobid + '">NO</label>') +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_admin_fees') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-info bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'total_cost') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="text-green bold font-18">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'vat_amount') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'job_duration_hr_day') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey font-17">' + (val.split("#")[1] == 'L' ? val.split("#")[0] + ' hr(s)' : val.split("#")[0] + ' day(s)') + '</span>' +
                            '</td>';
                    }
                    else {
                        rows += '<td class="' + field + '">' +
                            '<span>' + val + '</span>' +
                            '</td>';
                    }
                });
                rows += '</tr>';
            });
        }
        else {
            rows = '<td colspan="5" style="height:100px;color:lightcoral; font-size:16px">' + obj + '</td>';
        }
        result = ns_Paging._Object(rows, TotalRecords);
        $('.tblRecods').html(rows);
        return result;
        fn_autocomplete('txtcandidatename', 'cnd', 'txtcandidatename');
    },
    //Booked Jobs
    getBookedJobs: function (obj) {
        var TotalRecords = 0;
        var rows = '';
        if (obj !== 'No Records') {
            $.each(obj, function (key, value) {
                TotalRecords = value.TotalRecord;
                var jobid = value.job_id;
                var job_status_label = value.job_status_label;
                var timesheet_url = value.timesheet_url;
                var toTime = value.job_start_datetime2.split(' ')[1];
                var jobtype = '';//'job-type="' + (value.job_type_title).split("-")[0] + '"';
                var Row_Number = value.RowNumber;
                var cndsubtype = value.org_alias_name_emp_cndtype.split("##")[1];
                rows += '<tr>';
                //rows += '<td><div class="checkbox"><input id="chkgrdJob' + jobid + '" type="checkbox" class="chkgrdJob"><label for="chkgrdJob' + jobid + '">&nbsp;</label></div></td>';

                $.each(value, function (i, item) {
                    var field = i;
                    var val = value[i] == null ? '' : value[i];
                    if (field == 'TotalRecord') { }
                    else if (field == 'RowNumber') {
                        rows += '<td class="' + field + '">' +
                            //SrNo.
                            '<div class="checkbox"><input id="chkgrdJob' + jobid + '" type="checkbox" class="chkgrdJob"><label for="chkgrdJob' + jobid + '">' + Row_Number + '.</label></div>' +
                            //'<span>' + val + '</span>' +
                            //Action Buttons   
                            '<span class="table-row-btn">';
                        var clsAction = 'class="btn btn-outline-primary btn-sm mr-1 btn-job-action"';

                        if (job_status_label == 'BOOKED') {
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="edit" data-id="' + jobid + '" title="Edit Job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-edit">&nbsp;</i>Edit</a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="swap" data-id="' + jobid + '"title="Swap Candidate" data-toggle="modal" data-target="#comments"><b><i class="zmdi zmdi-pin-account col-orange">&nbsp;</i>Swap</b></a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="cancel" data-id="' + jobid + '"title="Cancel the Job" data-toggle="modal" data-target="#comments"><i class="zmdi zmdi-close col-red">&nbsp;</i>Cancel</a>';
                        }
                        if (job_status_label == 'UNCOMPLETED') {
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="edit" data-id="' + jobid + '" title="Edit Job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-edit">&nbsp;</i>Edit</a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="complete" data-id="' + jobid + '"title="Complete the Job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-case-check">&nbsp;</i>Complete</a>';
                        }
                        //if (job_status_label == 'WAITING') {
                        //    rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="createinvoice" data-id="' + jobid + '" title="Create Invoice" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-money col-red">&nbsp;</i>Create Invoice</a>';
                        //    rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="upload" data-id="' + jobid + '" title="Upload Job Files" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-cloud-upload col-light-blue">&nbsp;</i>Upload</a>';
                        //    rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';
                        //}
                        if (job_status_label == 'WAITING') {
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="createinvoice" data-id="' + jobid + '" title="Authorize Now" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-money col-red">&nbsp;</i>Authorize Now</a>';
                        }
                        if (job_status_label == 'COMPLETED') {
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="jobfile" data-id="' + jobid + '" title="Upload Job Files" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-cloud-upload col-light-blue">&nbsp;</i>Job File</a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';
                            //rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="audit" data-id="' + jobid + '" title="Audit the job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-spellcheck col-green">&nbsp;</i>Audit</a>';
                        }
                        if (job_status_label == 'NOTACCEPTED') {
                            rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="recomplete" data-id="' + jobid + '"title="Recomplete the Job" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-case-check">&nbsp;</i>Recomplete</a>';
                        }
                        if (job_status_label == 'WAITING' || job_status_label == "COMPLETED" || job_status_label == "NOTACCEPTED") {
                            //rows += '<a class="btn btn-outline-primary btn-sm mr-1 btnViewTimesheet" data-file-id="' + jobid + '" data-file-name="' + timesheet_url + '" data-action="timesheet" title="Manual Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>' +
                            //    '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="computer-generated-timesheet" data-id="' + jobid + '" title="Computer Generated Timesheet" data-toggle="modal" data-target="#ModalSysGenerateTimesheet"><i class="zmdi zmdi-devices"></i></a>';
                            rows += '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';
                        }

                        //rows += '<a ' + clsAction + ' data-action="unauthorise" data-id="' + jobid + '" title="Unauthorised this jobs" data-toggle="modal" data-target="#edit_job"><i class="zmdi zmdi-mood-bad col-red">&nbsp;</i>Unauthorise</a>';
                        //rows += '<a ' + clsAction + ' data-action="comments" data-id="' + jobid + '" title="Comments" data-toggle="modal" data-target="#comments"><i class="zmdi zmdi-comment-more col-brown">&nbsp;</i>Comment</a>';
                        //rows += '<a ' + clsAction + ' data-action="upload" data-id="' + jobid + '" title="Upload Job Files" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-cloud-upload col-light-blue">&nbsp;</i>Upload</a>';
                        //rows += '<a ' + clsAction + ' data-action="timesheet" data-id="' + jobid + '" title="Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Timesheet</a>';

                        if (job_status_label == "COMPLETED") {
                            //Feedback
                            rows += '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" data-action="feedback" data-id="' + jobid + '" title="Send Feedback" data-toggle="modal" data-target="#ModalFeedReq"><i class="zmdi zmdi-assignment-o col-purple">&nbsp;</i>Feedback</a>';
                        }
                        rows += '<a ' + clsAction + ' ' + jobtype + ' data-action="view" data-id="' + jobid + '" title="View" data-toggle="modal" data-target="#viewjob"><i class="zmdi zmdi-search col-teal">&nbsp;</i>View</a>';
                        rows += '</span>';
                        '</td>';
                    }
                    else if (field == 'job_id') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<i class="zmdi zmdi-circle col-green">&nbsp;</i><a title="View" data-toggle="modal" data-target="#viewjob"><b>' + val + '</b></a>' +
                            '</td>';
                    }
                    else if (field == 'job_type_title') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<span class="col-green"><b>' + val.split("-")[1] + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'job_status_label') {
                        rows += '<td class="' + field + '">' +
                            '<span class="badge badge-default wid100"><b>' + val + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'job_post_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<span class="col-grey"><i class="zmdi zmdi-calendar"></i>&nbsp;<b>' + val + '</b></span><br>' +
                            '<a href="#" title="Conversation" class="ml-1"data-toggle="modal" data-target="#myModal2"><span class="badge badge-primary"><i class="zmdi zmdi-comments"></i> [ 0 ]</span> </a>' +
                            '<a class="ml-1 btn-job-action" data-action="jobfile" data-id="' + jobid + '" title="Job files"  data-toggle="modal" data-target="#job_files" title="Files"><span class="badge badge-neutral"><i class="zmdi zmdi-file-text"></i></span></a>' +
                            '<a class="ml-1 btn-job-action" data-action="trackhistory" data-id="' + jobid + '" title="Track History"  data-toggle="modal" data-target="#tracking"><span class="badge badge-neutral"> T </span></a>' +
                            '<a class="ml-1 btn-job-action" data-action="jobhistory" data-id="' + jobid + '" title="Job History"  data-toggle="modal" data-target="#ModalHistory"><span class="badge badge-neutral"> H </span></a>' +
                            '</td>';
                    }
                    else if (field == 'job_full_location') {
                        rows += '<td id="ltd-' + jobid + '" class="' + field + ' w__250m"><i class="zmdi zmdi-pin-drop">&nbsp;</i><span id="location-' + jobid + '" data-status="location" class="col-brown pointer clsshow clsshowfulladdress" data-value="' + val + '">' + (val.split('##')[0]) + '</span></td>';
                    }
                    else if (field == 'job_start_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime24') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-alarm"></i></span></div>' +
                            '<span class="form-control w130">' + (val.split(' ')[1]) + ' - ' + toTime + '</span>' +

                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_end_datetime2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            //'<i class="zmdi zmdi-calendar">&nbsp;</i>'+val+
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<input id="txttodate' + jobid + '"  value="' + (val.split(' ')[0]) + '" class="form-control w130 date start calculateAmount  SiftDateStart" placeholder="dd/mm/yyyy" type="text">' +
                            '<input id="txttotime' + jobid + '" value="' + (val.split(' ')[1]) + '" class="form-control w90 time start calculateAmount SiftTimeStart" placeholder="hh:mm tt" type="text" />' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'candidate_detail') {
                        rows += '<td id="cnd-' + jobid + '" class="' + field + ' w__250m"><i class="zmdi zmdi-account">&nbsp;</i><span id="cnd-' + jobid + '" data-status="cnd" class="col-brown pointer  clsshowCndDetails" data-value="' + val + '">' + (val.split('#')[0]) + '</span></td>';
                    }
                    else if (field == 'timesheet_url') {
                        rows += '<td class="' + field + '">' +
                            ((job_status_label == 'WAITING' || job_status_label == "COMPLETED" || job_status_label == "NOTACCEPTED") ?
                                (val == '' ? '<a class="btn btn-outline-primary btn-sm mr-1 btn-job-action" ' + jobtype + ' data-action="timesheet" data-id="' + jobid + '" title="Upload Timesheet" data-toggle="modal" data-target="#job_files"><i class="zmdi zmdi-upload col-red">&nbsp;</i>TS</a>'
                                    : '<a class="btn btn-outline-primary btn-sm mr-1 btnViewTimesheet" data-file-id="' + jobid + '" data-file-name="' + timesheet_url + '" data-action="timesheet" title="View Timesheet" data-toggle="modal" data-target="#ViewJobFile"><i class="zmdi zmdi-assignment-o col-green">&nbsp;</i>TS</a>') : '') +

                            '</td>';
                    }
                    else if (field == 'from_datetime_actual2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'to_datetime_actual24') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span></div>' +
                            '<span class="form-control w100">' + (val.split(' ')[0]) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'to_datetime_actual2') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-alarm"></i></span></div>' +
                            '<span class="form-control w130">' + (val.split(' ')[1]) + ' - ' + toTime + '</span>' +

                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_duration_hr_day_actual') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey font-17">' + (val.split('#')[1] == 'L' ? val.split('#')[0] + ' hr(s)' : val.split('#')[0] + ' day(s)') + '</span>' +
                            '</td>';
                    }
                    else if (field == 'break_in_min') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset">' +
                            '<div class="input-group-prepend"><span class="input-group-text"><i class="zmdi zmdi-timer-off"></i></span></div>' +
                            '<input id="txtbreakInMin' + jobid + '" value="' + val + '" class="form-control w50 time start calculateAmount SiftTimeStart" placeholder="0" type="text" />' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_audit_status') {
                        rows += '<td class="' + field + '">' +
                            (val == '1' ? '<span style="color:#00b658!important">Audited</span>' : '<span style="color:#E74C3C!important">No Audit</span>')
                        //'<div class="input-group masked-input unset checkbox">' +
                        //   '' + (val == '1' ? '<input id="chkAudit' + jobid + '" type="checkbox" class="a-disabled" checked="checked"><label for="chkAudit' + jobid + '" style="color:#00b658!important">Audited</label>' : '<input id="chkAudit' + jobid + '" type="checkbox"><label for="chkAudit' + jobid + '" style="color:#E74C3C!important">Audit</label>') +
                        //'</div>' +
                        '</td>';
                    }
                    else if (field == 'job_speciality_name') {
                        rows += '<td class="fixed-side ' + field + '">' +
                            '<span class="col-blue"><b>' + val + '</b></span>' +
                            '</td>';
                    }
                    else if (field == 'job_rate_emp') {
                        rows += '<td class="' + field + '">' +
                            '<div class="text-center">' +
                            '<span class="text-blue bold">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_rate_cnd') {
                        rows += '<td class="' + field + '">' +
                            (cndsubtype.toUpperCase() == 'AGENCY' ? '' :
                                '<div class="text-center">' +
                                '<span class="col-blue bold">£' + parseFloat(val).toFixed(2) + '</span>') +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_vat_status') {
                        rows += '<td class="' + field + '">' +
                            '<div class="input-group masked-input unset checkbox">' +
                            '' + (val == '1' ? '<input id="chkVAT' + jobid + '" type="checkbox" checked="checked" disabled><label for="chkVAT' + jobid + '">YES</label>' : '<input id="chkVAT' + jobid + '" type="checkbox" disabled><label for="chkVAT' + jobid + '">NO</label>') +
                            '</div>' +
                            '</td>';
                    }
                    else if (field == 'job_admin_fees') {
                        rows += '<td class="text-center ' + field + '">' +
                            (cndsubtype.toUpperCase() == 'AGENCY' ? '' :
                                '<span class="col-info bold">£' + parseFloat(val).toFixed(2) + '</span>') +
                            '</td>';
                    }
                    else if (field == 'vat_amount') {
                        rows += '<td class="text-center ' + field + '">' +
                            (cndsubtype.toUpperCase() == 'AGENCY' ? '' :
                                '<span class="col-blue-grey bold">£' + parseFloat(val).toFixed(2) + '</span>') +
                            '</td>';
                    }
                    else if (field == 'total_cost') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="text-green bold font-18">£' + parseFloat(val).toFixed(2) + '</span>' +
                            '</td>';
                    }
                    else if (field == 'job_duration_hr_day') {
                        rows += '<td class="text-center ' + field + '">' +
                            '<span class="col-blue-grey font-17">' + (val.split('#')[1] == 'L' ? val.split('#')[0] + ' hr(s)' : val.split('#')[0] + ' day(s)') + '</span>' +
                            '</td>';
                    }
                    else if (field == 'org_alias_name_emp_cndtype') {
                        rows += '<td class="' + field + '">' +
                            '<span><b>' + (val.split("##")[0]) + '<br><span class="col-blue">' + (val.split("##")[1]) + '</span></b></span>' +
                            '</td>';
                    }
                    else {
                        rows += '<td class="' + field + '">' +
                            '<span>' + val + '</span>' +
                            '</td>';
                    }
                });
                rows += '</tr>';
            });
        }
        else {
            rows = '<td colspan="5" style="height:100px;color:lightcoral; font-size:16px">' + obj + '</td>';
        }
        result = ns_Paging._Object(rows, TotalRecords);
        $('.tblRecods').html(rows);
        DatePairFuction();
        return result;
        fn_autocomplete('txtcandidatename', 'cnd', 'txtcandidatename');

    },
    LoadJobBorad: function () {
        $('.clsOfflineLive').hide();
        var requestedtype = jQuery(location).attr('hash').replace('#', '');
        if (requestedtype !== '') {
            jQuery('.ul-records-tabs li a').removeClass('active');
            jQuery('#tab' + requestedtype).addClass('active');
            JobStatus = jQuery('#tab' + requestedtype).attr('data-status');
            jQuery('#tab' + requestedtype).click();
        }
        ns_Paging._createPager('#PgData', (ns_gris_setting.get_grid_field(ns_Paging.options.currentIndex, ns_Paging.options.rPP)));
    },
    IsJobDetailsEdited2: function () {
        var flag = false;
        $("#editableSection :input").each(function (e) {
            if (this.value !== $("#" + this.id).attr('data-val')) {
                flag = true;
                return false;
            }
        });
        return flag;
    },
    //(Jobs Posting & Booking)11-09-2019
    load_dropdowns: function (params) {

        ns_ajax.get(
            urls.jobPost + "get?",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    serverResponse = $.parseJSON(response.split('|')[1]);
                    //generated table head columns
                    tblHeadRow = ns_table_template.heading_row(serverResponse.tablecolumns);
                    $('#tblHead').append(tblHeadRow);

                    //bind table row dropdowns
                    ns_table_template.add_new_row(serverResponse);

                    if (!document.getElementById("ddlJobSource")) {

                        $("#jobSourceContainer").append('<select id="ddlJobSource" class="form-control "></select>');
                        //bind job source dropdown

                        $.each(serverResponse.jobsources, function (index, row) {
                            $('#ddlJobSource').append($("<option     />").val(this.Id).text(this.Name))
                        });

                        $("#rowJobSource").css("display", "");
                        $("#rowAddNew").css("display", "");
                        $("#rowBtnContinue").css("display", "");
                    }
                }
            }
        );
    },
    post_jobs: function (params) {
        ns_ajax.post(
            urls.jobPost + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var batchNumber = 'bn=' + response.split('|')[1] + '&tp=' + tabStatus;
                    window.location.href = '/jobs/Assign?' + batchNumber;
                }
            }
        );
    },
    book_jobs: function (params) {
        ns_ajax.post(
            urls.jobPost + "post?",//url
            params,//Param
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");
                    $("#tblPostedJobs tbody tr").each(function (index, tr) {
                        var chkBox = $("#chk" + index);
                        if (chkBox.prop("checked") == true) {
                            $('#rowNumber' + index).css('display', 'none');
                            $('#chk' + index).prop("checked", "");
                        }
                    });
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            }
        );
    },
    get_jobs: function (params) {
        var arrParams = params.split(',');
        var jobTp = arrParams[1];
        params = 'bn=' + arrParams[0] + '&tp=' + arrParams[1];
        ns_ajax.get(
            urls.jobPost + "Get?",//url
            params,//Param
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var bodyRow, jobTypePostOrBook, tblJobsBooked;
                    response = $.parseJSON(response.split('|')[1]);
                    if (response.postedJobs.length > 0) {
                        var sendEmailCheckBox = '\<tr><th colspan="19"><div class="col-sm-8">\
                                                    <span class="checkbox  float-left m-t-5" style="margin-right:20px;">\
                                                        <input id="chkSendMailToAll" name="chkSendMailToAll" type="checkbox" value="1" style="margin-right:5px;">\
                                                        <label for="chkSendMailToAll">Send mail to all</label>\
                                                    </span>\
                                                    <span class="checkbox float-left m-t-5">\
                                                        <input id="chkBroadCastJobs" name="chkBroadCastJobs" type="checkbox" value="1" style="margin-right:5px;">\
                                                        <label for="chkBroadCastJobs">Broadcast jobs</label>\
                                                    </span>\
                                            </div></th>\
                                            </tr><tr><th colspan="19" style="height:20px; text-align:center;">Posted Jobs</th></tr> ';

                        $('#tblPostedHead').append(sendEmailCheckBox);

                        //generated table head columns
                        tblHeadRow = ns_table_template.heading_row(response.tablecolumns);
                        $('#tblPostedHead').append(tblHeadRow);

                        //Add row in table
                        $.each(response.postedJobs, function (index, row) {
                            //<a class="btn btn-primary" id="btnTrack' + index + '" style="margin-left:5px;"><b>Track</b></a>
                            bodyRow += '<tr id="rowNumber' + index + '">'
                            bodyRow += '<th><span class="checkbox  float-left m-t-5" style="margin-right:20px;"><input id="chk' + index + '" name="chk' + index + '" type="checkbox" value="1" style="margin-right:5px;"><label for="chk' + index + '">' + (index + 1) + '</label></span></th>';
                            bodyRow += '<td class="text-center col-blue bold"><span id="lblJobId' + index + '" class="col-blue">' + row.job_id + '</span></td>';
                            bodyRow += '<td class="text-center"><span id="lblDateShiftSecured' + index + '">' + row.Date_Shift_Secured.split(' ')[0] + '</span></td>';
                            bodyRow += '<td class="text-center"><span style="color:' + (row.Job_Status == 1 ? 'lightgreen' : 'red') + '" id="lblJobStatus' + index + '">' + (row.Job_Status == 1 ? 'online' : 'offline') + '</span></td>';
                            //bodyRow += '<td><span id="lblClientName' + index + '">' + row.Client + '</span></td>';
                            bodyRow += '<td><span id="lblLocation' + index + '"><i class="zmdi zmdi-pin">' + row.Location + '</span></td>';

                            if (jobTp !== "P") {
                                bodyRow += '<td class="text-center"><span id="lblStartDate' + index + '">' + row.Start_Date_Time.split(' ')[0] + '</span></td>';
                                bodyRow += '<td class="text-center"><span id="lblStartTime' + index + '">' + row.Start_Date_Time.split(' ')[1] + '</span></td>';
                                bodyRow += '<td class="text-center"><span id="lblEndDate' + index + '">' + row.End_Date_Time.split(' ')[0] + '</span></td>';
                                bodyRow += '<td class="text-center"><span id="lblEndTime' + index + '">' + row.End_Date_Time.split(' ')[1] + '</span></td>';
                            }
                            else {
                                bodyRow += '<td class="text-center"><span id="lblStartDate' + index + '">' + row.Start_Date_Time.split(' ')[0] + '</span></td>';
                                bodyRow += '<td class="text-center"><span id="lblStartTime' + index + '">' + row.Start_Date_Time.split(' ')[0] + '</span></td>';
                            }

                            bodyRow += '<td class="text-center"><span id="lblTotalDuration' + index + '">' + row.Job_Duration + ' </span></td>';
                            bodyRow += '<td><input type="text" class="form-control text-center"  id="txtClientRate' + index + '" value="' + row.Job_Rate_Emp + '" style="width:90px;" placeholder="0" ></td>';
                            bodyRow += '<td class="text-center"><span id="lblJobRole' + index + '">' + row.Job_Role + '</span></td>';

                            if (jobTp !== "P") {
                                bodyRow += '<td class="text-center"><span id="lblShiftType' + index + '">' + row.Shift_Type + '</span></td>';
                            }
                            else {
                                bodyRow += '<td class="text-center"><span id="lblSpeciality' + index + '">' + (row.Speciality == null ? 'NA' : row.Speciality) + '</span></td>';
                                bodyRow += '<td class="text-center"><span id="lblGrade' + index + '">' + (row.Grade == null ? 'NA' : row.Grade) + '</span></td>';
                            }

                            bodyRow += '<td  class="width200"><input type="text" class="form-control ui-autocomplete-input txtAssignCnd' + index + '" autocomplete="off" placeholder="Enter Name/Mob/Email..."  id="txtAssignCnd' + index + '" value="" ><input id="hfcndid' + index + '" type="hidden" class="hfcndid' + index + '" /></td>';
                            bodyRow += '<td><input type="text" class="form-control text-center" placeholder="0" style="width:90px;"  id="txtAssignCndRate' + index + '" value="' + row.Candidate_Rate + '" ></td>';
                            bodyRow += '<td><button class="btn btn-primary"  id="btnAssign' + index + '">Assign</button></td>';
                            bodyRow += '</tr>'
                            $('#tblPostedBody').append(bodyRow);
                            bodyRow = "";
                            fn_autoSearch("txtAssignCnd" + index, "cnd", "hfcndid" + index);

                            $('#btnAssign' + index).click(function () {
                                arrJobType.length = 0;
                                arrBookedJob.length = 0;
                                if (ns_jobs.fn_book_jobs_validate(index) != false) {
                                    jobTypePostOrBook = {
                                        "Action": "Book",
                                        "SendEmail": ($("#chkSendMailToAll").prop("checked") == true ? 1 : 0),
                                        "BroadCast": ($("#chkBroadCastJobs").prop("checked") == true ? 1 : 0)
                                    }
                                    arrJobType.push(jobTypePostOrBook);
                                    var strFinal = "[" + JSON.stringify(arrBookedJob) + "," + JSON.stringify(arrJobType) + "]";
                                    ns_jobs.book_jobs(strFinal);
                                    $("#rowNumber" + index).css('display', 'none');

                                }
                            });
                        });

                        bodyRow = "";

                        //Added footer row
                        bodyRow += '<tr><th colspan="19">';
                        bodyRow += '<div class="row justify-content-center" style="padding: 10px;">\
                                            <div class="col-6">\
                                                <a class="btn btn-primary" id="btnAssignJob" style="float:right">\
                                                    <b>Assign</b>\
                                                </a>\
                                            </div>\
                                             <div class="col-6">\
                                                <a class="btn btn-default col-white" id="btnPostMoreJobs" >\
                                                    <b>Post More Jobs..</b>\
                                                </a>\
                                            </div>\
                                </div> </th></tr>';

                        $('#tblPostedBody').append(bodyRow);

                        $("#btnAssignJob").click(function () {
                            tblJobsBooked = "";
                            tblJobsBooked = $("#tblPostedJobs tbody tr");
                            var arrCheckedRows = [];
                            arrBookedJob.length = 0;

                            tblJobsBooked.each(function (index, tr) {
                                var chkBox = $("#chk" + index);
                                if (chkBox.prop("checked") == true) {
                                    arrCheckedRows.push(index);
                                }

                            });

                            if (arrCheckedRows.length === 0) {
                                ShowAlertMessage("Message", "Please select the checkbox, the job that you want to book!", "A");
                            }
                            else {
                                var i;
                                for (i = 0; i < arrCheckedRows.length; i++) {
                                    if (ns_jobs.fn_book_jobs_validate(arrCheckedRows[i]) == false)
                                        return false;
                                }
                                if (arrCheckedRows.length == arrBookedJob.length) {
                                    jobTypePostOrBook = {
                                        "Action": "Book",
                                        "SendEmail": ($("#chkSendMailToAll").prop("checked") == true ? 1 : 0),
                                        "BroadCast": ($("#chkBroadCastJobs").prop("checked") == true ? 1 : 0)

                                    }
                                    arrJobType.push(jobTypePostOrBook);
                                    var strFinal = "[" + JSON.stringify(arrBookedJob) + "," + JSON.stringify(arrJobType) + "]";
                                    ns_jobs.book_jobs(strFinal);

                                }
                                arrJobType.length = 0;
                                arrBookedJob.length = 0;
                            }
                        });
                        $("#chkAll").click(function () {
                            tblJobsBooked = "";
                            tblJobsBooked = $("#tblPostedJobs tbody tr");
                            tblJobsBooked.each(function (index, tr) {
                                var chkBox = $("#chk" + index);
                                if ($("#chkAll").prop("checked") == true)
                                    chkBox.prop("checked", "checked");
                                else
                                    chkBox.prop("checked", "");
                            });
                        });
                        $("#btnPostMoreJobs").click(function () {
                            window.location.href = '/Jobs/Post';
                        });
                    }
                    else {
                        tblHeadRow = ns_table_template.heading_row(response.tablecolumns);
                        var postedJobsLabel = '<tr><th colspan="19" style="height:20px; text-align:center;">Posted Jobs</th></tr>';
                        var noRecord = '<tr><td colspan="19" style="text-align:center;height: 50px;">\
                                                    <span>\
                                                        <label >No job available</label>\
                                                    </span>\
                                            </td></tr>';
                        $('#tblPostedHead').append(postedJobsLabel);
                        $('#tblPostedHead').append(tblHeadRow);
                        $('#tblPostedHead').append(noRecord);
                    }
                }
            }
        );
    },
    fn_book_jobs_validate: function (rowNumber) {
        var bookedJobs;
        var jobId = $("#lblJobId" + rowNumber);
        var cndId = $("#hfcndid" + rowNumber);
        var cndName = $("#txtAssignCnd" + rowNumber);
        var cndRate = $("#txtAssignCndRate" + rowNumber);
        var cltRate = $("#txtClientRate" + rowNumber);

        if (cltRate.val().length === 0) {
            cltRate.focus();
            ShowAlertMessage("Message", "Please enter job rate !", "A");
            return false;
        }
        if (cltRate.val().trim() == 0) {
            cltRate.focus();
            ShowAlertMessage("Message", "Please enter job rate !", "A");
            return false;
        }
        if (cndId.val().length == 0) {
            cndName.focus();
            ShowAlertMessage("Message", "Please enter candidate name !", "A");
            return false;
        }
        if (cndName.val().length === 0) {
            cndName.focus();
            ShowAlertMessage("Message", "Please enter candidate name !", "A");
            return false;
        }
        if (cndRate.val().length === 0) {
            cndRate.focus();
            ShowAlertMessage("Message", "Please enter candidate rate !", "A");
            return false;
        }
        if (cndRate.val().trim() == 0) {
            cndRate.focus();
            ShowAlertMessage("Message", "Please enter candidate rate !", "A");
            return false;
        }

        if (parseFloat(cndRate.val()) > parseFloat(cltRate.val())) {
            cndRate.focus();
            ShowAlertMessage("Message", "Candidate rate can't be greater than employer rate !", "A");
            return false;
        }
        bookedJobs = {
            "Job_id": jobId.text(),
            "Candidate_Id": cndId.val(),
            "Candidate_Rate": cndRate.val(),
            "Client_Rate": cltRate.val()
        }
        arrBookedJob.push(bookedJobs);
    },
    fn_post_jobs_validate: function (rowNumber) {
        var employee, employeeText, location, jobType, startDate, startTime, endDate, endTime,
            duration, clientRate, shiftCost, sector, role, shiftType, ItSystem,
            specaility, grade, department, description, orgId,
            breakRequired, breakTime, smartCardRequired, post_sendMailToEMP,
            adminWorkRequired, onCallRequired, homeVisitRequired, homeVisitAmt,
            jobSource, status, jobBatchNo, postedJobs, postedJobPrev;

        //employee = $("#hfempid" + rowNumber);
        //employeeText = $("#txtClientName" + rowNumber);
        location = $("#ddlLocations" + rowNumber + " :selected");
        jobType = tabStatus === "P" ? 'P' : 'L';
        startDate = $("#txtStartDate" + rowNumber);
        startTime = $("#txtStartTime" + rowNumber);
        endDate = $("#txtEndDate" + rowNumber);
        endTime = $("#txtEndTime" + rowNumber);
        duration = $("#txtDuration" + rowNumber);
        clientRate = tabStatus === "P" ? 0 : $("#txtClientRate" + rowNumber);
        shiftCost = tabStatus === "P" ? $("#txtTotalCost" + rowNumber) : $("#txtShiftCost" + rowNumber);
        sector = $("#ddlSector" + rowNumber + " :selected");
        role = $("#ddlJobRole" + rowNumber + " :selected");
        shiftType = tabStatus === "P" ? 0 : $("#ddlShiftType" + rowNumber + " :selected");
        ItSystem = tabStatus === "P" ? 0 : $("#ddlITSystem" + rowNumber + " :selected");
        specaility = tabStatus === "P" ? $("#ddlSpeciality" + rowNumber + " :selected") : 0;
        grade = tabStatus === "P" ? $("#ddlGrade" + rowNumber + " :selected") : 0;
        department = tabStatus === "P" ? $("#txtDepartment" + rowNumber) : 0;
        description = $("#txtDescription" + rowNumber);
        breakRequired = $('input[name=break' + rowNumber + ']:checked');
        breakTime = $("#txtBreak" + rowNumber);
        smartCardRequired = $('input[name=smartCard' + rowNumber + ']:checked');
        adminWorkRequired = $("#chkAdminWork" + rowNumber).prop("checked");
        onCallRequired = $("#chkOnCall" + rowNumber).prop("checked");
        homeVisitRequired = $("#chkHomeVisit" + rowNumber).prop("checked");
        homeVisitAmt = $('#txtHomeVisitAmount' + rowNumber);
        jobSource = $("#ddlJobSource :selected");

        status = $('input[name=posted]:checked');
        orgId = "1";
        postedJobs = "";
        postedJobPrev = "";
        //if (employeeText.val().length === 0) {
        //    employeeText.focus()
        //    ShowAlertMessage("Message", "Please enter client name !", "A");
        //    return false;
        //}
        if (location.val() == 0) {
            $("#ddlLocations" + rowNumber).focus();
            ShowAlertMessage("Message", "Please select location!", "A");
            return false;
        }
        if (startDate.val().length === 0) {
            startDate.focus()
            ShowAlertMessage("Message", "Please enter start date !", "A");
            return false;
        }
        if (tabStatus !== "P") {

            if (startTime.val().length === 0) {
                startTime.focus();
                ShowAlertMessage("Message", "Please enter start time !", "A");
                return false;
            }
            if (endTime.val().length === 0) {
                endTime.focus();
                ShowAlertMessage("Message", "Please enter end time !", "A");
                return false;
            }
        }
        if (endDate.val().length === 0) {
            endDate.focus()
            ShowAlertMessage("Message", "Please enter end date !", "A");
            return false;
        }
        if (tabStatus === "T") {
            if (clientRate.val().length === 0) {
                clientRate.focus();
                ShowAlertMessage("Message", "Please enter client rate !", "A");
                return false;
            }
            if (sector.val() == 0) {
                $("#ddlSector" + rowNumber).focus()
                ShowAlertMessage("Message", "Please select sector!", "A");
                return false;
            }
            if (role.val() == 0) {
                $("#ddlJobRole" + rowNumber).focus();
                ShowAlertMessage("Message", "Please select role!", "A");
                return false;
            }
            if (shiftType.val() == 0) {
                $("#ddlShiftType" + rowNumber).focus();
                ShowAlertMessage("Message", "Please select shift type!", "A");
                return false;
            }
        }
        else {
            if (shiftCost.val().length === 0) {
                shiftCost.focus();
                ShowAlertMessage("Message", "Please enter total rate !", "A");
                return false;
            }
            if (sector.val() == 0) {
                $("#ddlSector" + rowNumber).focus()
                ShowAlertMessage("Message", "Please select sector!", "A");
                return false;
            }
            if (role.val() == 0) {
                $("#ddlJobRole" + rowNumber).focus();
                ShowAlertMessage("Message", "Please select role!", "A");
                return false;
            }
        }
        if (duration.val().length === 0) {
            duration.focus();
            ShowAlertMessage("Message", "Please enter duration !", "A");
            return false;
        }
        if (tabStatus === "P") {
            if (startDate.val() === endDate.val()) {
                endDate.focus();
                ShowAlertMessage("Message", "Start and end date can't be same !", "A");
                return false;
            }
        }
        postedJobs = {
            "Emp_Id": 0,
            "Job_Type": jobType,
            "Location_Id": location.val(),
            "Start_DateTime": ConvertDateFormate(startDate.val()) + " " + (tabStatus === "P" ? '00:00am' : startTime.val()),
            "End_DateTime": ConvertDateFormate(endDate.val()) + " " + (tabStatus === "P" ? '00:00am' : endTime.val()),
            "Client_Rate": tabStatus === "P" ? shiftCost.val() : clientRate.val(),
            "Shift_Cost": shiftCost.val(),
            "Sector_Id": sector.val(),
            "Role_Id": role.val(),
            "Shift_Type_Id": tabStatus === "P" ? 0 : shiftType.val(),
            "It_System_Id": tabStatus === "P" ? 0 : ItSystem.val(),
            "speciality_id": tabStatus === "P" ? specaility.val() : 0,
            "grade_id": tabStatus === "P" ? grade.val() : 0,
            "department": tabStatus === "P" ? (department.val() == "" ? 0 : department.val()) : 0,
            "Source_Id": jobSource.val(),
            "Status_Id": status.val(),
            "org_id": orgId,
            "description": description.val(),
            "break_required": breakRequired.val(),
            "break_time": (breakTime.val().length == 0) ? 0 : breakTime.val(),
            "smart_card_required": smartCardRequired.val(),
            "admin_work_required": (adminWorkRequired == true) ? 1 : 0,
            "on_call_required": (onCallRequired == true) ? 1 : 0,
            "home_visit_required": (homeVisitRequired == true) ? 1 : 0,
            "home_visit_amount": (homeVisitAmt.val().length == 0) ? 0 : homeVisitAmt.val()
        };
        if (tabStatus === "T") {
            var other = "";
            if (description.val() == "" && breakRequired.val() == "0" && smartCardRequired.val() == "0" && adminWorkRequired == false && onCallRequired == false && homeVisitRequired == false)
                other = "NA"
            else
                other = description.val() + (breakRequired.val() == 1 ? ", break {Paid: " + breakTime.val() + " Min }" : "") + (smartCardRequired.val() == 1 ? ", smartcard" : "") + (adminWorkRequired == true ? ", adminwork" : "") + (onCallRequired == true ? ", oncall" : "") + (homeVisitRequired == true ? ", homevisit { £" + homeVisitAmt.val() + " }" : "")
            postedJobPrev = {
                "Sr_No": validatedPostedJobsCounter + 1,
                //"Emp_Name": employeeText.val(),
                "Location": location.text(),
                "Status": status.val() == 1 ? "Live" : "Offline",
                "Start_DateTime": startDate.val() + " " + startTime.val(),
                "End_DateTime": endDate.val() + " " + endTime.val(),
                "Duration": duration.val(),
                "Client_Rate": clientRate.val(),
                "Shift_Cost": shiftCost.val(),
                "Sector": (parseInt(sector.val()) == 0) ? "NA" : sector.text(),
                "Role": (parseInt(role.val()) == 0) ? "NA" : role.text(),
                "Shift_Type": (parseInt(shiftType.val()) == 0) ? "NA" : shiftType.text(),
                "It_System": (parseInt(ItSystem.val()) == 0) ? "NA" : ItSystem.text(),
                "others": other,
                "Job_Source": jobSource.text()

            };
            validatedPostedJobsCounter++;
        }
        else {
            var other = "";
            if (description.val() == "" && breakRequired.val() == "0" && smartCardRequired.val() == "0" && adminWorkRequired == false && onCallRequired == false && homeVisitRequired == false)
                other = "NA"
            else
                other = description.val() + (breakRequired.val() == 1 ? ", break {Paid: " + breakTime.val() + " Min }" : "") + (smartCardRequired.val() == 1 ? ", smartcard" : "") + (adminWorkRequired == true ? ", adminwork" : "") + (onCallRequired == true ? ", oncall" : "") + (homeVisitRequired == true ? ", homevisit { £" + homeVisitAmt.val() + " }" : "")
            postedJobPrev = {
                "Sr_No": validatedPostedJobsCounter + 1,
                //"Emp_Name": employeeText.val(),
                "Location": location.text(),
                "Status": status.val() == 1 ? "Online" : "Offline",
                "Start_DateTime": startDate.val() + " " + (tabStatus === "P" ? '' : startTime.val()),
                "End_DateTime": endDate.val() + " " + (tabStatus === "P" ? '' : endTime.val()),
                "Duration": duration.val(),
                "Total_Cost": shiftCost.val(),
                "Sector": (parseInt(sector.val()) == 0) ? "NA" : sector.text(),
                "Role": (parseInt(role.val()) == 0) ? "NA" : role.text(),
                "Specaility": (parseInt(specaility.val()) == 0) ? "NA" : specaility.text(),
                "Grade": (parseInt(grade.val()) == 0) ? "NA" : grade.text(),
                "Department": (department.val() == "" ? "NA" : department.val()),
                "others": other,
                "Job_Source": (jobSource.text() == '' ? '0' : jobSource.text())
            };
            validatedPostedJobsCounter++;
        }
        arrPostedJob.push(postedJobs);
        arrPostedJobPrev.push(postedJobPrev);
    },
    //Jobs Actions
    fn_calculate_amount: function (e) {        
        var chkVAT = $(e).parents('.shiftform').find(".chkVATRule").attr('id');
        var VAT_Rule;
        if ($("#" + chkVAT).is(':checked'))
            VAT_Rule = true;
        else
            VAT_Rule = false;

        var totalCost = $("#TotalShiftCost");
        //Shif DateTime
        var SiftDateStart = $(e).parents('.shiftform').find(".SiftDateStart").attr('id');
        var SiftTimeStart = $(e).parents('.shiftform').find(".SiftTimeStart").attr('id');
        var SiftDateEnd = $(e).parents('.shiftform').find(".SiftDateEnd").attr('id');
        var SiftTimeEnd = $(e).parents('.shiftform').find(".SiftTimeEnd").attr('id');
        var fromDate = $("#" + SiftDateStart).val();
        var fromTime = $("#" + SiftTimeStart).val();
        var ToDate = $("#" + SiftDateEnd).val();
        var ToTime = $("#" + SiftTimeEnd).val();

        // Actual Datetime
        var ASiftDateStart = $(e).parents('.shiftform').find(".ASiftDateStart").attr('id');
        var ASiftTimeStart = $(e).parents('.shiftform').find(".ASiftTimeStart").attr('id');
        var ASiftDateEnd = $(e).parents('.shiftform').find(".ASiftDateEnd").attr('id');
        var ASiftTimeEnd = $(e).parents('.shiftform').find(".ASiftTimeEnd").attr('id');
        var ABreakInMin = $(e).parents('.shiftform').find(".ABreakInMin").attr('id');
        var AfromDate = $("#" + ASiftDateStart).val();
        var AfromTime = $("#" + ASiftTimeStart).val();
        var AToDate = $("#" + ASiftDateEnd).val();
        var AToTime = $("#" + ASiftTimeEnd).val();

        var txtduration = $(e).parents('.shiftform').find(".totalDuration").attr('id');
        var txtActDuration = $(e).parents('.shiftform').find(".totalActDuration").attr('id');

        var hfduration = $(e).parents('.shiftform').find(".totalDurationInMin").attr('id');
        var hfactduration = $(e).parents('.shiftform').find(".totalActDurationInMin").attr('id');
        //Calculate Amount
        var txtjobType = $(e).parents('.shiftform').find(".jobtype").attr('id');
        var jobtype = $("#" + txtjobType).val();
        var txtHourlyRate = $(e).parents('.shiftform').find(".OfferedHourlyRate").attr('id');
        var txtDoctorHourlyRate = $(e).parents('.shiftform').find(".DoctorPayRatePerHour").attr('id');
        var txtadminFee = $(e).parents('.shiftform').find(".adminFee").attr('id');
        var txtvatamount = $(e).parents('.shiftform').find(".vatamount").attr('id');
        var txtTotalShiftCost = $(e).parents('.shiftform').find(".TotalShiftCost").attr('id');
        var txtShiftCst = $(e).parents('.shiftform').find(".ShiftCost").attr('id');
        var adminFeeInPercent = $(e).parents('.shiftform').find(".AdminFeeInPercent").attr('id');
        var vatInPercent = $(e).parents('.shiftform').find(".VatInPercent").attr('id');
        var vatRule = $("#lblEditVatRule").val();
        var vatPercent = $("#" + vatInPercent).attr('data-val');
        var duration = $("#" + txtduration).val();
        var aduration = $("#" + txtActDuration).val();
        
      
        if (tabStatus == "T") {
            if (fromDate != "" && fromTime != "" && ToDate != "" && ToTime != "") {
                fromDate = ConvertDateFormate(fromDate);
                ToDate = ConvertDateFormate(ToDate);
                var fromDT = fromDate + " " + fromTime;
                var toDT = ToDate + " " + ToTime;
                var startTime = new Date(fromDT);
                var endTime = new Date(toDT);
                var difference = (endTime - startTime); // This will give difference in milliseconds
                var resultInMinutes = (difference / 60000);
                if (resultInMinutes > 0)
                    duration = resultInMinutes;
                else
                    duration = 0;
                var hour = parseInt(resultInMinutes / 60);
                var minutes = parseInt(resultInMinutes % 60);

                if (minutes == 0)
                    $("#" + txtduration).val(parseInt(resultInMinutes / 60));
                else
                    $("#" + txtduration).val(hour + '.' + minutes);
            }
            if (AfromDate != "" && AfromTime != "" && AToDate != "" && AToTime != "") {
                AfromDate = ConvertDateFormate(AfromDate);
                AToDate = ConvertDateFormate(AToDate);
                var AfromDT = AfromDate + " " + AfromTime;
                var AtoDT = AToDate + " " + AToTime;
                var AstartTime = new Date(AfromDT);
                var AendTime = new Date(AtoDT);
                var Adifference = (AendTime - AstartTime); // This will give difference in milliseconds
                var AresultInMinutes = (Adifference / 60000);
                if (AresultInMinutes > 0)
                    aduration = AresultInMinutes;
                else
                    aduration = 0;

                if (!isNaN(parseInt($("#" + ABreakInMin).val())))
                    AresultInMinutes = parseInt(AresultInMinutes) - parseInt($("#" + ABreakInMin).val());
                else
                    AresultInMinutes = parseInt(AresultInMinutes);

                var Ahour = parseInt(AresultInMinutes / 60);
                var Aminutes = parseInt(AresultInMinutes % 60);
                if (Aminutes == 0)
                    $("#" + txtActDuration).val(parseInt(aduration / 60));
                else
                    $("#" + txtActDuration).val(Ahour + '.' + Aminutes);
            }
        }
        else {
            if (fromDate != "" && fromTime != "" && ToDate != "" && ToTime != "") {
                fromDate = ConvertDateFormate(fromDate);
                ToDate = ConvertDateFormate(ToDate);
                var fromDT = fromDate + " " + fromTime;
                var toDT = ToDate + " " + ToTime;
                var startTime = new Date(fromDT);
                var endTime = new Date(toDT);
                var resultInDays = (endTime - startTime); // This will give difference in milliseconds
                resultInDays = resultInDays / (1000 * 60 * 60 * 24);// This will give difference in days
                if (resultInDays > 0) {
                    duration = resultInDays;
                    $("#" + txtduration).val(resultInDays);
                }
                else {
                    duration = 0
                    $("#" + txtduration).val(0);
                }
            }
            if (AfromDate != "" && AfromTime != "" && AToDate != "" && AToTime != "") {
                AfromDate = ConvertDateFormate(AfromDate);
                AToDate = ConvertDateFormate(AToDate);
                var AfromDT = AfromDate + " " + AfromTime;
                var AtoDT = AToDate + " " + AToTime;
                var AstartTime = new Date(AfromDT);
                var AendTime = new Date(AtoDT);
                var AresultInDays = (AendTime - AstartTime); // This will give difference in milliseconds
                AresultInDays = AresultInDays / (1000 * 60 * 60 * 24);// This will give difference in days
                if (AresultInDays > 0) {
                    aduration = AresultInDays;
                    $("#" + txtActDuration).val(AresultInDays);
                }
                else {
                    aduration = 0
                    $("#" + txtActDuration).val(0);
                }
            }
        }

        $("#" + txtHourlyRate).val($("#" + txtHourlyRate).val());
        $("#" + txtadminFee).val($("#" + txtadminFee).val());
        var offerRate = 0, AdminFee = 0, totalOfferedRate = 0, totalAdminFee = 0, adminfee_in_percent = 0;

        //Shift Rate
        if ($("#" + txtHourlyRate).val() !== '') {
            offerRate = parseFloat($("#" + txtHourlyRate).val()).toFixed(2);
            totalOfferedRate = (parseFloat(offerRate) * (duration / 60.0)).toFixed(2);
        }
      
        //Admin Fee
        if ($("#" + txtadminFee).val() !== '') {
            AdminFee = $("#" + txtadminFee).val();
            totalAdminFee = (parseFloat(AdminFee) * (duration / 60.0)).toFixed(2);
        }
   
       //Total Shift cost
        if (parseFloat(totalAdminFee) > 0)
            $("#" + txtShiftCst).val(parseFloat(totalOfferedRate) + parseFloat(totalAdminFee));
        else
            $("#" + txtShiftCst).val(parseFloat(totalOfferedRate));


        //VAT Amount
        var VATAMT = (parseFloat(((parseFloat(totalOfferedRate) + parseFloat(totalAdminFee)) * parseFloat(vatPercent)) / 100.0)).toFixed(2);
      
        if (vatRule == 'VOT' && VAT_Rule == true) {
            jQuery("#" + txtvatamount).val(VATAMT);
            $("#" + txtTotalShiftCost).val((parseFloat((parseFloat(totalOfferedRate) + parseFloat(totalAdminFee))) + parseFloat(VATAMT)).toFixed(2));
        }
        else {
            jQuery("#" + txtvatamount).val("0.0");
            $("#" + txtTotalShiftCost).val((parseFloat(totalOfferedRate) + parseFloat(totalAdminFee)));
        }
            
            
        if (totalAdminFee > 0) {
                adminfee_in_percent = (parseFloat((parseFloat(totalAdminFee) * 100) / parseFloat(totalOfferedRate))).toFixed(8);          }
      
            $("#" + adminFeeInPercent).attr('data-val', adminfee_in_percent);     
     
            totalCost.val(parseFloat($("#" + txtTotalShiftCost).val()) + parseFloat(TotalVAT));
      
        //-------
        if (($("#" + txtHourlyRate).val() == "" || duration == "0")) {
            $("#" + txtTotalShiftCost).val("0.00");
        }
    },
    IsJobDetailsEdited: function () {
        var flag = false;
        $("#editableSection :input").each(function (e) {
            if (!$("#" + this.id).prop('disabled')) {
                if ($(this).attr("type") == "checkbox") {
                    if ($(".chkHiddenValues").val() != $(".chkHiddenValues").attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
                else if ($(this).attr("type") == "radio") {
                    if ($("#rdoBreak").val() != $("#rdoBreak").attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
                else {
                    if (this.value != $("#" + this.id).attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
            }
        });
        return flag;
    },
    getJobDetails: function (jobid, action) {
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsApi + "Get",//url,
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var tblHistory = "", totalCost, vatamt;
                    if (action == 'jobHistory')
                        ns_jobs.GetJobHistory('jobhistory', jobid);
                    else if (action == 'auditHistory') {
                        $("#tblJobHistoryHead").empty();
                        $("#tblJobHistoryBody").empty();
                        $("#tblJobHistoryHead").append(ns_table_template.heading_row(obj.Table));
                        if (obj.Table1.length === 0) {
                            tblHistory += '<tr><td colspan="3" style="text-align:center;">No history available</td></tr>';
                            $("#tblJobHistoryBody").append(tblHistory);
                            tblHistory = "";
                        }
                        else {
                            $.each(obj.Table1, function (key, value) {
                                tblHistory += "<tr>";
                                tblHistory += '<td >' + value.RowNumber + '</td>';
                                tblHistory += '<td >' + value.job_audit_comments + '</td>';
                                tblHistory += '<td >' + value.job_audit_date + " / " + value.job_audit_by_user_name + '</td>';
                                tblHistory += "</tr>";
                                $("#tblJobHistoryBody").append(tblHistory);
                                tblHistory = "";
                            });
                        }
                    }
                    else {
                        $.each(obj, function (key, value) {
                            if (action == "edit") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Update")
                            }
                            if (action == "createinvoice") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Submit")
                            }

                            else if (action == "complete" || action == "recomplete") {
                                if (action == "complete")
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Complete")
                                else
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Recomplete")
                            }
                            else if (action == "audit") {
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Audit")
                            }

                            else if (action == "cancel") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Cancel");
                            }
                            else if (action == "swap") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Swap");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "assign") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Assign");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "delete") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Delete")
                            }
                            else if (action == "restore") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Restore")
                            }
                            else if (action == 'view') {
                                $('#spanDetailJobId').html(jobid);
                                $('#tabjobhistoryDetailsView').attr('data-id', jobid);
                                ns_jobs.JobFullDetail(obj, tabStatus);
                            }
                        });
                    }
                }
                else {
                    //ShowAlertMessage("Error !", response, "A");
                    $('.tbodyJobHistory').html("<tr><td colspan='14'><center>Not Available !</center></td></tr>");
                }
            });
    },
    fn_Edit_Complete_ReComplete_Audit_Detail: function (value, action, btnTxt) {
        $('#divCreateInvoiceSection').hide();
        if (action == "edit") {
            $("#btnHistoryIcon").text("View Job History");
            $("#viewHistory").show('slow');
            $("#auditJob").hide("slow");
            $(".editRowOptional").hide("slow");
            $(".tblHistory").hide("slow");
            $('.editRow').show("slow");
            $('.actualrow').hide("slow");
            $('.editRow').prop('disabled', '');
            if (tabStatus == "T") {
                $("#lblDurationType").text("Duration(hrs)");
                $(".editRowOptionalP").hide('slow');
            }
            else {
                $("#txtEditStartTime").prop('disabled', 'disabled');
                $("#txtEditEndTime").prop('disabled', 'disabled');
                $("#lblDurationType").text("Duration(days)");
                $(".editRowOptionalP").hide('slow');
                $('.editRowP').prop('disabled', '');
            }
            $("#btnEditSave").text(btnTxt).attr('data-action', 'update').addClass('isDetailChanged');
            $("#btnEditSave").text(btnTxt).attr('data-val', value.job_id);
        }
        if (action == "createinvoice") {
            $('#divCreateInvoiceSection').show();
            $('input:radio[name=rdoInvAuth]').filter('[value=1]').prop('checked', true);
            $('#divInvComment').hide();
            $('#txtCommentsAuth').val('');
            $('#chkCreateInv').prop('checked', false);

            $("#btnHistoryIcon").text("View Job History");
            $("#viewHistory").show('slow');
            $("#auditJob").hide("slow");
            $(".editRowOptional").hide("slow");
            $(".tblHistory").hide("slow");
            $('.editRow').show("slow");
            $('.actualrow').show("slow");
            $('.editRow').prop('disabled', '');
            if (tabStatus == "T") {
                $("#lblDurationType").text("Duration(hrs)");
                $(".editRowOptionalP").hide('slow');
            }
            else {
                $("#txtEditStartTime").prop('disabled', 'disabled');
                $("#txtEditEndTime").prop('disabled', 'disabled');
                $("#lblDurationType").text("Duration(days)");
                $(".editRowOptionalP").hide('slow');
                $('.editRowP').prop('disabled', '');
            }


            $('#txtEditActStartDate').val((value.from_datetime_actual24.split(" ")[0] != "" ? value.from_datetime_actual24.split(" ")[0] : value.job_start_datetime24.split(" ")[0]));
            $('#txtEditActStartTime').val((value.from_datetime_actual24.split(" ")[1] != "" ? value.from_datetime_actual24.split(" ")[1] : value.job_start_datetime24.split(" ")[1]));
            $('#txtEditActEndDate').val((value.to_datetime_actual24.split(" ")[0] != "" ? value.to_datetime_actual24.split(" ")[0] : value.job_end_datetime24.split(" ")[0]));
            $('#txtEditActEndTime').val((value.to_datetime_actual24.split(" ")[1] != "" ? value.to_datetime_actual24.split(" ")[1] : value.job_end_datetime24.split(" ")[1]));
            $('#txtEditActDuration').val(value.job_duration_in_days).attr('data-val', value.job_duration_in_days);
            $('#txtEditActBreakInMin').val(value.break_in_min);////////////////////////

            $('#txtEditActNoOfHomeVisit').val((value.cnd_no_of_home_visit == "" ? 0 : value.cnd_no_of_home_visit));


            $("#btnEditSave").text(btnTxt).attr('data-action', 'createinvoice').addClass('isDetailChanged');
            $("#btnEditSave").text(btnTxt).attr('data-val', value.job_id);
        }

        else if (action == "complete" || action == "recomplete" || action == "audit") {
            if (action == "audit") {
                $("#viewHistory").show('slow');
                $(".tblHistory").hide('slow');
                $("#auditJob").show("slow");
                $("#btnHistoryIcon").text("View Audit History");
                $("#txtJobAuditComment").val(value.job_audit_comments);
                //$(".actRow").prop("disabled", "disabled");
                if (tabStatus == "T") {
                    $("#lblDurationType").text("Duration(hrs)");
                    $("#lblActDurationType").text("Duration(hrs)");
                    $(".editRowOptionalP").hide('slow');
                }
                else {
                    $("#lblDurationType").text("Duration(days)");
                    $("#lblActDurationType").text("Duration(days)");
                    $(".editRowOptionalP").show('slow');
                    $('.editRowP').show("slow");
                    //$('.editRowP').prop("disabled", "disabled");
                }
            }
            else {
                $("#viewHistory").hide('slow');
                $("#auditJob").hide("slow");
                $('.actRow').prop('disabled', '');
                $("#txtEditActDuration").prop('disabled', 'disabled');
                if (tabStatus == "T") {
                    $("#lblDurationType").text("Duration(hrs)");
                    $("#lblActDurationType").text("Duration(hrs)");
                    $(".editRowOptionalP").hide('slow');
                }
                else {
                    $("#txtEditStartTime").prop('disabled', 'disabled');
                    $("#txtEditEndTime").prop('disabled', 'disabled');
                    $("#txtEditActStartTime").prop('disabled', 'disabled');
                    $("#txtEditActEndTime").prop('disabled', 'disabled');
                    $("#lblDurationType").text("Duration(days)");
                    $("#lblActDurationType").text("Duration(days)");

                    $(".editRowOptionalP").show('slow');
                    $('.editRowP').show("slow");
                    $('.editRowP').prop('disabled', 'disabled');
                }
            }

            $("#btnEditSave").text(btnTxt).attr('data-action', action);
            $("#btnEditSave").text(btnTxt);
            $("#btnEditSave").attr('data-val', value.job_id);
            $(".tblHistory").hide('slow');
            $(".actualrow").show("slow");
            $('.editRow').show("slow");
            $('.editRowOptional').show("slow");
            $('.editRowOptional').prop('disabled', 'disabled');
            //$('.editRow').prop('disabled', 'disabled');
            $('#txtEditActStartDate').val((value.from_datetime_actual24.split(" ")[0] != "" ? value.from_datetime_actual24.split(" ")[0] : value.job_start_datetime24.split(" ")[0]));
            $('#txtEditActStartTime').val((value.from_datetime_actual24.split(" ")[1] != "" ? value.from_datetime_actual24.split(" ")[1] : value.job_start_datetime24.split(" ")[1]));
            $('#txtEditActEndDate').val((value.to_datetime_actual24.split(" ")[0] != "" ? value.to_datetime_actual24.split(" ")[0] : value.job_end_datetime24.split(" ")[0]));
            $('#txtEditActEndTime').val((value.to_datetime_actual24.split(" ")[1] != "" ? value.to_datetime_actual24.split(" ")[1] : value.job_end_datetime24.split(" ")[1]));
            $('#txtEditActDuration').val(value.job_duration_in_days).attr('data-val', value.job_duration_in_days);
            if (action == "recomplete" || action == "audit")
                $('#txtEditActBreakInMin').val(value.break_in_min);
            else
                $('#txtEditActBreakInMin').val(value.job_break_in_min);
            $('#txtEditActNoOfHomeVisit').val((value.cnd_no_of_home_visit == "" ? 0 : value.cnd_no_of_home_visit));
        }
        if (value.job_home_visit_required == '1') {
            $("#tdHomeVisit").show("slow");
            $("#tdActHmVst").show("slow");
            $('#txtEditNoOfHomeVisit').val(value.cnd_no_of_home_visit);
            $("#tdActHmVst").val(value.cnd_no_of_home_visit);
        }
        else {
            $("#tdHomeVisit").hide("slow");
            $("#tdActHmVst").hide("slow");
            $('#txtEditNoOfHomeVisit').val(0);
            $("#tdActHmVst").val(0);
        }
        if (value.job_break_required == "1") {
            $("#tdActBreakInMin").show("slow");
            $("#tdBreakInMin").show("slow");
            if (action == "createinvoice" || action == "recomplete" || action == "audit")
                $('#txtEditActBreakInMin').val(value.break_in_min);
            else
                $('#txtEditActBreakInMin').val(value.job_break_in_min);
            $('#txtEditBreakInMin').val(value.job_break_in_min);
        }
        else {
            $("#tdActBreakInMin").show("slow");
            $("#tdBreakInMin").hide("slow");
            $('#txtEditBreakInMin').val(0);
            if (action == "createinvoice" || action == "recomplete" || action == "audit")
                $('#txtEditActBreakInMin').val(value.break_in_min);
            else
                $('#txtEditActBreakInMin').val(value.job_break_in_min);
        }
        if (value.job_break_required == "1") {
            $('#rdoEditBreakPaid').prop('checked', 'checked');
            $("#rdoBreak").attr('data-val', 'paid').val('paid');
            $("#tdBreakInMin").show("slow");
        }
        else {
            $('#rdoEditBreakUnPaid').prop('checked', 'checked');
            $("#rdoBreak").attr('data-val', 'unpaid').val('unpaid');
            $("#tdBreakInMin").hide("slow");
        }
        if (value.job_home_visit_required == "1") {
            $('#chkHomeVisit').prop('checked', 'checked');
            $("#chkHmVst").attr('data-val', 'visit').val('visit');
            $("#tdHomeVisit").show("slow");
        }
        else {
            $('#chkHomeVisit').prop('checked', '');
            $("#chkHmVst").attr('data-val', 'unvisit').val('unvisit');
            $("#tdHomeVisit").hide("slow");
        }
        if (value.job_smart_card_required == "1") {
            $('#chkSmartCard').prop('checked', 'checked');
            $("#chkSmtCrd").attr('data-val', 'visit').val('visit');
        }
        else {
            $('#chkSmartCard').prop('checked', '');
            $("#chkSmtCrd").attr('data-val', 'unvisit').val('unvisit');
        }
        if (value.job_on_call_required == "1") {
            $('#chkOnCall').prop('checked', 'checked');
            $("#chkOnCal").attr('data-val', 'visit').val('visit');
        }
        else {
            $('#chkOnCall').prop('checked', '');
            $("#chkOnCal").attr('data-val', 'unvisit').val('unvisit');
        }
        if (value.job_admin_work_required == "1") {
            $('#chkAdminWork').prop('checked', 'checked');
            $("#chkAdWrk").attr('data-val', 'visit').val('visit');
        }
        else {
            $('#chkAdminWork').prop('checked', '');
            $("#chkAdWrk").attr('data-val', 'unvisit').val('unvisit');
        }
        if (value.job_vat_status == "1") {
            $('#chkVatYes').prop('checked', 'checked');
            $("#chkVt").attr('data-val', 'visit').val('visit');
        }
        else {
            $('#chkVatYes').prop('checked', '');
            $("#chkVt").attr('data-val', 'unvisit').val('unvisit');
        }
        //Permanent
        if (tabStatus == "P") {
            $("#txtEditJobReferenceP").val((value.job_ref_no == null || "" ? "" : value.job_ref_no)).attr('data-val', (value.job_ref_no == null || "" ? "" : value.job_ref_no));
            $("#txtEditPaySchemeP").val((value.job_pay_scheme == null || "" ? "" : value.job_pay_scheme)).attr('data-val', (value.job_pay_scheme == null || "" ? "" : value.job_pay_scheme));
            $("#txtEditWorkingPatternP").val((value.job_working_pattern == null || "" ? "" : value.job_working_pattern)).attr('data-val', (value.job_working_pattern == null || "" ? "" : value.job_working_pattern));
            $("#txtEditPayBandP").val((value.job_pay_band == null || "" ? "" : value.job_pay_band)).attr('data-val', (value.job_pay_band == null || "" ? "" : value.job_pay_band));
            $("#txtEditGroupReferenceP").val((value.job_staff_group == null || "" ? "" : value.job_staff_group)).attr('data-val', (value.job_staff_group == null || "" ? "" : value.job_staff_group));
            $("#txtEditJobUrlP").val((value.job_url == null || "" ? "" : value.job_url)).attr('data-val', (value.job_url == null || "" ? "" : value.job_url));
            $("#txtEditDepartmentP").val((value.job_department == null || "" ? "" : value.job_department)).attr('data-val', (value.job_department == null || "" ? "" : value.job_department));
        }

        //Temprary
        $(".adminFee").val(0);
        $(".ShiftCost").val(0);
        $(".vatamount").val(0);
        $(".TotalShiftCost").val(0);

        if (action == "createinvoice")
            $('#editPopupHeading').text(" Update & confirm " + (tabStatus == "P" ? "the Permanent jobs " : "the Temporary jobs "));
        else
            $('#editPopupHeading').text((tabStatus == "P" ? "Permanent " : "Temprary ") + "Job - " + btnTxt);

        $("#btnOptionalIcon").removeClass("zmdi zmdi-minus mrgn-t5").addClass("zmdi zmdi-plus mrgn-t5");
        $("#btnHistoryIcon").removeClass("zmdi zmdi-minus mrgn-t5").addClass("zmdi zmdi-plus mrgn-t5");
        $('#lblEditJobId').html(value.job_id + " / " + value.job_role_alias);
        $('#lblEditClient').html("&nbsp;&nbsp;" + (value.job_emp_name));
        $('#lblEditLocation').html("&nbsp;&nbsp;" + (value.job_location_name));
        $('#lblEditJobStatus').text(value.job_status_label);
        $('#lblEditAssignedCnd').html("&nbsp;&nbsp;" + (value.cnd_name == null ? 'NA' : value.cnd_name));
        $('#lblEditAssignedCndPhone').html("&nbsp;&nbsp;" + (value.job_location_phone == null ? "NA" : value.job_location_phone));
        $('#lblEditVatRule').val(value.vat_rule);
        $('#txtEditClientRate').val(value.job_rate_emp).attr("data-val", value.job_rate_emp);
        $('#txtEditAssignedCndRate').val(value.job_rate_cnd).attr("data-val", value.job_rate_cnd);
        (tabStatus == "T" ? $('#txtEditDuration').val(value.job_duration_in_hour).attr('data-val', value.job_duration_in_min) : $('#txtEditDuration').val(value.job_duration_in_days).attr('data-val', value.job_duration_in_days));
        $('#txtEditStartDate').val(value.job_start_datetime24.split(" ")[0]).attr('data-val', value.job_start_datetime24.split(" ")[0]);
        $('#txtEditStartTime').val(value.job_start_datetime24.split(" ")[1]).attr('data-val', value.job_start_datetime24.split(" ")[1]);
        $('#txtEditEndDate').val(value.job_end_datetime24.split(" ")[0]).attr('data-val', value.job_end_datetime24.split(" ")[0]);
        $('#txtEditEndTime').val(value.job_end_datetime24.split(" ")[1]).attr('data-val', value.job_end_datetime24.split(" ")[1]);

        $('#txtEditBreakInMin').val(value.job_break_in_min).attr('data-val', value.job_break_in_min);
        $('#txtEditHomeVisitAmt').val(value.job_home_visit_amount).attr('data-val', value.job_home_visit_amount);
        $('#txtEditDescription').val(value.job_description).attr('data-val', value.job_description);
        $('#txtEditVatAmt').attr('data-val', value.job_vat_in_percent);

        $('#txtEditAdminFees').attr('data-val', value.job_admin_fee_in_percent);

        $('#txtEditAdminFees').val(parseFloat(value.admin_fee_hourly).toFixed(2));
        
        $('#txtEditAdminFeeInPercent').val(value.job_admin_fee_in_percent);

        //Set default Role
        $('#txtjobRoleEdit').val(value.job_role_id);
        $('#txtjobRoleEdit').attr('data-current-role-id', value.job_role_id);

        $('#spaneditjobroleDdl').hide();
        $('#spaneditjobroleLbl').show('slow');
        $('#btnEditrole').attr('data-action', 'edit');
        $('#btnEditrole').attr('title', 'Edit Job Role');
        $('#btnEditrole').html('<i class="zmdi zmdi-edit"></i>Edit');

        //Set default Location
        jQuery('#ddlLocationEdit').val(value.job_location_id);
        $('#ddlLocationEdit').attr('data-current-location-id', value.job_location_id);

        $('#spaneditjobLocationDdl').hide();
        $('#spaneditjobLocationLbl').show('slow');
        $('#btnEditLocation').attr('data-action', 'edit');
        $('#btnEditLocation').attr('title', 'Edit Job Location');
        $('#btnEditLocation').html('<i class="zmdi zmdi-edit"></i>Edit');
        ns_roleMaster.getAllActiveRoles('jobRoleEdit');
        ns_jobs.getEmployerLocation(value.emp_id);

        ns_jobs.fn_calculate_amount($("#btnEditSave"));
    },
    fn_Cancel_Swap_Assign_Detail: function (value, action, btnTxt) {
        $(".clrText").text("");
        $(".clrText").val("");
        $("#txtJobComment").val("");
        $(".chkClear").prop("checked", "");
        if (action == "cancel") {
            $("#rowRates").show("slow");
            $("#swappedRow").hide("slow");
            $("#keepJob").show("slow");
            $("#rowCNDRate").hide("slow");
            $("#empRateRow").hide("slow");
            $("#CNDDetail").show("slow");
            $("#txtJobComment").show("slow");

        }
        else if (action == "swap") {
            $("#rowRates").hide("slow");
            $("#swappedRow").show("slow");
            $("#rowCNDRate").show("slow");
            $("#empRateRow").show("slow");
            $("#CNDDetail").show("slow");
            $("#keepJob").hide("slow");
            $("#txtJobComment").show("slow");
            $("#txtEmpRate").val(value.job_rate_emp);
            $("#txtCNDRate").val(value.job_rate_cnd);

        }
        else if (action == "assign") {
            console.log(value.job_rate_emp);
            $("#txtJobComment").hide("slow");
            $("#rowCNDRate").show("slow");
            $("#empRateRow").show("slow");
            $("#CNDDetail").hide("slow");
            $("#rowRates").hide("slow");
            $("#swappedRow").show("slow");
            $("#keepJob").hide("slow");
            $("#txtEmpRate").val(value.job_rate_emp);
            $("#txtCNDRate").val(value.job_rate_cnd);
        }

        $('#modelHeading').text((tabStatus == "P" ? "Permanent " : "Temprary ") + "Job - " + btnTxt);

        $("#btnBookedSave").text(btnTxt).attr('data-val', value.job_id).attr('data-action', action);
        $('#lblBookedJobId').html(value.job_id + " / " + value.job_role_alias);
        $('#lblBookedCandidate').html("&nbsp;&nbsp;" + (value.cnd_name == null ? "NA" : (value.cnd_name)));
        $('#lblBookedCandidate').attr('data-val', (value.cnd_id == null ? 0 : value.cnd_id));
        $('#lblBookedCandidateRate').html("&nbsp;&nbsp; £" + (value.job_rate_cnd));
        $('#lblBookedEmployerName').html("&nbsp;&nbsp;" + (value.job_emp_name));
        $('#lblBookedJobLocation').html("&nbsp;&nbsp;" + (value.job_location_name));
        $('#lblBookedJobStatus').text(value.job_status_label);
        $('#lblBookedStartDate').html("&nbsp;&nbsp;" + value.job_start_datetime24.split(" ")[0]);
        $('#lblBookedStartTime').html("&nbsp;&nbsp;" + value.job_start_datetime24.split(" ")[1]);
        $('#lblBookedEndDate').html("&nbsp;&nbsp;" + value.job_end_datetime24.split(" ")[0]);
        $('#lblBookedEndTime').html("&nbsp;&nbsp;" + value.job_end_datetime24.split(" ")[1]);
        $('#lblBookedCandidatePhone').html("&nbsp;&nbsp;" + (value.job_location_phone == null ? "NA" : value.job_location_phone));
        $('#lblBookedJobRate').html("&nbsp;&nbsp; £" + value.job_rate_emp);
        $('#lblBookedJobDuration').html("&nbsp;&nbsp;" + (value.job_duration_in_hour) + ' ' + (tabStatus == "P" ? 'Day(s)' : 'hr(s)'));
        $(".modelcomments").modal("show");
    },
    fn_Delete_Restore_Detail: function (value, action, btnTxt) {
        $("#lblJobId").html("Do you want to " + action + " the following job(s)?<br><br><span class='col-black'>JOB#:  " + ((btnTxt == "Delete" || btnTxt == "Restore") ? value.job_id : value) + "</span>")
        //$("#popupDeleteHeading").html("Job - " + btnTxt)
        $("#popupDeleteHeading").html("Confirmation Message!")
        $(".delete").attr('data-val', ((btnTxt == "Delete" || btnTxt == "Restore") ? value.job_id : value)).attr('data-action', action);
        $(".modeldelete").modal("show");
    },
    jobs_actions: function (params) {
        ns_ajax.post(
            urls.jobsApi + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");
                    $('.modeledit').modal('hide');
                    $('.modelcomments').modal('hide');
                    $('.modeldelete').modal('hide');
                    //$('.ModalCreateInvoice').modal('hide');                
                    $(".modal-backdrop").css('display', 'none');
                    var ParamData = JSON.parse(params);

                    var action = ParamData[0]['Action'];
                    var jobid = ParamData[0]['job_Id'];
                    if (action == 'CreateInvoice') {
                     /*   $('#ModalSysGenerateTimesheet').modal('show');*/
                      /*  $(".modal-backdrop").css('display', 'block');*/
                       /* ns_Accounts.getTimesheet(jobid);*/
                        ns_BookedJobs.search();

                    }
                    if (action == 'Complete') {
                        ns_BookedJobs.search();
                    }
                    if (action == 'Edit') {
                        ns_OpenJobs.search();
                        ns_BookedJobs.search();
                    }
                }
            });
    },
    JobFullDetail: function (obj, type) {
        var str = '';
        $('#clsJobDetailsBoth').html(str);
        if (type == 'T') {
            $.get("/Template/jobs_tmpl.html", null, function (jobTemp) {
                $(jobTemp).appendTo("body");
                $('#scriptTemporaryJobDetailsTemplate').tmpl(obj).appendTo("#clsJobDetailsBoth");
            });
        }
        else if (type == 'P') {
            $.get("/Template/jobs_tmpl.html", null, function (jobTemp) {
                $(jobTemp).appendTo("body");
                $('#scriptPermJob').tmpl(obj).appendTo("#clsJobDetailsBoth");
            });
        }
    },
    fn_IsJobDetailsEdited: function () {
        var flag = false;
        $("#editableSection :input").each(function (e) {
            if (!$("#" + this.id).prop('disabled')) {
                if ($(this).attr("type") == "checkbox") {
                    if ($(".chkHiddenValues").val() != $(".chkHiddenValues").attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
                else if ($(this).attr("type") == "radio") {
                    if ($("#rdoBreak").val() != $("#rdoBreak").attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
                else {
                    if (this.value != $("#" + this.id).attr('data-val')) {
                        flag = true;
                        return false;
                    }
                }
            }
        });
        return flag;
    },
    GetUploadedJobFiles: function (jobAction, jobid, fileDeleteStatus) {
        var Param = { JobId: jobid, JobAction: jobAction, FileDeleteStatus: fileDeleteStatus };
        ns_ajax.get(
            urls.jobsApi,
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), row = "", index = 1;
                    $.each(obj, function (key, value) {
                        row += '<tr id="JTFile-' + value.id + '">' +
                            '<td>' + index + '</td>' +
                            '<td><span><b>' + value.file_type + '</b></span></td>' +
                            '<td><i class="zmdi zmdi-time"></i> ' + value.upload_date + '</td>' +
                            '<td><span><b>' + value.file_upload_by + '</b></span></td>' +
                            '<td><div class="tdmwidth nowrap">' + value.file_description + '</div></td>' +
                            '<td>' +
                            '<a class="btn btn-outline-primary btn-sm btnViewTimesheet" data-action="timesheet" data-file-id="' + value.id + '" data-file-name="' + value.filepath + '" data-file-title="' + value.file_type + '" data-target="#ViewJobFile" data-toggle="tooltip" title="View file"><i class="zmdi zmdi-eye">&nbsp</i></a>&nbsp' +
                            '<a class="btn btn-outline-danger btn-sm clsDeleteJobFile" data-file-id="' + value.id + '" data-file-title="' + value.file_type + '" data-toggle="tooltip" title="Delete file"><i class="zmdi zmdi-delete">&nbsp</i></a>' +
                            '</td>' +
                            '</tr>';
                        index += 1;
                    });

                    $('.tbodyjobfiles').html(row);
                }
                else
                    $('.tbodyjobfiles').html("<tr><td colspan='6'><center>" + response + "<br/></center></td></tr>");
            });
    },
    UploadJobFile: function (data, jobid, jobAction, fileName) {
        $.ajax({
            type: "POST",
            url: "/jobs/UploadJobFile",
            data: data,
            dataType: "JSON",
            processData: false,
            contentType: false,
            success: function (response) {
                if (response == "OK") {
                    ShowAlertMessage("Message", "" + fileName + " uploaded successfully", 'C');
                    $('#txtFileName').val('');
                    $('#UploadedJobFile').val('');

                    $('#ddlFiletype').val('');
                    $('#UploadedJobFileInv').val('');
                    $('#txtFileDescription').val('');

                    ns_jobs.GetUploadedJobFiles(jobAction, jobid, 0);
                }
                else
                    ShowAlertMessage("Message", response, 'A');
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                ShowAlertMessage("Error", errorThrown, 'A');
            }
        });
    },
    viewFile: function (fileId, fileName) {
        var param = { fileId: fileId, fileName: fileName };
        ns_ajax.get(
            urls.getFileApi + "timesheet",
            param,
            function (response) {
                if (response.split('##')[0] == "OK") {
                    var filePath = response.split('##')[1];
                    $('#BindJobFile').show().attr('src', filePath);
                }
                else {
                    $('#BindJobFile').show().attr('src', '');
                    ShowAlertMessage("Message", response, 'A');
                }
            });
    },
    GetAllTrackingHistory: function (activity_code_id, activity_code, clsOrIdName) {
        var Param = { ActivityCodeId: activity_code_id, ActivityCode: activity_code, };
        ns_ajax.get(
            '/jobs/GetAllTrackingHistory',
            Param,
            function (response) {

                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), TrackingHistory = "", index = 1;
                    $.each(obj, function (key, value) {
                        TrackingHistory += '<article class="timeline-entry">' +
                            '<div class="timeline-entry-inner">' +
                            '<time class="timeline-time"><span>' + value.date + '&nbsp;&nbsp;</span></time>' +
                            '<div class="timeline-icon bg-primary"><b>' + value.time + '</b></div>' +
                            '<div class="timeline-label">' +
                            '<h2><b class="col-green font-16">' + value.action + '</b> <span> by ' + value.user + '</span></h2>' +
                            '<p>' + value.message + '</p>' +
                            '</div>' +
                            '</div>' +
                            '</article>';
                    });
                    $(clsOrIdName).html(TrackingHistory);
                }
                else
                    $(clsOrIdName).html("<div><center>" + response + "<br/></center></div>");
            });
    },
    GetJobHistory: function (jobAction, jobId) {
   
        $('.tbodyJobHistory').html('<tr><td colspan="14"><div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td></tr>');
        var param = { jobid: jobId, action: jobAction };
        ns_ajax.get(
            urls.jobsApi + "Get",
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), JobHistory = "";
                    $.each(obj, function (key, value) {
                        JobHistory += '<tr>' +
                            '<td>' + value.RowNumber + '</td>' +
                            '<td>' +
                            '<span class="col-grey">' +
                            '<i class="zmdi zmdi-calendar">&nbsp</i><b>' + value.job_start_datetime2.split(' ')[0] + '</b>' +
                            '</span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-green"><i class="zmdi zmdi-time">&nbsp</i><b>' + value.job_start_datetime2.split(' ')[1] + '</b></span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-grey">' +
                            '<i class="zmdi zmdi-calendar">&nbsp</i><b>' + value.job_end_datetime2.split(' ')[0] + '</b>' +
                            '</span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-green">' +
                            '<i class="zmdi zmdi-time">&nbsp</i><b>' + value.job_end_datetime2.split(' ')[1] + '</b>' +
                            '</span>' +
                            '</td>' +
                            '<td>' +
                            '<b>' + value.job_duration + '</b>' +
                            '</td>' +
                            '<td align="center">' +
                            '<span class="col-green"><b>£' + value.job_rate_emp + '</b></span>' +
                            '</td>' +
                            '<td align="center">' +
                            '<span class="col-blue"><b>£' + value.job_rate_cnd + '</b></span>' +
                            '</td>' +
                            '<td align="center">' +
                            '<span><b>' + value.job_admin_fee_in_percent + '</b></span>' +
                            '</td>' +
                            '<td align="center">' + value.job_vat_in_percent + '</td>' +
                            '<td>' +
                            '<span class="' + (value.job_vat_status == 1 ? ' col-green' : ' col-red') + '">' + value.vat_status + '</span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-green"><b>' + value.job_total_cost + '</b></span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-grey">' +
                            '<i class="zmdi zmdi-time">&nbsp;</i><b>' + value.job_update_date2 + '</b>' +
                            '</span>' +
                            '</td>' +
                            '<td>' +
                            '<span class="col-blue">' +
                            '<b>' + value.job_update_by_user_name + '</b>' +
                            '</span>' +
                            '</td>' +
                            '</tr>';
                    });
                    $('.tbodyJobHistory').html(JobHistory);
                }
                else
                    $('.tbodyJobHistory').html("<tr><td colspan='14'><center style='padding:20px;'>Not Available !</center></td></tr>");
            });
    },
    DeleteJobFile: function (fileId, fileTitle) {
        var Param = "{FileId: '" + fileId + "'}";
        try {
            ns_ajax.post(
                '/jobs/DeleteJobFile',
                Param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "" + fileTitle + " file deleted successfully.", 'C');
                        $("#JTFile-" + fileId).hide();
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    DownloadFile: function (fileId, fileName, fileType) {
        var Param = { FileId: fileId, FileName: fileName, fileType: fileType };
        try {
            ns_ajax.get(
                "/jobs/DownloadFile",
                Param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "" + fileType + " file downloaded successfully.", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },

    getJobFileAndTimesheet: function (fileId, fileName, jobAction) {
        jobAction = (jobAction == 'timesheet' ? 'timesheet' : 'jobfile');
        var param = { fileId: fileId, fileName: fileName };
        ns_ajax.get(
            urls.getFileApi + jobAction,
            param,
            function (response) {
                if (response.split('##')[0] == "OK") {
                    var filePath = response.split('##')[1];
                    $('#BindJobFile').attr('src', filePath);
                }
                else {
                    $('#BindJobFile').show().attr('src', '');
                    ShowAlertMessage("Message", response, 'A');
                }
            });
    },
    getEmployerLocation: function (emp_id) {
        var param = { dro: 'l', tp: 'T', si: emp_id };
        ns_ajax.get(urls.jobsApi + 'Get',
            param,
            function (responseBack) {
                if (responseBack.split('|')[0] === 'OK') {
                    locationOptions = $.parseJSON(responseBack.split('|')[1]);
                    $("#ddlLocationEdit").empty();
                    $('#ddlLocationEdit').append($('<option/>', {
                        value: 0,
                        text: "Choose any . . ."
                    }));
                    $.each(locationOptions.locations, function (index, row) {
                        $('#ddlLocationEdit').append($("<option     />").val(this.Id).text(this.Name));
                    });
                }
            });
    },
   
    getJobApplications: function (jobId) {
        $('#Job_Applications_Placeholder').html("");
        var Param = { jobid: jobId, action: 'jobapps' };
        ns_ajax.get(
            urls.jobsApi + "Get",
            Param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    call_tmpl_binder(obj, '/Template/jobs_tmpl.html', '#Job_Applications_Template', '#Job_Applications_Placeholder');
                }
                else
                    $('#Job_Applications_Placeholder').html("<center>" + response + "</center>");
            });
    },


    getTimesheet: function (jobid) {
        $('#BindJobFile').attr('src', '/images/process.gif');
        var param = { fileId: jobid, fileName: '' };
        ns_ajax.get(
            urls.getFileApi + 'timesheet',
            param,
            function (response) {
                if (response.split('##')[0] == "OK") {
                    var filePath = response.split('##')[1];
                    if (filePath == 'Required file name')
                        $('#BindJobFile').show().attr('src', '/images/file-not-uploaded.jpg');
                    else
                        $('#BindJobFile').attr('src', filePath);
                }
                else {
                    $('#BindJobFile').show().attr('src', '/images/file-not-uploaded.jpg');
                    //ShowAlertMessage("Message", response, 'A');
                }
            });
    },


    cancelRelocatedJob: function (params) {
        ns_ajax.post(
            urls.jobsApi + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");             
                }
            });
    },

    UpdatePayrollReference: function (params, jobid,reference) {
        ns_ajax.post(
            urls.jobsApi + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    $('#payrollRef-' + jobid).hide();
                    $('#lbl_payroll_reference-' + jobid).html(reference);
                    $('#payrollRefView-' + jobid).show();

                    ShowAlertMessage("Message", response.split('|')[1], "C");
                }
                else {
                    ShowAlertMessage("Message", response, "S");
                }
            });
    },
    
}

ns_feedback = {
    GetProfileFeedQueList: function () {
        ns_ajax.get(
            urls.feedbackApi + 'FeedbackQuetions',
            '',
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    if (obj.Feedback.length > 0) {
                        call_tmpl_binder(obj, '/Template/feedback_tmpl.html', '#Profile_Feedback_Template', '#Feedback_Report_Placeholder');
                    }
                    else
                        ShowAlertMessage("Message", response, "A");
                }
            });
    },
    SendFeedback: function () {
        var validateQue = 1;
        var obj = [], count = 0;
        var job_id = $('#btnSubmitUserFeedback').attr('data-id');
        if (job_id == '0' || job_id == '') {
            ShowAlertMessage("Message", "Job# not found ! Please try again.", "A");
            return false;
        }
        $('.clsUserInput').each(function () {
            var val = '';
            var itemid = $(this).attr('data-id');
            var cntrl_type = $(this).attr('data-control-type');
            if (cntrl_type == 'chk' || cntrl_type == 'rdo' || cntrl_type == 'rating') {
                $('.clsChkItem-' + itemid).each(function () {
                    IsChecked = $(this).is(':checked');
                    if (IsChecked == '1') {
                        cntrl_type == 'chk' ? val += $(this).val() + ',' : val = $(this).val();
                        validateQue++;
                    }
                });
                val = cntrl_type == 'chk' ? val.slice(0, -1) : val;
            }
            else if (cntrl_type == 'txt' || cntrl_type == 'ddl') {
                val = $('#txt-' + itemid).val();
                (val == '' || val == '0') ? '' : validateQue++;
            }

            count++;
            obj.push({
                srno: count,
                item_id: itemid,
                item_possible_answer: val,
                job_id: job_id,
            });
        });

        if (validateQue == 1) {
            obj = [];
            ShowAlertMessage("Message", "Give Answer atleast one question.! ", "A");
            return false;
        }
        if (obj.length > 0) {
            var param = "['" + JSON.stringify(obj) + "']";
            ns_ajax.post(
                urls.feedbackApi + 'feedback',
                param,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        ShowAlertMessage("Message", "Feedback submitted successfully.", "C");
                        $('.fdr_place,.btnSub').hide();
                        var obj = {};
                        obj.msg = 'Your feedback has been submitted successfully.';
                        call_tmpl_binder(obj, '/Template/feedback_tmpl.html', '#Message_Template', '#Message_Placeholder');
                    }
                    else
                        ShowAlertMessage("Message", "Feedback already submitted on this job id.", "A");
                });
        }
    },
    SendFeedbackRequest: function () {
        var job_id = $('#btnSubmitUserFeedback').attr('data-id');
        var comment = $('#txtReqComment').val();
        if (job_id == '0') {
            ShowAlertMessage("Message", "Job Id Not Found!", "A");
            return false;
        }
        var obj = [];
        obj.push({
            srno: 1,
            job_id: job_id,
            comment: comment
        });
        var param = "['" + JSON.stringify(obj) + "']";
        ns_ajax.post(
            urls.feedbackApi + 'feedbackrequest',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", "Feedback request send successfully.", "C");
                    $('#txtReqComment').val('');
                    $('.req_commnt').hide();
                    var obj = {};
                    obj.msg = 'Your feedback request has been send successfully to Employer.';
                    call_tmpl_binder(obj, '/Template/feedback_tmpl.html', '#Message_Template', '#Message_Placeholder');
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                    $('#txtReqComment').val('');
                }
            });
    },
    FeedbackReport: function (action) {
        $('#Feedback_Report_Placeholder').html(wait());
        var type = action == 'REQ_SEND' ? 'feedback_send' : 'feedback_receive';
        ns_ajax.get(
            urls.feedbackApi + type,
            '',
            function (response) {
                console.log(response);
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    if (obj.FeedbackRpt.length > 0)
                        call_tmpl_binder(obj, '/Template/feedback_tmpl.html', '#Feedback_Report_Template', '#Feedback_Report_Placeholder');
                    else
                        $('#Feedback_Report_Placeholder').html('Record(s) Not Available !');
                }
            });
    },
}



ns_Message = {
    GetEmailSmsNotify: function (action, page_size, page_number) {
        var searchtext = $('#txtMsgSearch').val();
        var param = { chanell: action, strsearch: searchtext, page_size: page_size, page_number: page_number };
        ns_ajax.get(
            urls.messageApi + 'inbox',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    if (obj.message.length > 0) {
                        $.each(obj.message[1].count, function (key, value) {
                            $('.mail-MCOUNT').html(value.email_count);
                            $('.all-MCOUNT').html(value.email_count);
                        });
                        call_tmpl_binder(obj, '/Template/message_tmpl.html', '#Message_Template', '#Message_Placeholder');
                    }
                    else
                        $('#Message_Placeholder').html('');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    DeleteUpdateView: function (strArry) {
        var param = JSON.stringify(strArry);
        ns_ajax.post(
            urls.messageApi + 'inbox',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    if (action == 'UPDATE_VIEW_STATUS') {
                        $('#btnView-' + ids).attr('data-view-status', '1').html('<i class="zmdi zmdi-email-open"></i>');
                    }
                    else if (action == 'DELETE') {
                        ShowAlertMessage("Message", "" + (type == 'EMAIL' ? 'Email' : 'Sms') + " Deleted Successfully", "C");
                        if (type == 'EMAIL')
                            $('#trmsg-' + ids).remove();
                        else {
                            for (var i = 0; i < ids.split(',').length; i++) {
                                $('#trmsg-' + ids.split(',')[i]).remove();
                            }
                        }
                    }
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ReturnAction: function () {
        var status = '', action;
        if ($('#btnMsgEmail').hasClass('active'))
            action = $('#btnMsgEmail').attr('data-action');
        else if ($('#btnMsgSms').hasClass('active'))
            action = $('#btnMsgSms').attr('data-action');
        else if ($('#btnMsgNotify').hasClass('active'))
            action = $('#btnMsgNotify').attr('data-action');

        return action;
    },
}

ns_table_template = {
    heading_row: function (tblCols) {
        var headRow = '';
        headRow = "<tr>";
        for (i = 0; i < tblCols.length; i++) {

            if (tblCols[i]["columns"].toString().includes("(hr)") && tabStatus == "T") {
                if (tblCols[i]["columns"] !== 'Client *' && tblCols[i]["columns"].trim() !== 'Employer')
                    headRow += "<th>" + tblCols[i]["columns"] + "</th>";
            }
            else {
                if (tblCols[i]["columns"] !== 'Client *' && tblCols[i]["columns"].trim() !== 'Employer')
                    headRow += "<th>" + tblCols[i]["columns"].toString().replace("(hr)", "(days)") + "</th>";
            }
        }
        headRow += "</tr>";

        return headRow;
    },
    body_row: function (rowNumber) {
        var bodyRow = '';
        bodyRow = '<tr class="ClsDatepair" id="jobsPost' + rowNumber + '"><th scope="row" class="w50"><span id="rowIndex' + (rowNumber + 1) + '">' + (rowNumber + 1) + '</span></th>';

        //bodyRow += '<td class="width200">\
        //                            <input id="txtClientName' + rowNumber + '" class="form-control  ui-autocomplete-input " txtClientName' + rowNumber + '" autocomplete="off" type="text" placeholder="Enter employer name" >\
        //                            <input id="hfempid' + rowNumber + '" type="hidden" class="hfempid" />\
        //             </td>';

        bodyRow += '<td class="w150"> <div class="input-group unset">\
                                     <select class="form-control w80"  id="ddlLocations' + rowNumber + '"  placeholder="Location" ><option value="0">Choose any. . .</option> </select>\
                                     <a class="btn btn-sm btn-outline-primary" data-toggle="modal" id="btnLocationPop' + rowNumber + ' data-target="#addeditlocation" >\
                                         <i class="zmdi zmdi-plus mrgn-t5"></i>\
                                     </a>\
                             </div>\
                    </td>';

        if (tabStatus !== "P") {
            bodyRow += '<td class="w250">\
                                    <div class="input-group masked-input unset">\
                                        <div class="input-group-prepend">\
                                            <span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span>\
                                        </div>\
                                        <input type="text" autocomplete="off" class="form-control date start w120"     id="txtStartDate' + rowNumber + '"   placeholder="dd/mm/yyyy">\
                                        <input type="text" autocomplete="off" class="form-control time start w90" id="txtStartTime' + rowNumber + '" placeholder="hh:mm">\
                                    </div>\
                       </td>\
                       <td class="w250">\
                                    <div class="input-group masked-input unset">\
                                        <div class="input-group-prepend">\
                                            <span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span>\
                                        </div>\
                                        <input type="text" autocomplete="off" class="form-control date end w120"     id="txtEndDate' + rowNumber + '"  placeholder="dd/mm/yyyy">\
                                        <input type="text" autocomplete="off" class="form-control time end w90" id="txtEndTime' + rowNumber + '" placeholder="hh:mm">\
                                    </div>\
                       </td>';
        }
        else {
            bodyRow += '<td class="w150">\
                                    <div class="input-group masked-input unset">\
                                        <div class="input-group-prepend">\
                                            <span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span>\
                                        </div>\
                                        <input type="text" autocomplete="off" class="form-control date start w120" id="txtStartDate' + rowNumber + '" placeholder="dd/mm/yyyy">\
                                    </div>\
                       </td>\
                       <td class="w150">\
                                    <div class="input-group masked-input unset">\
                                        <div class="input-group-prepend">\
                                            <span class="input-group-text"><i class="zmdi zmdi-calendar"></i></span>\
                                        </div>\
                                        <input type="text" autocomplete="off" class="form-control date end w120" id="txtEndDate' + rowNumber + '" placeholder="dd/mm/yyyy">\
                                    </div>\
                       </td>';
        }
        bodyRow += '<td class="w50">\
                             <div class="input-group masked-input unset">\
                                  <input type="text" class="form-control text-center" disabled   id="txtDuration' + rowNumber + '"placeholder="Duration">\
                             </div>\
                        </td>';

        if (tabStatus !== "P") {
            bodyRow += '<td class="w50">\
                             <div class="input-group masked-input unset">\
                                  <input type="text" class="form-control  text-center" style="width: 15px;" autocomplete="off"  id="txtClientRate' + rowNumber + '" placeholder="0.0" >\
                             </div>\
                        </td>';

            bodyRow += '<td class="w50">\
                             <div class="input-group masked-input unset">\
                                  <input type="text" class="form-control  text-center" style="width: 15px;" autocomplete="off" id="txtShiftCost' + rowNumber + '" disabled placeholder="0.0"  >\
                             </div>\
                        </td>';
        }
        else {

            bodyRow += '<td class="w50">\
                             <div class="input-group masked-input unset">\
                                  <input type="text" class="form-control " id="txtTotalCost' + rowNumber + '" autocomplete="off"  placeholder="0.0">\
                             </div>\
                        </td>';
        }
        bodyRow += '<td class="w100">\
                               <select id="ddlSector' + rowNumber + '"   class="form-control " ></select>\
                        </td>';

        bodyRow += '<td class="w250">\
                               <select id="ddlJobRole' + rowNumber + '"   class="form-control " ></select>\
                        </td>';
        if (tabStatus !== "P") {
            bodyRow += '<td class="w150">\
                               <select id="ddlShiftType' + rowNumber + '"  class="form-control "  ></select>\
                        </td class="w100">';

            bodyRow += '<td class="w150">\
                               <select id="ddlITSystem' + rowNumber + '"  class="form-control "  ></select>\
                        </td>';
        }
        else {
            bodyRow += '<td class="w150">\
                               <select id="ddlSpeciality' + rowNumber + '"   class="form-control"></select>\
                        </td class="w150">';

            bodyRow += '<td class="w150">\
                               <select id="ddlGrade' + rowNumber + '"   class="form-control"></select>\
                        </td>';
            bodyRow += '<td class="w50">\
                             <div class="input-group masked-input unset">\
                                  <input type="text" class="form-control " id="txtDepartment'+ rowNumber + '"  >\
                             </div>\
                        </td>';

        }

        bodyRow += '<td class="w50">\
                             <div class="dropdown">\
                                                        <a href="javascript:void(0);" class="btn btn-outline-primary dropdown-toggle" title="Notifications" data-toggle="dropdown" id="btnAdd'+ rowNumber + '" role="button">\
                                                            + Add\
                                                        </a>\
                                                        ' + (rowNumber !== 0 ? '<a class="btn btn-danger" id="btnDelete' + rowNumber + '" ><i class="zmdi zmdi-delete"></i></a> <a class="btn btn-sm btn-outline-success" id="btnAddRow' + rowNumber + '"  style="display:none" >\<i class="zmdi zmdi-plus"></i>\</a>' : '') + '\
                                                        <div class="dropdown-menu" style="background:#fff; float:left; width:340px;padding:10px;">\
                                                            <form class="form">\
                                                                <textarea id="txtDescription' + rowNumber + '" name="txtDescription' + rowNumber + '" class="form-control txtdescription m-b-15" placeholder="Enter description"></textarea>\
                                                                <div class="row m-b-15">\
                                                                    <label class="col-12 text-primary col-blue mb-2">Breaks</label>\
                                                                    <div class="fancy col-6">\
                                                                        <label>\
                                                                            <input id="rdoPaid' + rowNumber + '" name="break' + rowNumber + '" type="radio" value="1" > Paid \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class=" fancy col-6">\
                                                                        <label>\
                                                                            <input id="rdoUnpaid' + rowNumber + '" name="break' + rowNumber + '" type="radio" value="0" checked > Unpaid \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class="col-12 mt-3 pl-4">\
                                                                        <input id="txtBreak' + rowNumber + '" name="txtBreak' + rowNumber + '" value="" type="text" maxlength="6" class="form-control" style="display:none;" placeholder="Break in minutes"/>\
                                                                    </div>\
                                                                </div>\
                                                                <div class="row m-b-15 ">\
                                                                    <label class="col-12 text-primary mb-2">Smart Card</label>\
                                                                    <div class=" fancy col-6">\
                                                                        <label>\
                                                                            <input id="rdoSmartCardYes' + rowNumber + '" name="smartCard' + rowNumber + '" type="radio" value="1" > Required  \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class=" fancy col-6">\
                                                                        <label>\
                                                                            <input id="rdoSmartCardNo' + rowNumber + '" name="smartCard' + rowNumber + '" type="radio" checked value="0" > Not Required \
                                                                        </label>\
                                                                    </div>\
                                                                </div>\
                                                                <div class="row m-b-15">\
                                                                    <label class="col-12 text-primary mb-2">Other</label>\
                                                                    <div class="fancy col-6">\
                                                                        <label>\
                                                                            <input id="chkAdminWork' + rowNumber + '" name="chkAdminWork' + rowNumber + '" type="checkbox"  value="1"> Admin Work \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class="fancy col-6">\
                                                                        <label>\
                                                                            <input id="chkOnCall' + rowNumber + '" name="chkOnCall' + rowNumber + '" type="checkbox" value="0" > On Call \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class=" pt-4 fancy col-6">\
                                                                        <label>\
                                                                            <input name="chkHomeVisit' + rowNumber + '" id="chkHomeVisit' + rowNumber + '" type="checkbox" value="0" > Home Visit Required \
                                                                        </label>\
                                                                    </div>\
                                                                    <div class="col-12 mt-3 pl-4">\
                                                                        <input id="txtHomeVisitAmount' + rowNumber + '" name="txtHomeVisitAmount' + rowNumber + '" value="" type="text" maxlength="6" class="form-control HomeVisitAmount" placeholder="Home Visit Amount" style="display:none;">\
                                                                    </div>\
                                                                </div>\
                                                            </form>\
                                                        </div>\
                                                    </div>\
                        </td>';
        bodyRow += '</tr>';
        return bodyRow;
    },
    add_new_row: function (server_response) {
        var sector, jobRole, speciality;
        $("#tblBody").append(ns_table_template.body_row(idCounter));

        if (tabStatus === "P")
            speciality = $('#ddlSpeciality' + idCounter);

        sector = $('#ddlSector' + idCounter);
        jobRole = $('#ddlJobRole' + idCounter);

        $("#ddlSector" + idCounter).empty();
        $('#ddlSector' + idCounter).append($('<option/>', {
            value: 0,
            text: "Choose any . . ."
        }));
        //Fill Sector dropdown
        $.each(server_response.sectors, function (index, row) {
            $('#ddlSector' + idCounter).append($('<option />', {
                value: this.Id,
                text: this.Name
            }));
        });
        //Select Default Sector
        $.each(server_response.sectors, function (index, row) {
            if (this.default_status == '1')
                $('#ddlSector' + idCounter).val(this.Id);
        });


        $("#ddlJobRole" + idCounter).empty()
            ;
        $('#ddlJobRole' + idCounter).append($('<option/>', {
            value: 0,
            text: "Choose any . . ."
        }));

        var currentparent = "", previousparent = "";

        $.each(server_response.droles, function (key, value) {
            currentparent = value.parent_id;
            var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
            if (previousparent == "" || currentparent != previousparent) {
                $('#ddlJobRole' + idCounter).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                previousparent = value.parent_id;
            }
            if (value.role_id != value.parent_id)
                $('#ddlJobRole' + idCounter).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));

            if (value.default_status == "1")
                $('#ddlJobRole' + idCounter).attr('data-default', value.role_id);
        });
        $('#ddlJobRole' + idCounter).val($('#ddlJobRole' + idCounter).attr('data-default'));

        //Default Speciality
        if (tabStatus !== "T") {
            var locParams = "dro=sp&tp=" + tabStatus + "&si=" + $('#ddlJobRole' + idCounter).attr('data-default');
            ns_ajax.get(
                urls.jobsApi + "get?", locParams, function (response) {
                    if (response.split('|')[0] === 'OK') {
                        response = $.parseJSON(response.split('|')[1]);
                        $("#ddlSpeciality" + idCounter).empty();
                        $('#ddlSpeciality' + idCounter).append($('<option/>', {
                            value: 0,
                            text: "Choose any . . ."
                        }));
                        $.each(response.specialitys, function (index, row) {
                            $('#ddlSpeciality' + rNumber).append($("<option/>").val(this.Id).text(this.Name));
                        });
                    }
                }
            );
        }


        if (tabStatus === "P") {
            $("#ddlSpeciality" + idCounter).empty();
            $('#ddlSpeciality' + idCounter).append($('<option/>', {
                value: 0,
                text: "Choose any . . ."
            }));
            $.each(server_response.dspecialitys, function (index, row) {
                $('#ddlSpeciality' + idCounter).append($("<option/>").val(this.Id).text(this.Name));
            });

            $("#ddlGrade" + idCounter).empty();
            $('#ddlGrade' + idCounter).append($('<option/>', {
                value: 0,
                text: "Choose any . . ."
            }));
            $.each(server_response.dgrades, function (index, row) {
                $('#ddlGrade' + idCounter).append($("<option/>").val(this.Id).text(this.Name));
            });
        }
        else {
            $("#ddlShiftType" + idCounter).empty();
            $('#ddlShiftType' + idCounter).append($('<option/>', {
                value: 0,
                text: "Choose any . . ."
            }));
            $.each(server_response.dshifts, function (index, row) {
                $('#ddlShiftType' + idCounter + '').append($("<option     />").val(this.Id).text(this.Name));
            });

            $("#ddlITSystem" + idCounter).empty();
            $('#ddlITSystem' + idCounter).append($('<option/>', {
                value: 0,
                text: "Choose any . . ."
            }));
            $.each(server_response.itsystems, function (index, row) {
                $('#ddlITSystem' + idCounter + '').append($("<option     />").val(this.Id).text(this.Name));
            });
        }

        $("#btnDelete" + idCounter).click(function () {
            rNumber = GetRowNumber($(this));
            var index = arrtblJobs.indexOf(GetRowNumber($(this)));
            if (index > -1) {
                arrtblJobs.splice(index, 1);
            }
            //$(this).parents('tr').first().css('display', 'none');
            $(this).parents('tr').first().addClass("format-strikethrough");
            $(this).css('display', 'none');
            $("#btnAddRow" + rNumber).css('display', '');
            ns_table_template.disable_row(rNumber, true)
        });

        $("#btnAddRow" + idCounter).click(function () {
            rNumber = GetRowNumber($(this));
            var index = arrtblJobs.indexOf(GetRowNumber($(this)));
            if (index > -1) {
                arrtblJobs.splice(index, 1);
            }
            //$(this).parents('tr').first().css('display', 'none');
            $(this).parents('tr').first().removeClass("format-strikethrough");
            $(this).css('display', 'none');
            $("#btnDelete" + rNumber).css('display', '');
            ns_table_template.disable_row(rNumber, false);
        });

        $("#rdoUnpaid" + idCounter).click(function () {
            $("#txtBreak" + GetRowNumber($(this))).css('display', 'none');
        });

        $("#rdoPaid" + idCounter).click(function () {
            $("#txtBreak" + GetRowNumber($(this))).css('display', '');
        });

        $("#txtStartTime" + idCounter).blur(function () {
            rNumber = GetRowNumber($(this));
            var sTime = $(this).val();
            var eTime = $("#txtEndTime" + rNumber).val();
            var minutes = CalculateMinutes(sTime, eTime);
            if (!isNaN(minutes))
                $("#txtDuration" + rNumber).val(minutes);
            else
                $("#txtDuration" + rNumber).val(0);

            if (tabStatus !== "P") {
                if ($("#txtClientRate" + rNumber).val() !== '') {
                    rNumber = GetRowNumber($(this));
                    var totalShiftCost = parseFloat($("#txtDuration" + rNumber).val()) * parseFloat($("#txtClientRate" + rNumber).val());
                    totalShiftCost = Math.round(totalShiftCost * 100) / 100
                    $('#txtShiftCost' + rNumber).val(totalShiftCost);
                }
            }
        });

        $("#txtEndTime" + idCounter).blur(function () {
            rNumber = GetRowNumber($(this));
            var eTime = $(this).val();
            var sTime = $("#txtStartTime" + rNumber).val();
            var minutes = CalculateMinutes(sTime, eTime);
            if (!isNaN(minutes))
                $("#txtDuration" + rNumber).val(minutes);
            else
                $("#txtDuration" + rNumber).val(0);
            if (tabStatus !== "P") {
                if ($("#txtClientRate" + rNumber).val() !== '') {
                    rNumber = GetRowNumber($(this));
                    var totalShiftCost = parseFloat($("#txtDuration" + rNumber).val()) * parseFloat($("#txtClientRate" + rNumber).val());
                    totalShiftCost = Math.round(totalShiftCost * 100) / 100;
                    $('#txtShiftCost' + rNumber).val(totalShiftCost);
                }
            }
            else {
                if ($("#txtJobRate" + rNumber).val() !== '') {
                    var hours = parseInt(minutes) / 60;
                    var totalCost = parseFloat(hours) * parseFloat($('#txtJobRate' + rNumber).val());
                    totalCost = Math.round(totalCost * 100) / 100;
                    $('#txtTotalCost' + rNumber).val(totalCost);
                }
            }
        });

        $("#txtBreak" + idCounter).blur(function () {
            var txtBreak = $(this);
            rNumber = GetRowNumber(txtBreak);
            var isChecked = $("#rdoPaid" + rNumber).prop("checked");
            if (isChecked) {
                if (txtBreak.val().length === 0) {
                    txtBreak.focus();
                    ShowAlertMessage("Message", "Please enter break in minutes !", "A");
                }
            }
        });

        $("#chkHomeVisit" + idCounter).change(function () {
            var chkHomeVisit = $(this);
            rNumber = GetRowNumber(chkHomeVisit);
            if ($(this).prop("checked") == true) {
                $("#txtHomeVisitAmount" + rNumber).css('display', '');
                $("#txtHomeVisitAmount" + rNumber).focus();
            }
            else
                $("#txtHomeVisitAmount" + rNumber).css('display', 'none');
        });

        $("#txtHomeVisitAmount" + idCounter).blur(function () {
            var txtHomeVistAmt = $(this);
            rNumber = GetRowNumber(txtHomeVistAmt);
            var isChecked = $("#chkHomeVisit" + rNumber).prop("checked");
            if (isChecked) {
                if (txtHomeVistAmt.val().length === 0) {
                    txtHomeVistAmt.focus();
                    ShowAlertMessage("Message", "Please enter home visit amount !", "A");
                }
            }
        });

        $("#rdoPaid" + idCounter).change(function () {
            rNumber = GetRowNumber($(this));
            $("#txtBreak" + rNumber).focus();
        });

        if (tabStatus !== "P") {
            $("#txtClientRate" + idCounter).keypress(function () {
                // Allow only backspace and delete
                if (event.keyCode == 46 || event.keyCode == 8) {
                    // let it happen, don't do anything
                    if (this.value.split('.').length === 2) {
                        return false;
                    }
                }
                else {
                    // Ensure that it is a number and stop the keypress
                    if (event.keyCode < 48 || event.keyCode > 57) {
                        event.preventDefault();
                    }
                }
            });
            //$("#txtClientRate" + idCounter).blur(function () {
            jQuery(document).on('input', "#txtClientRate" + idCounter, function () {
                rNumber = GetRowNumber($(this));
                var totalShiftCost = parseFloat($("#txtDuration" + rNumber).val()) * parseFloat($(this).val());
                totalShiftCost = (totalShiftCost * 100) / 100;
                if (!isNaN(totalShiftCost))
                    $('#txtShiftCost' + rNumber).val(parseFloat(totalShiftCost).toFixed(2));
                else
                    $('#txtShiftCost' + rNumber).val(0);
            });
        }
        else {
            $("#txtStartDate" + idCounter).change(function () {
                rNumber = GetRowNumber($(this));
                var startDate = $(this).val();
                var endDate = $("#txtEndDate" + rNumber).val();
                var days = CalculateDays(startDate, endDate);
                if (!isNaN(days))
                    $("#txtDuration" + rNumber).val(days);
                else
                    $('#txtDuration' + rNumber).val(0);
            });
            $("#txtEndDate" + idCounter).change(function () {
                rNumber = GetRowNumber($(this));
                var endDate = $(this).val();
                var startDate = $("#txtStartDate" + rNumber).val();
                var days = CalculateDays(startDate, endDate);
                if (!isNaN(days))
                    $("#txtDuration" + rNumber).val(days);
                else
                    $('#txtDuration' + rNumber).val(0);
            });
        }

        $("#rdoPaid" + idCounter).click(function () {
            rNumber = GetRowNumber($(this));
            $("#txtBreak" + rNumber).css('display', '');
        });
        ns_table_template.Fillddl_emp_locations(idCounter);
        sector.change(function () {
            rNumber = GetRowNumber($(this));
            var locParams = { dro: 'r', tp: tabStatus, si: $(this).val() };// "dro=r&tp=" + tabStatus + "&si=" + $(this).val();
            ns_ajax.get(
                urls.jobsApi + "get",
                locParams,
                function (response) {
                    if (response.split('|')[0] === 'OK') {
                        response = $.parseJSON(response.split('|')[1]);
                        $('#ddlJobRole' + rNumber).empty();
                        $('#ddlJobRole' + rNumber).append($('<option/>', {
                            value: 0,
                            text: "Choose any . . ."
                        }));
                        var currentparent = "", previousparent = "";
                        $.each(response.roles, function (key, value) {
                            currentparent = value.parent_id;
                            var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                            if (previousparent == "" || currentparent != previousparent) {
                                $('#ddlJobRole' + rNumber).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                                previousparent = value.parent_id;
                            }
                            if (value.role_id != value.parent_id)
                                $('#ddlJobRole' + rNumber).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                        })
                    }
                }
            );
        });
        if (tabStatus == "T") {
            jobRole.change(function () {
                rNumber = GetRowNumber($(this));
                var locParams = "dro=sf&tp=" + tabStatus + "&si=" + $(this).val();
                ns_ajax.get(
                    urls.jobsApi + "get?", locParams, function (response) {

                        if (response.split('|')[0] === 'OK') {
                            response = $.parseJSON(response.split('|')[1]);
                            $('#ddlShiftType' + rNumber).empty();
                            $('#ddlShiftType' + rNumber).append($('<option/>', {
                                value: 0,
                                text: "Choose any . . ."
                            }));
                            $.each(response.shifts, function (index, row) {
                                $('#ddlShiftType' + rNumber).append($("<option   />").val(this.Id).text(this.Name));
                            });
                        }
                    }
                );
            });
        }
        else {
            jobRole.change(function () {
                rNumber = GetRowNumber($(this));
                var locParams = "dro=sp&tp=" + tabStatus + "&si=" + $(this).val();
                ns_ajax.get(
                    urls.jobsApi + "get?", locParams, function (response) {
                        if (response.split('|')[0] === 'OK') {
                            response = $.parseJSON(response.split('|')[1]);
                            $("#ddlSpeciality" + idCounter).empty();
                            $('#ddlSpeciality' + idCounter).append($('<option/>', {
                                value: 0,
                                text: "Choose any . . ."
                            }));
                            $.each(response.specialitys, function (index, row) {
                                $('#ddlSpeciality' + rNumber).append($("<option/>").val(this.Id).text(this.Name));
                            });
                        }
                    }
                );
            });
            speciality.change(function () {
                rNumber = GetRowNumber($(this));
                var locParams = "dro=g&tp=" + tabStatus + "&si=" + $(this).val();
                ns_ajax.get(
                    urls.jobsApi + "get?", locParams, function (response) {
                        if (response.split('|')[0] === 'OK') {
                            response = $.parseJSON(response.split('|')[1]);
                            $("#ddlGrade" + idCounter).empty();
                            $('#ddlGrade' + idCounter).append($('<option/>', {
                                value: 0,
                                text: "Choose any . . ."
                            }));
                            $.each(response.grades, function (index, row) {
                                $('#ddlGrade' + rNumber).append($("<option   />").val(this.Id).text(this.Name));
                            });
                        }
                    }
                );
            });
        }
        DatePairFuction();
        idCounter++;
    },

    Fillddl_emp_locations: function (rNumber) {
        $('#ddlLocations' + rNumber).empty();
        var param = { action: 'emp_locations', action_id: 0 };
        ns_ajax.get(urls.jobsApi + 'Get',
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = $.parseJSON(response.split('|')[1]);
                    var locations = '<option value="0">Choose any . . .</option>'
                    $('#ddlLocations' + rNumber).append($("<option />").val(0).text('Choose any . . .'));
                    $.each(obj.locations, function (index, value) {
                        locations += '<option value=' + value.Id + '>' + value.Name + '</option>';
                    });
                    jQuery('#ddlLocations' + rNumber).html(locations);
                }
            });
    },
    copy_row: function (status, newDate) {
        ns_table_template.add_new_row(serverResponse);
        idCounter--;
        var counterIndex = idCounter - 1;
        if (locationOptions != null) {
            $.each(locationOptions.locations, function (index, row) {
                $('#ddlLocations' + idCounter).append($('<option/>', {
                    value: this.Id,
                    text: this.Name
                }));
            });
        }

        //var copyRow_clientName = $('#txtClientName' + idCounter);
        //var copyRow_hfempid = $('#hfempid' + idCounter);
        var copyRow_location = $('#ddlLocations' + idCounter);
        var copyRow_startDate = $("#txtStartDate" + idCounter);
        var copyRow_endDate = $("#txtEndDate" + idCounter);
        var copyRow_duration = $("#txtDuration" + idCounter);
        var copyRow_sector = $('#ddlSector' + idCounter);
        var copyRow_jobRole = $('#ddlJobRole' + idCounter);
        var copyRow_description = $("#txtDescription" + idCounter);
        var copyRow_breakPaid = $("#rdoPaid" + idCounter);
        var copyRow_breakUnpaid = $("#rdoUnPaid" + idCounter);
        var copyRow_breakTime = $("#txtBreak" + idCounter);
        var copyRow_smartCardYes = $("#rdoSmartCardYes" + idCounter);
        var copyRow_smartCardNo = $("#rdoSmartCardNo" + idCounter);
        var copyRow_adminWorkRequired = $("#chkAdminWork" + idCounter);
        var copyRow_onCallRequired = $("#chkOnCall" + idCounter);
        var copyRow_homeVisitRequired = $("#chkHomeVisit" + idCounter);
        var copyRow_homeVisitAmt = $('#txtHomeVisitAmount' + idCounter);

        if (tabStatus === "T") {
            var copyRow_shiftCost = $('#txtShiftCost' + idCounter);
            var copyRow_startTime = $("#txtStartTime" + idCounter);
            var copyRow_endTime = $("#txtEndTime" + idCounter);
            var copyRow_clientRate = $('#txtClientRate' + idCounter);
            var copyRow_shiftType = $('#ddlShiftType' + idCounter);
            var copyRow_itSystem = $('#ddlITSystem' + idCounter);
        }

        else {
            var copyRow_totalCost = $('#txtTotalCost' + idCounter);
            var copyRow_department = $("#txtDepartment" + idCounter);
            var copyRow_speciality = $('#ddlSpeciality' + idCounter);
            var copyRow_grade = $('#ddlGrade' + idCounter);
        }

        // copyRow_clientName.val($("#txtClientName" + counterIndex).val());
        //copyRow_hfempid.val($("#hfempid" + counterIndex).val());

        if (status) {
            copyRow_startDate.val(newDate);
            copyRow_endDate.val(newDate);
        }
        else {
            copyRow_startDate.val($("#txtStartDate" + counterIndex).val());
            copyRow_endDate.val($("#txtEndDate" + counterIndex).val());
        }

        copyRow_duration.val($('#txtDuration' + counterIndex).val());
        copyRow_location.val($('#ddlLocations' + counterIndex + ' option:selected').val());
        copyRow_sector.val($('#ddlSector' + counterIndex + ' option:selected').val());
        copyRow_jobRole.val($('#ddlJobRole' + counterIndex + ' option:selected').val());
        copyRow_description.val($("#txtDescription" + counterIndex).val());

        if ($('#rdoPaid' + counterIndex).prop("checked") == true) {
            copyRow_breakPaid.prop("checked", "checked");
            copyRow_breakTime.val($("#txtBreak" + counterIndex).val());
            copyRow_breakTime.css("display", "");
        }
        else {
            copyRow_breakUnpaid.prop("checked", "checked");
            copyRow_breakTime.css("display", "none");
        }

        if ($('#rdoSmartCardYes' + counterIndex).prop("checked") == true)
            copyRow_smartCardYes.prop("checked", "checked");
        else
            copyRow_smartCardNo.prop("checked", "checked");

        copyRow_adminWorkRequired.prop("checked", $("#chkAdminWork" + counterIndex).prop("checked"));
        copyRow_onCallRequired.prop("checked", $("#chkOnCall" + counterIndex).prop("checked"));
        copyRow_homeVisitRequired.prop("checked", $("#chkHomeVisit" + counterIndex).prop("checked"))
        if ($("#chkHomeVisit" + counterIndex).prop("checked") === true)
            copyRow_homeVisitAmt.css("display", "");
        copyRow_homeVisitAmt.val($("#txtHomeVisitAmount" + counterIndex).val());

        if (tabStatus === "T") {
            copyRow_shiftCost.val($('#txtShiftCost' + counterIndex).val());
            copyRow_startTime.val($("#txtStartTime" + counterIndex).val());
            copyRow_endTime.val($("#txtEndTime" + counterIndex).val());
            copyRow_clientRate.val($('#txtClientRate' + counterIndex).val());
            copyRow_shiftType.val($('#ddlShiftType' + counterIndex + ' option:selected').val());
            copyRow_itSystem.val($('#ddlITSystem' + counterIndex + ' option:selected').val());
        }
        else {
            copyRow_totalCost.val($('#txtTotalCost' + counterIndex).val());
            copyRow_department.val($("#txtDepartment" + counterIndex).val());
            copyRow_speciality.val($('#ddlSpeciality' + counterIndex + ' option:selected').val());
            copyRow_grade.val($('#ddlGrade' + counterIndex + ' option:selected').val());
        }
        idCounter++;
    },
    disable_row: function (rowNumber, isDisable) {
        var disEmployeeText,
            disLocation,
            disStartDate,
            disStartTime,
            disEndDate,
            disEndTime,
            disDuration,
            disClientRate,
            disShiftCost,
            disSector,
            disRole,
            disShiftType,
            disItSystem,
            disSpecaility,
            disGrade,
            disDepartment,
            disBtnAdd,
            disBtnLocationPop;

        //disEmployeeText = $("#txtClientName" + rowNumber);
        disLocation = $("#ddlLocations" + rowNumber);
        disStartDate = $("#txtStartDate" + rowNumber);
        disEndDate = $("#txtEndDate" + rowNumber);
        disBtnAdd = $("#btnAdd" + rowNumber);
        disBtnLocationPop = $("#btnLocationPop" + rowNumber);
        disDuration = $("#txtDuration" + rowNumber);

        disShiftCost = tabStatus === "P" ? $("#txtTotalCost" + rowNumber) : $("#txtShiftCost" + rowNumber);
        disSector = $("#ddlSector" + rowNumber);
        disRole = $("#ddlJobRole" + rowNumber);

        if (tabStatus === "T") {
            disStartTime = $("#txtStartTime" + rowNumber);
            disEndTime = $("#txtEndTime" + rowNumber);
            disShiftType = $("#ddlShiftType" + rowNumber);
            disItSystem = $("#ddlITSystem" + rowNumber);
            disClientRate = $("#txtClientRate" + rowNumber);
        }
        else {
            disSpecaility = $("#ddlSpeciality" + rowNumber);
            disGrade = $("#ddlGrade" + rowNumber);
            disDepartment = $("#txtDepartment" + rowNumber);
            disTotalCost = $("#txtTotalCost" + rowNumber);
        }
        if (isDisable) {
            disEmployeeText.prop('disabled', 'disabled');
            disLocation.prop('disabled', 'disabled');
            disStartDate.prop('disabled', 'disabled');
            disEndDate.prop('disabled', 'disabled');
            disStartDate.addClass("format-strikethrough");
            disEndDate.addClass("format-strikethrough");
            disRole.prop('disabled', 'disabled');
            disSector.prop('disabled', 'disabled');
            disBtnAdd.prop('disabled', 'disabled');
            disBtnAdd.addClass("format-strikethrough");
            disBtnLocationPop.prop('disabled', 'disabled');
            disBtnLocationPop.addClass("format-strikethrough");

            if (tabStatus === "T") {
                disStartTime.addClass("format-strikethrough");
                disEndTime.addClass("format-strikethrough");
                disStartTime.prop('disabled', 'disabled');
                disEndTime.prop('disabled', 'disabled');
                disClientRate.prop('disabled', 'disabled');
                disItSystem.prop('disabled', 'disabled');
                disShiftType.prop('disabled', 'disabled');
            }
            else {
                disTotalCost.prop('disabled', 'disabled');
                disSpecaility.prop('disabled', 'disabled');
                disGrade.prop('disabled', 'disabled');
                disDepartment.prop('disabled', 'disabled');
            }
        }
        else {
            disEmployeeText.prop('disabled', '');
            disLocation.prop('disabled', '');
            disStartDate.prop('disabled', '');
            disEndDate.prop('disabled', '');
            disStartDate.removeClass("format-strikethrough");
            disEndDate.removeClass("format-strikethrough");
            disRole.prop('disabled', '');
            disSector.prop('disabled', '');
            disBtnAdd.prop('disabled', '');
            disBtnAdd.removeClass("format-strikethrough");
            disBtnLocationPop.prop('disabled', '');
            disBtnLocationPop.removeClass("format-strikethrough");
            if (tabStatus === "T") {
                disStartTime.removeClass("format-strikethrough");
                disEndTime.removeClass("format-strikethrough");
                disStartTime.prop('disabled', '');
                disEndTime.prop('disabled', '');
                disClientRate.prop('disabled', '');
                disItSystem.prop('disabled', '');
                disShiftType.prop('disabled', '');
            }
            else {
                disTotalCost.prop('disabled', '');
                disSpecaility.prop('disabled', '');
                disGrade.prop('disabled', '');
                disDepartment.prop('disabled', '');
            }
        }
    }
}

ns_ComplianceSettings = {
    name: 'Add Documnets',
    InsertUpdateDocData: function () {
        var obj = {};
        obj.DocCategory = "C";
        obj.DocId = $('#btnSubmitDocData').attr('data-docid');
        obj.DocName = $('#txtDocumentName').val().trim();
        obj.DocDesc = $('#txtDocDescription').val().trim();
        obj.ParentId = $('#ddlParent').val();
        obj.DocIssueCountryStatus = $('#chkDocIssueCounStatus').prop('checked') ? '1' : '0';
        obj.DocRequiredIssueCountry = $('#txtDocRequiredIssueCountry').attr('data-countryid');
        obj.DefaultStatus = $('#chkDefaultStatus').prop('checked') ? '1' : '0';
        obj.InputType = $('#chkInputType').prop('checked') ? '1' : '0';
        obj.IsAdditional = $('#chkIsAdditional').prop('checked') ? '1' : '0';

        var msg = '', flag = 0;
        if (obj.DocCategory == "") {
            flag = 1;
            msg = "Select document category";
            $('#ddlDocCategory').focus();
        }
        else if (obj.DocName == "") {
            flag = 1;
            msg = "Enter document name";
            $('#txtDocumentName').focus();
        }
        else if (obj.DocDescription == "") {
            flag = 1;
            msg = "Enter document description";
            $('#txtDocDescription').focus();
        }
        else if (($('#chkDocIssueCounStatus').prop('checked')) && (obj.DocRequiredIssueCountry == 0)) {
            flag = 1;
            msg = "Enter a document required issue country name";
            $('#txtDocRequiredIssueCountry').focus();
        }

        else
            flag = 0;
        if (flag == 0) {
            try {
                ns_ajax.post(
                    "ComplianceSettings/InsertUpdateDocData",
                    obj,
                    function (response) {
                        if (response.split('|')[0] == "OK") {
                            ShowAlertMessage("Message", "Document data submitted successfully !", 'C');
                            //$('#modalAddDocument').modal('hide');
                            ns_ComplianceSettings.Reset();
                            ns_ComplianceSettings.FillParentType();
                            ns_ComplianceSettings.getAllDocDetails();
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            catch (error) {
                ShowAlertMessage("Error", err, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');
    },
    getAllDocDetails: function () {
        var strVal = $('#txtSearchDoc').val().trim();
        var param = { strVal: strVal, PageNumber: PageNumber, PageSize: PageSize };
        ns_ajax.get(
            "ComplianceSettings/SelectAllDocuments",
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), row = '';
                    var counter = 0, rownumberFirst = 1, rownumberLast = 0;
                    $.each(obj, function (key, value) {
                        var id = value.doc_id, status = value.doc_status;
                        var strStatus = '<a id= "docStatus-' + id + '" data-status="' + status + '" class="btn btn-sm ChangeDocStatus ' + (status == 1 ? "btn-success" : "btn-warning") + '"><i class="zmdi ' + (status == 1 ? 'zmdi-check-all' : 'zmdi-money-off') + '"></i>' + (status == 1 ? '&nbsp&nbspActive&nbsp' : 'Inactive') + '</a>';
                        var strEdit = '<a id="editDoc-' + id + '" class="btn btn-outline-primary btn-sm EditDocument" data-toggle="tooltip" title="edit"><i class="zmdi zmdi-edit"></i></a>';
                        row += '<tr id="deleteDoc-' + id + '" class="capitalize">';
                        row += '<td><strong>' + value.RowNumber + '</strong></td>';
                        if (value.parent_id == 0)
                            row += '<td><span class="col-blue"><b>' + value.doc_name + '</b></span></td>';
                        else
                            row += '<td><span class="col-blue"><b>' + value.doc_name + '</b><br/><small>(' + value.parent + ')</small></span></td>';
                        row += '<td><span><b>' + (value.doc_category == 'C' ? 'Candidate' : 'NA') + '</b></span></td>' +
                            '<td><div class="capitalize tdmwidth nowrap col-grey"><b>' + value.doc_desc + '</b></div></td>' +
                            '<td class="text-center"><span class="' + (value.doc_issue_country_status == 1 ? 'col-green' : 'col-red') + '"><b>' + (value.doc_issue_country_status == 1 ? 'Required' : 'Not Required') + '</b></span></td>' +
                            '<td><span><b>' + (value.doc_required_issue_country > 0 ? value.country_name : '') + '</b></span></td>' +
                            '<td><span><b>' + (value.input_type == 1 ? 'Number' : 'Text') + '</b></span></td>' +
                            '<td class="text-center"><span class="' + (value.doc_additional == 1 ? 'col-green' : 'col-red') + '"><b>' + (value.doc_additional == 1 ? 'Yes' : 'No') + '</b></span></td>' +
                            '<td><span class="col-grey"><i class="zmdi zmdi-calendar">&nbsp;</i><b>' + value.create_date + ' </b></span></td>' +
                            '<td>' + strStatus + '</td>';

                        row += '<td>' + strEdit +
                            '<a id="delete-' + id + '"  class="ion btn btn-outline-danger btn-sm DeleteDocument" data-toggle="tooltip" title="delete">' +
                            '<div class="lid"></div>' +
                            '<div class="lidcap"></div>' +
                            '<div class="bin"></div></a></td>';
                        row += '</tr>';

                        //paging

                        totalCount = value.total_count;
                        if (counter == 0)
                            rownumberFirst = value.RowNumber;
                        else
                            rownumberLast = value.RowNumber;
                        counter++;
                        if (counter == 1)
                            rownumberLast = value.RowNumber;

                        if (PageNumber == 1) {
                            $(".btnPrev").addClass('a-disabled');
                            $(".btnPrev").removeClass('a-enabled');
                        }
                        else {
                            $(".btnPrev").addClass('a-enabled');
                            $(".btnPrev").removeClass('a-disabled');
                        }
                        if (rownumberLast == totalCount) {
                            $(".btnNext").addClass('a-disabled');
                            $(".btnNext").removeClass('a-enabled');
                        }
                        else {
                            $(".btnNext").addClass('a-enabled');
                            $(".btnNext").removeClass('a-disabled');
                        }
                    });

                    $('.tbodyDocMaster').html(row);
                    $('.spanUnreadMsgCount').html("<b>" + rownumberFirst + " - " + rownumberLast + "</b> of <b>" + totalCount + "</b>");
                }
                else {
                    $('.tbodyDocMaster').html("<tr><td colspan='10'><center>" + response + "</center></td></tr>");
                    $('.spanUnreadMsgCount').html('');
                }
            });
    },
    EditDocDetails: function (DocId) {
        var param = { DocId: DocId };
        try {
            ns_ajax.get(
                "ComplianceSettings/SelectDocument",
                param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        var obj = jQuery.parseJSON(response.split('|')[1]), output = "", ParentId = 0;
                        $.each(obj, function (key, value) {
                            $('#txtDocumentName').val(value.doc_name.trim());
                            $('#txtDocDescription').val(value.doc_desc.trim());
                            $('#chkDocIssueCounStatus').prop('checked', (value.doc_issue_country_status == 1 ? 'checked' : ''));
                            if ($('#chkDocIssueCounStatus').prop('checked'))
                                $('#txtDocRequiredIssueCountry').show().val(value.country_name).attr('data-countryid', value.doc_required_issue_country);
                            else
                                $('#txtDocRequiredIssueCountry').hide().val('').attr('data-countryid', '0');

                            ParentId = value.parent_id;
                            $('#chkIsParent').prop('checked', (ParentId > 0 ? 'checked' : ''));
                            $('#chkDocStatus').prop('checked', (value.doc_status == 1 ? 'checked' : ''));
                            $('#chkInputType').prop('checked', (value.input_type == 1 ? 'checked' : ''));
                            $('#chkIsAdditional').prop('checked', (value.doc_additional == 1 ? 'checked' : ''));

                            $('#btnSubmitDocData').attr('data-docid', value.doc_id);
                            $('#chkDefaultStatus').prop('checked', (value.default_status == 1 ? 'checked' : ''));
                        });
                        $('#chkIsParent').prop('checked') ? ($('#ddlParent').show().val(ParentId)) : ($('#ddlParent').hide().val(''));
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    ChangeDocStatus: function (DocId, status) {
        if (status == 1)
            status = 0;
        else
            status = 1;
        var param = "{ DocId: '" + DocId + "', Status: '" + status + "' }";
        try {
            ns_ajax.post(
                "ComplianceSettings/ChangeDocStatus",
                param,
                function (response) {
                    if (response == "OK") {
                        $('#docStatus-' + DocId).attr('data-status', status);
                        if (status == 1)
                            $('#docStatus-' + DocId).addClass("btn-success").removeClass("btn-warning");
                        else
                            $('#docStatus-' + DocId).addClass("btn-warning").removeClass("btn-success");
                        $('#docStatus-' + DocId).html((status == 1 ? '<i class="zmdi zmdi-check-all"></i>&nbsp&nbspActive&nbsp' : '<i class="zmdi zmdi-money-off"></i>Inactive'));
                        ShowAlertMessage("Message", "Status has been changed successfully", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },
    DeleteDocument: function (id, status) {
        if (status == 1) {
            Toast_Warning("Warning", "Active status can not be deleted");
            return false;
        }
        var param = "{ DocId: '" + id + "' }";
        try {
            ns_ajax.post(
                "ComplianceSettings/DeleteDocument",
                param,
                function (response) {
                    if (response.split('|')[0] == "OK") {
                        ShowAlertMessage("Message", "Document deleted successfully", 'C');
                        $("#deleteDoc-" + id).hide();
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    FillCountryLists: function () {
        $("#txtDocRequiredIssueCountry").autocomplete({
            minLength: 0,
            source: function (request, response) {
                ns_ajax.get(
                    "ComplianceSettings/FillCountryLists",
                    { CountyVal: request.term },
                    function (data) {
                        if (data.split('|')[0] == "OK") {
                            var obj = jQuery.parseJSON(data.split('|')[1]);
                            response($.map(obj, function (item) {
                                return {
                                    label: item.country_name,
                                    val: item.id
                                }
                            }))
                        }
                    });
            },
            select: function (e, i) {
                var id = i.item.val;
                $('#txtDocRequiredIssueCountry').attr('data-countryid', id);
                $('#txtDocRequiredIssueCountry').val($(this).val());
            }
        }).focus(function () {
            $(this).autocomplete("search", $(this).val());
        });
    },
    FillParentType: function () {
        try {
            ns_ajax.get(
                "ComplianceSettings/FillAllParent",
                param,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        var output = '';
                        output = '<option value="0">--Select Parent--</option>';
                        var obj = jQuery.parseJSON(response.split('|')[1]);
                        $.each(obj, function (key, value) {
                            output += '<option value="' + value.DocId + '" class="capitalize">' + value.DocName + '</option>';
                        });
                        $('#ddlParent').html(output);
                    }
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    Reset: function () {
        $("input:checkbox").prop('checked', false);
        $("#txtDocumentName").val('');
        $("#txtDocDescription").val('');
        $('#btnSubmitDocData').attr('data-docid', '0').html('Save');
        $('#txtDocRequiredIssueCountry').attr('data-countryid', '0').hide().val('');
        $('.ModalDocTitle').html('Add Document Data');
        $('#ddlParent').hide();
    },

    name: 'Assign Documents(Settings)',
    getAssignedDocuments: function () {
        var strVal = $('#txtSearchByRole').val().trim();
        var param = { strVal: strVal, PageNumber: PageNumber, PageSize: PageSize };
        ns_ajax.get("ComplianceSettings/GetAssignedDocumentsCount",
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), Index = 1, row = "";
                    $.each(obj, function (key, value) {
                        var id = value.RoleId;
                        var strEdit = '<a id="editComp-' + id + '" class="btn btn-outline-primary btn-sm EditComplSettings" data-toggle="tooltip" title="edit"><i class="zmdi zmdi-edit"></i></a>';
                        var strView = '<a id="viewComp-' + id + '" class="btn btn-outline-primary btn-sm ViewComplSettings" data-toggle="tooltip" title="view"><i class="zmdi zmdi-eye"></i></a>';
                        row += '<tr class="Compliance">' +
                            '<td>' + Index + '</td>' +
                            '<td><span class="col-blue"><b>' + value.RoleCategory + '</b></span></td>' +
                            '<td><span class="col-grey"><b>' + value.RoleName + '</b></span></td>' +
                            '<td><span class="badge badge-info">' + value.TotalDocCount + '</span></td>' +
                            '<td>' + strEdit + '&nbsp ' + strView + '</td>';
                        row += '</tr>';
                        Index += 1;
                    });
                    $('.tbodyAssignDocument').html(row);
                }
                else
                    $('.tbodyAssignDocument').html("<tr><td colspan='5'><center>" + response + "</center></td></tr>");
            });
    },
    FillAllRoles: function () {
        var profileType = $('#ddlProfileType').val();
        profileType = (profileType == 'C' ? 'CND' : profileType == 'E' ? 'EMP' : '');
        var param = { ProfileType: profileType };
        jQuery('#ddlRoleList').empty();
        try {
            ns_ajax.get(
                "ComplianceSettings/FillAllRoles",
                param,
                function (response) {
                    if (response.split('|')[0] == 'OK') {
                        var obj = jQuery.parseJSON(response.split('|')[1]);
                        var currentparent = "", previousparent = "";
                        $.each(obj, function (key, value) {
                            currentparent = value.parent_id;
                            var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                            if (previousparent == "" || currentparent != previousparent) {
                                jQuery('#ddlRoleList').append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                                previousparent = value.parent_id;
                            }
                            if (value.role_id != value.parent_id)
                                jQuery('#ddlRoleList').append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                        });
                    }
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    getAllDocuments: function () {
        ns_ajax.get(
            "ComplianceSettings/getAllDocuments",
            "",
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]), row = "";
                    $.each(obj, function (key, value) {
                        var docId = value.doc_id;
                        row += '<tr class="Compliance">' +
                            '<td>' + value.RowNumber + '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="chk-' + docId + '" data-id="0" data-parentId=' + value.parent_id + ' type="checkbox" class="chkDocument chkParent-' + value.parent_id + ' lockDocAdd-' + docId + '">' +
                            '<label for="chk-' + docId + '"><b>' + value.doc_name + '</b><br/><small>' + (value.parent_id > 0 ? '(' + value.parent + ')' : '') + '</small></label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="">' +
                            '<div class="radio inlineblock m-r-20">' +
                            '<input type="radio" id="Mandatory-' + docId + '" name="DC-' + docId + '"  class="with-gap lockDocAdd-' + docId + '">' +
                            '<label for="Mandatory-' + docId + '">Mandatory </label>' +
                            '</div>' +
                            '<div class="radio inlineblock  m-r-20">' +
                            '<input type="radio" id="Training-' + docId + '" name="DC-' + docId + '" class="with-gap lockDocAdd-' + docId + '">' +
                            '<label for="Training-' + docId + '">Training </label>' +
                            '</div>' +
                            '<div class="radio inlineblock  m-r-20">' +
                            '<input type="radio" id="Admin-' + docId + '" name="DC-' + docId + '" class="with-gap lockDocAdd-' + docId + '">' +
                            '<label for="Admin-' + docId + '">Admin </label>' +
                            '</div>' +
                            '<div class="radio inlineblock  m-r-20">' +
                            '<input type="radio" id="Optional-' + docId + '" name="DC-' + docId + '" checked="checked" class="with-gap lockDocAdd-' + docId + '">' +
                            '<label for="Optional-' + docId + '">Optional</label>' +
                            '</div>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level1-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level1-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level2-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level2-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level3-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level3-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level4-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level4-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level5-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level5-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="level6-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="level6-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<div class="checkbox">' +
                            '<input id="SignUp-' + docId + '" type="checkbox" class="lockDocAdd-' + docId + '">' +
                            '<label for="SignUp-' + docId + '">&nbsp;</label>' +
                            '</div>' +
                            '</td>' +
                            '<td>' +
                            '<input id= "sortOrder-' + docId + '" type="text" class="form-control blu-bold w50 text-center lockDocAdd-' + docId + '" maxlength="6" placeholder="">' +
                            '</td>' +
                            '<td>' +
                            '<input id= "ExpiryDays-' + docId + '" type="text" class="form-control blu-bold w50 text-center lockDocAdd-' + docId + '" maxlength="6" placeholder="">' +
                            '</td>' +
                            '</tr>';
                    });
                    $('.tbodyDocSettings').html(row);
                    ns_ComplianceSettings.GetComplianceSettings();
                }
                else
                    $('.tbodyDocSettings').html("<tr><td colspan='10'><center>" + response + "</center></td></tr>");
            });
    },
    InsertUpdate_ComplianceSetting: function () {
        var profileType = $('#ddlProfileType').val();
        var role = $('#ddlRoleList').val();
        if (profileType == 0) {
            ShowAlertMessage("Message", "Select a profile type", 'A');
            $('#ddlProfileType').focus();
            return false;
        }
        if (role == 0) {
            ShowAlertMessage("Message", "Select a role", 'A');
            $('#ddlRoleList').focus();
            return false;
        }
        var checked = $('.chkDocument:checked').length > 0;
        if (!checked) {
            ShowAlertMessage("Message", "Select atleast one document to assign.", 'A');
            return false;
        }
        var allDocs = ns_ComplianceSettings.getAllCheckedDocs();
        var param = "{allDocs:'" + allDocs + "'}";
        try {
            ns_ajax.post(
                "ComplianceSettings/InsertUpdate_ComplianceSetting",
                param,
                function (response) {
                    if (response == "OK") {
                        ShowAlertMessage("Message", "Data saved successfully.", 'C');
                        ns_ComplianceSettings.getAssignedDocuments();
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Message", err.message, 'A');
        };
    },
    getAllCheckedDocs: function () {
        var values = '';
        $('.chkDocument').each(function () {
            var profileType = $('#ddlProfileType').val();
            var role = $('#ddlRoleList').val()
            var id = $(this).attr('data-id');
            var docId = this.id.split('-')[1];
            var docStatus = $('#Mandatory-' + docId).prop('checked') ? 1 : $('#Training-' + docId).prop('checked') ? 2 : $('#Admin-' + docId).prop('checked') ? 3 : 0;
            var label1 = $('#level1-' + docId).prop('checked') ? 1 : 0;
            var label2 = $('#level2-' + docId).prop('checked') ? 1 : 0;
            var label3 = $('#level3-' + docId).prop('checked') ? 1 : 0;
            var label4 = $('#level4-' + docId).prop('checked') ? 1 : 0;
            var label5 = $('#level5-' + docId).prop('checked') ? 1 : 0;
            var label6 = $('#level6-' + docId).prop('checked') ? 1 : 0;
            var showInSignup = $('#SignUp-' + docId).prop('checked') ? 1 : 0;
            var expiryDays = $('#ExpiryDays-' + docId).val() == "" ? '0' : $('#ExpiryDays-' + docId).val();
            var sortOrder = $('#sortOrder-' + docId).val() == "" ? '0' : $('#sortOrder-' + docId).val();
            var docPermission = $("#chk-" + docId).prop('checked') ? 1 : 0;
            values += profileType + "_" + role + "_" + id + "_" + docId + "_" + docStatus + "_" + label1 + "_" + label2 + "_" + label3 + "_" + label4 + "_" + label5 + "_" + label6 + "_" + showInSignup + "_" + expiryDays + "_" + sortOrder + "_" + docPermission + "@";
        });
        if (values !== '')
            values = values.slice(0, -1);
        return values;
    },
    GetComplianceSettings: function () {
        var profileType = $('#ddlProfileType').val();
        var role = $('#ddlRoleList').val();
        var param = { ProfileType: profileType, Role: role };
        ns_ajax.get("ComplianceSettings/GetComplianceSettings",
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    $.each(obj, function (key, value) {
                        $('#chk-' + value.doc_id).prop('checked', true);
                        $('#Mandatory-' + value.doc_id).prop('checked', value.doc_status == 1 ? 'checked' : '');
                        $('#Training-' + value.doc_id).prop('checked', value.doc_status == 2 ? 'checked' : '');
                        $('#Admin-' + value.doc_id).prop('checked', value.doc_status == 3 ? 'checked' : '');
                        $('#level1-' + value.doc_id).prop('checked', value.level1 == 1 ? 'checked' : '');
                        $('#level2-' + value.doc_id).prop('checked', value.level2 == 1 ? 'checked' : '');
                        $('#level3-' + value.doc_id).prop('checked', value.level3 == 1 ? 'checked' : '');
                        $('#level4-' + value.doc_id).prop('checked', value.level4 == 1 ? 'checked' : '');
                        $('#level5-' + value.doc_id).prop('checked', value.level5 == 1 ? 'checked' : '');
                        $('#level6-' + value.doc_id).prop('checked', value.level6 == 1 ? 'checked' : '');
                        $('#SignUp-' + value.doc_id).prop('checked', value.show_in_signup == 1 ? 'checked' : '');
                        $('#sortOrder-' + value.doc_id).val(value.sort_order);
                        $('#ExpiryDays-' + value.doc_id).val(value.expiry_days);
                        $('#chk-' + value.doc_id).attr('data-id', value.id);
                        if (value.doc_additional == 1)
                            $('.lockDocAdd-' + value.doc_id).attr('disabled', true);
                    });
                }
            });
    },
}

function readURL(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $('#img-upload').attr('src', e.target.result);
        }
        reader.readAsDataURL(input.files[0]);
    }
}
//23-08-2019 BY Manpreet
function ConvertDateFormate(date) {
    if (date !== '') {
    var d = new Date(date.split("/").reverse().join("-"));
    var dd = d.getDate() < 10 ? d.getDate() : d.getDate();
    var mm = d.getMonth() < 10 ? d.getMonth() + 1 : d.getMonth() + 1;
    var yy = d.getFullYear();
    var newdate = mm + "/" + dd + "/" + yy;
        return newdate;
    }
    else
        return "";
}
function GetRowNumber(controlName) {
    var controlId = controlName.attr('id').replace(/[^0-9]/gi, ''); // Replace everything that is not a number with nothing
    controlId = parseInt(controlId, 10);
    return controlId;
}
function ConvertTimeInto24Hr(time) {
    var arrTime = [];
    arrTime = time.split(':');
    var hrs = arrTime[0];
    var mnts = arrTime[1].replace(/(am|pm)/, '');
    var format = arrTime[1].replace(/[0-9]/g, '');
    if (format == "pm" && hrs < 12) hrs = parseInt(hrs) + parseInt(12);
    if (format == "am" && hrs == 12) hrs = parseInt(hrs) - parseInt(12);
    var hours = hrs;
    var minutes = mnts;
    if (hrs < 10) hours = 0 + hours;
    if (mnts < 10) minutes = 0 + parseInt(minutes);
    return hours + ":" + minutes;
}
function CalculateMinutes(startTime, endTime) {
    var arrStartTime = [], arrEndTime = [], totalMinutes, totalHours, totalTime;

    startTime = ConvertTimeInto24Hr(startTime);
    endTime = ConvertTimeInto24Hr(endTime);

    arrStartTime = startTime.split(':');
    arrEndTime = endTime.split(':');

    var hours = parseInt(arrEndTime[0]) - parseInt(arrStartTime[0]);
    var minutes = parseInt(arrEndTime[1]) - parseInt(arrStartTime[1]);

    totalMinutes = (parseInt(hours) * parseInt(60)) + (parseInt(minutes));

    totalTime = totalMinutes / 60;

    return totalTime = Math.round(totalTime * 100) / 100;
    //if (endTime === 0)
    //    endTime = "00";

    //return totalTime = startTime + ":" + endTime;
}
function ConvertDateFormate(date) {
    if (date !== '') {
        var d = new Date(date.split("/").reverse().join("-"));
        var dd = d.getDate() < 10 ? d.getDate() : d.getDate();
        var mm = d.getMonth() < 10 ? d.getMonth() + 1 : d.getMonth() + 1;
        var yy = d.getFullYear();
        var newdate = mm + "/" + dd + "/" + yy;
        return newdate;
    }
    else
        return "";
};
function ConvertDate(date) {
    var aarDate = [], newDate;
    aarDate = date.split('/');
    return newDate = aarDate[2] + "-" + aarDate[1] + "-" + aarDate[0];
};
function GetDateRange(startDate, endDate) {
    var aarDate = [], arrAllDates = [];
    aarDate = startDate.split('/');
    startDate = aarDate[2] + "-" + aarDate[1] + "-" + aarDate[0];

    aarDate = endDate.split('/');
    endDate = aarDate[2] + "-" + aarDate[1] + "-" + aarDate[0];

    startDate = new Date(startDate);
    endDate = new Date(endDate);
    while (startDate < endDate) {
        startDate.setDate(startDate.getDate() + 1);
        var year = startDate.getFullYear();
        var month = startDate.getMonth() + 1;
        var day = startDate.getDate();
        var currDate = day + "/" + month + "/" + year;
        arrAllDates.push(currDate);
    }
    return arrAllDates;

};
function CalculateDays(startDate, endDate) {
    var aarDate;

    aarDate = startDate.split('/');
    startDate = aarDate[2] + "/" + aarDate[1] + "/" + aarDate[0];

    aarDate = endDate.split('/');
    endDate = aarDate[2] + "/" + aarDate[1] + "/" + aarDate[0];

    startDate = new Date(startDate);
    endDate = new Date(endDate);

    var diffDate = (endDate - startDate) / (1000 * 60 * 60 * 24);
    var days = Math.round(diffDate);

    return days;
}


function b64toBlob(b64Data, contentType, sliceSize) {
    contentType = contentType || '';
    sliceSize = sliceSize || 512;

    var byteCharacters = atob(b64Data);
    var byteArrays = [];

    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);

        var byteNumbers = new Array(slice.length);
        for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
        }

        var byteArray = new Uint8Array(byteNumbers);

        byteArrays.push(byteArray);
    }
    var blob = new Blob(byteArrays, { type: contentType });
    return blob;
}
//profile img change
$(document).ready(function () {
    $(document).on('change', '#fileInput', function (e) {
        var img = e.target.files[0];
        $('.pixelarity-img-edit-save').attr('data-val', $('.profile-id').attr('data-id'));
        if (!pixelarity.open(img, false, function (res, faces) {
            $(".FullprofileImgBig").attr("src", res);
            $(".face").hide();
            for (var i = 0; i < faces.length; i++) {
                $("body").append("<div class='face' style='height: " + faces[i].height + "px; width: " + faces[i].width + "px; top: " + ($(".FullprofileImgBig").offset().top + faces[i].y) + "px; left: " + ($(".FullprofileImgBig").offset().left + faces[i].x) + "px;'>");
            }
        }, "jpg", 0.7, true)) {
            alert("Whoops! That is not an image!");
        }
    });

    $(document).on('click', '.pixelarity-img-edit-save', function () {
        $(".face").remove();
        var cnd_id = $(this).attr('data-val');
        ns_candidate.UploadImage($(".FullprofileImgBig").attr('src'), cnd_id);
    });

    $(document).on('click', '#btnPasswordUpdate', function () {
        ns_candidate.update_password();
    });

    //Agency Candidate Regostration


    $(document).on('click', '#BtnCandidateRegistration', function () {
      
        ns_candidate.InsertCandidate();
    });
    $(document).on('change', '#ddlcat', function () {
        ns_candidate.Bind_Role();
    });
});

/*************************************************
 *    Working Pattern
* **********************************************/


$(document).ready(function () {
    $(document).on('click', '.cls-working-pattern-action', function () {
        var action = $(this).attr('data-action');
        var id = $(this).attr('data-id');
        if (action == 'new') {
            ns_WorkingPattern.addmoreTime(null);

            $('#txtPatternName').val('');
            $("input[name=rdowrokpattern][value=0]").attr('checked', 'checked');
            $("input[name=rdoPublicholidays]").attr('checked', '');
            $('.clslbloption').removeClass('active');

            $('#btnAddPattern').attr('data-id', '');
            $('#divWorkPattern').hide();
            $('#divCreateEditWorkPattern').show('slow');

        }
        else if (action == 'cancel') {
            $('#divCreateEditWorkPattern').hide();
            $('#divWorkPattern').show('slow');
        }
        else if (action == 'delete') {
            var InUse = $(this).attr('data-total-user');
            if (parseInt(InUse) == 0)
                alert('Coming soon, Thanks');
            else
                ShowAlertMessage("Message", "Sorry ! This pattern cannot be removed because it is already in use", "A");

        }
        else if (action == 'edit') {
            ns_WorkingPattern.addmoreTime($(this).attr('data-json'), '');
            $('#txtPatternName').val($(this).attr('data-name'));
            $("input[name=rdowrokpattern][value=" + $(this).attr('data-status') + "]").attr('checked', 'checked');
            var holiday = $(this).attr('data-holiday');
            $("input[name=rdoPublicholidays][value='" + holiday + "']").attr('checked', 'checked');
            $('.clslbloption').removeClass('active');
            if (holiday == 'Deducted')
                $('#lbloption1').addClass('active');
            else if (holiday == 'Not Deducted')
                $('#lbloption2').addClass('active');
            else
                $('#lbloption3').addClass('active');

            $('#btnAddPattern').html('Update');
            $('#btnAddPattern').attr('data-id', id);
            $('#btnAddPattern').attr('data-rowguid', $(this).attr('data-rowguid'));

            $('#divWorkPattern').hide();
            $('#divCreateEditWorkPattern').show('slow');
        }
        else if (action == 'addmore') {
            var totalDays = $('#spanTotalWpDays').html();
            var startTime = $("#txtWPTimeStart-" + totalDays);
            var endTime = $("#txtWPTimeFinish-" + totalDays);
            var breakTime = $("#txtWPBreak-" + totalDays);

            var flag = 0;
            $('#wprow-' + totalDays + ' td label').each(function (i) {
                var cls = $(this).attr('class');
                if (cls == 'btn btn-toggle-primary btntoggleprimaryactive' || cls == 'btn btntoggleprimaryactive') {
                    ////alert(i + '  ' + $(this).attr('data-day'));
                    flag = flag + 1;
                }
            });

            if (startTime.val().length === 0) {
                startTime.focus();
                ShowAlertMessage("Message", "Please enter start time", "A");
                return false;
            }
            else if (endTime.val().length === 0) {
                endTime.focus();
                ShowAlertMessage("Message", "Please enter finish time", "A");
                return false;
            }
            else if (endTime.val() == startTime.val()) {
                endTime.focus();
                ShowAlertMessage("Message", "Start and finish time can not be same", "A");
                return false;
            }
            else if (flag == 0) {
                $('#divwp-' + totalDays).focus();
                ShowAlertMessage("Message", "Select repeat days", "A");
                return false;
            }
            else {
                if (parseInt(totalDays) <= 6) {
                    ns_WorkingPattern.addmoreTime(null, action);
                    $('#btnaddmoreday').removeClass('a-disabled btn-default cursor-not-allowed');
                    $('#btnaddmoreday').addClass('a-enabled btn-primary');
                }
                else {
                    $('#btnaddmoreday').removeClass('a-enabled btn-primary');
                    $('#btnaddmoreday').addClass('a-disabled btn-default cursor-not-allowed');
                }
            }
        }
        else if (action == 'delete-row') {
            var rowid = id.replace('delete-wp-', '');
            $('#wprow-' + rowid).remove();
            $('#spanTotalWpDays').html(parseInt($('#spanTotalWpDays').html()) - 1);
            if (parseInt($('#spanTotalWpDays').html()) <= 6) {
                $('#btnaddmoreday').removeClass('a-disabled btn-default cursor-not-allowed');
                $('#btnaddmoreday').addClass('a-enabled btn-primary');
            }
            else {
                $('#btnaddmoreday').removeClass('a-enabled btn-primary');
                $('#btnaddmoreday').addClass('a-disabled btn-default cursor-not-allowed');
            }
        }
        else if (action == 'add') {
            var rowguid = $(this).attr('data-rowguid');
            var patternName = $('#txtPatternName').val().trim();
            var default_status = $('input[name="rdowrokpattern"]:checked').val();
            var holiday = $('input[name="rdoPublicholidays"]:checked').val();

            var WorkPatternJson = [];
            $('.clsworkingpatrrentime tbody tr').each(function () {
                var rowid = $(this).attr('id').replace('wprow-', '');
                var startTime = $("#txtWPTimeStart-" + rowid);
                var endTime = $("#txtWPTimeFinish-" + rowid);
                var breakTime = $("#txtWPBreak-" + rowid);

                var days = [];
                $('#wprow-' + rowid + ' td label').each(function (j) {
                    var cls = $(this).attr('class');
                    if (cls == 'btn btn-toggle-primary btntoggleprimaryactive' || cls == 'btn btntoggleprimaryactive') {
                        days.push($(this).attr('data-day'));
                    }
                });
                var obj = {};
                obj.start = startTime.val();
                obj.finish = endTime.val();
                obj.break = breakTime.val();
                obj.week_day = days;
                WorkPatternJson.push(obj);
            });
            var pattern_json = JSON.stringify(WorkPatternJson);

            if (patternName == '') {
                $('#txtPatternName').focus();
                ShowAlertMessage("Message", "Enter Pattern Name", "A");
                return false;
            }
            else if (default_status !== '0' && default_status !== '1') {
                $('input[name="rdowrokpattern"]').focus();
                ShowAlertMessage("Message", "Select Default Pattern status", "A");
                return false;
            }
            else if (holiday == '') {
                $('input[name="rdowrokpattern"]').focus();
                ShowAlertMessage("Message", "Select Public holidays", "A");
                return false;
            }
            else if (pattern_json == '[{"start":"","finish":"","break":"0","week_day":[]}]') {
                $('input[name="rdowrokpattern"]').focus();
                ShowAlertMessage("Message", "Time and Breaks can not blank", "A");
                return false;
            }
            else {
                var obj_workPatern = {}
                obj_workPatern.action = 'INSERTUPDATE';
                obj_workPatern.rowid = rowguid;
                obj_workPatern.pattern_id = id == '' ? '0' : id;
                obj_workPatern.pattern_name = patternName;
                obj_workPatern.default_status = default_status;
                obj_workPatern.public_holiday = holiday;
                obj_workPatern.pattern_json = pattern_json;
                var strFinal = "[" + JSON.stringify(obj_workPatern) + "]";
                ns_WorkingPattern.AddUpdate(strFinal);
            }
        }
    });

    $(document).on('change', '#ddlWorkingPattern', function () {
        var datajson = $("#ddlWorkingPattern option:selected").attr('data-json');
        ns_WorkingPattern.addmoreTime(datajson, '');
    });

    $(document).on('change', '#ddlWorkingTimePattern', function () {
        var datajson = $("#ddlWorkingTimePattern option:selected").attr('data-json');
        var total_hours_decimal = $("#ddlWorkingTimePattern option:selected").attr('data-total_hours_decimal');
        var total_hours_min = $("#ddlWorkingTimePattern option:selected").attr('data-total_hours_min');
        //$('#txtWorkingWeekHour').val(total_hours_decimal.split('.')[0]);
        //$('#txtWorkingWeekMin').val(total_hours_decimal.split('.')[1]);

        var totalMinutes = (parseFloat(total_hours_decimal) * 60);
        var hours = Math.floor(totalMinutes / 60);
        var minutes = totalMinutes % 60;
      
        $('#txtWorkingWeekHour').val(hours);
        $('#txtWorkingWeekMin').val(minutes);

   
        ns_WorkingPattern.ViewWorkTimePattern(datajson);
    });

    $(document).on('click', '.clseditgeneralPattern', function () {
        var datajson = $(this).attr('data-json');
        ns_WorkingPattern.ViewWorkTimePattern(datajson);
    });
});
ns_WorkingPattern = {   
    AddUpdate: function (params) {
        ns_ajax.post(
            urls.employerApi + "addupdatepattern",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                  /*  ShowAlertMessage("Message", "Your request has been proceed successfully", "C");*/
                    ns_WorkingPattern.GetWrokingPatternList();
                    $('#divCreateEditWorkPattern').hide();
                    $('#divWorkPattern').show('slow');
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    GetWrokingPatternList: function () {
        $('#workingPattern_Placeholder').html(waitcal());
        $('#ddlWorkingPattern').html('<option value="0" data-json="">Select a Pattern..</option>');
        var type = "workpattern";
        var group_name = '';
        var param = { id: 0, role_id: 0, search: group_name, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;

                    call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#WorkPattern_Template', '#workingPattern_Placeholder');
                    setTimeout(
                        function () {
                            $.each(obj.WorkPattern, function (key, value) {
                                $.each(value.PaternJson, function (key, myvalue) {
                                    $('#divPatternDuration' + value.pattern_id).html((parseFloat($('#divPatternDuration' + value.pattern_id).html()) + parseFloat(myvalue.duration2)).toFixed(2));
                                });
                            });
                        }, 500);

                    //duration2, pattern_id 
                    $.each(obj.WorkPattern, function (key, value) {
                        $('#ddlWorkingPattern').append("<option value=" + value.pattern_id + " data-json='" + value.pattern_jsonData + "'>" + value.pattern_name + "</option>")
                    });
                }
                else
                    $('#workingPattern_Placeholder').html("Not Available");
            });
    },
  
    FillDropdownWithPatternList: function (ctrl_id, patternid) {
        $(ctrl_id).empty();
        $(ctrl_id).html('<option value="0" data-json="">Select a Pattern..</option>');
        var type = "workpattern";
        var group_name = '';
        var param = { id: 0, role_id: 0, search: group_name, type: type };
        ns_ajax.get(
            urls.employerApi + 'Get',
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response;
                    //duration2, pattern_id 
                    var defaultPattern_id = '0';
                    $.each(obj.WorkPattern, function (key, value) {
                      
                        $(ctrl_id).append("<option value=" + value.pattern_id + " data-json='" + value.pattern_jsonData + "'>" + value.pattern_name + "</option>")
                        if (value.default_status == '1')
                            defaultPattern_id = value.pattern_id;

                    });
                    if (parseInt($(ctrl_id).attr('data-selected-id')) > 0)
                        $(ctrl_id).val($(ctrl_id).attr('data-selected-id'));
                    else
                        $(ctrl_id).val(defaultPattern_id);
                }
            });
    },
    workingPatternAction: function () {
        var obj = {};
        obj.DocCategory = "C";
        obj.DocId = $('#btnSubmitDocData').attr('data-docid');
        obj.DocName = $('#txtDocumentName').val().trim();
        obj.DocDesc = $('#txtDocDescription').val().trim();
        obj.ParentId = $('#ddlParent').val();
        obj.DocIssueCountryStatus = $('#chkDocIssueCounStatus').prop('checked') ? '1' : '0';
        obj.DocRequiredIssueCountry = $('#txtDocRequiredIssueCountry').attr('data-countryid');
        obj.DefaultStatus = $('#chkDefaultStatus').prop('checked') ? '1' : '0';
        obj.InputType = $('#chkInputType').prop('checked') ? '1' : '0';
        obj.IsAdditional = $('#chkIsAdditional').prop('checked') ? '1' : '0';

        var msg = '', flag = 0;
        if (obj.DocCategory == "") {
            flag = 1;
            msg = "Select document category";
            $('#ddlDocCategory').focus();
        }
        else if (obj.DocName == "") {
            flag = 1;
            msg = "Enter document name";
            $('#txtDocumentName').focus();
        }
        else if (obj.DocDescription == "") {
            flag = 1;
            msg = "Enter document description";
            $('#txtDocDescription').focus();
        }
        else if (($('#chkDocIssueCounStatus').prop('checked')) && (obj.DocRequiredIssueCountry == 0)) {
            flag = 1;
            msg = "Enter a document required issue country name";
            $('#txtDocRequiredIssueCountry').focus();
        }

        else
            flag = 0;
        if (flag == 0) {
            try {
                ns_ajax.post(
                    "ComplianceSettings/InsertUpdateDocData",
                    obj,
                    function (response) {
                        if (response.split('|')[0] == "OK") {
                            ShowAlertMessage("Message", "Document data submitted successfully !", 'C');
                            //$('#modalAddDocument').modal('hide');
                            ns_ComplianceSettings.Reset();
                            ns_ComplianceSettings.FillParentType();
                            ns_ComplianceSettings.getAllDocDetails();
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            catch (error) {
                ShowAlertMessage("Error", err, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');
    },
    addmoreTime: function (JsonData, action) {
        JsonData = (JsonData == '' || JsonData == null) ? '[{ "start": "", "finish": "", "break": "0", "week_day": [] }]' : JsonData;
        var obj = jQuery.parseJSON(JsonData);
        if (action == 'addmore') {
            $('#AddPatternTime_Placeholder')
            $('#AddPatternTime_Template').tmpl(obj).appendTo('#AddPatternTime_Placeholder');
        }
        else {
            call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#AddPatternTime_Template', '#AddPatternTime_Placeholder');
        }
        setTimeout(function () {
            DatePairFuction();

            $('.clsworkingpatrrentime [data-toggle="buttons"]  .btn').on('click', function () {
                // toggle style
                $(this).toggleClass('btn-toggle-primary btntoggleprimaryactive');

                // toggle checkbox
                var $chk = $(this).find('[type=checkbox]');
                $chk.prop('checked', !$chk.prop('checked'));
                return false;
            });

            var totalDays = $('#spanTotalWpDays').html();
            if (parseInt(totalDays) <= 6) {
                $('#btnaddmoreday').removeClass('a-disabled btn-default cursor-not-allowed');
                $('#btnaddmoreday').addClass('a-enabled btn-primary');
            }
            else {
                $('#btnaddmoreday').removeClass('a-enabled btn-primary');
                $('#btnaddmoreday').addClass('a-disabled btn-default cursor-not-allowed');
            }

        }, 200);
    },
    ViewWorkTimePattern: function (JsonData) {
        if (JsonData == '' || JsonData == null) {
            $('#viewSelectedPatternTime_Placeholder').html('');
            $('#divShowWorkPatern').hide('slow');
        }
        else {
            $('#divShowWorkPatern').show('slow');
            var obj = jQuery.parseJSON(JsonData);
            call_tmpl_binder(obj, '/Template/setting_tmpl.html', '#viewSelectedPatternTime_Template', '#viewSelectedPatternTime_Placeholder');
        }
    },
}
function GetRowCounter(rowid) {
    var count = $('#AddPatternTime_Placeholder tr').length;
    var counter = parseInt(count) + 1;
    counter = parseInt(rowid) >= counter ? rowid : counter;
    $('#spanTotalWpDays').html(counter);
    return counter;
}
function CndWorkTimePattern(JsonData) {  
    if (JsonData == '' || JsonData == null)
        $('#CndWorkTimePattern_Placeholder').html('<tr><td colspan="4"><div>Work Pattern Not available !</div></td></tr>');
    else
        call_tmpl_binder(jQuery.parseJSON(JsonData), '/Template/setting_tmpl.html', '#viewSelectedPatternTime_Template', '#CndWorkTimePattern_Placeholder');

}
function EmployeeWorkTimePattern(JsonData) {  
    if (JsonData == '' || JsonData == null)
        $('#CndWorkTimePattern_Placeholder').html('<tr><td colspan="4"><div>Work Pattern Not available !</div></td></tr>');
    else {    
        JsonData = jQuery.parseJSON(JsonData);
        call_tmpl_binder(JsonData, '/Template/setting_tmpl.html', '#CndWorkPattern_Template', '#CndWorkTimePattern_Placeholder');
       
        //totalDays, totalDuration
        console.log(JsonData);
        var totalDays=0,totalDuration = 0;
        $.each(JsonData, function (key, value) {
            totalDays = totalDays + 1;
            totalDuration = parseFloat(totalDuration) + parseFloat(value.duration2);         
        });   
         setTimeout(
            function () {
                 $('#spanTotalWokingDays').html('<b>' + totalDuration.toFixed(1) + '</b> hr(s) in week including breaks. (Total <b>' + totalDays + '</b> working days)');
            }, 300);      
    }     

}


/*************************************************
 *     Import Employee
 * **********************************************/
$(document).ready(function () {

    //Add Agency
    $(document).on('click', '#btnAddNewOrg', function () {
        ns_organisation.LoadSectors();
        $('#txtorg_name').val('');
        $('#txtorg_name').val('');
        $('#ddlindustry').val('0');
        $('#txtfirst_name').val('');
        $('#txtlast_name').val('');
        $('#txtemail').val('');
        $('#txtmobile').val('');

    });
    $(document).on('click', '#btnSaveOrgBasicDetails', function () {
        ns_organisation.InsertOrgbasicDetails();
    });

    $(document).on('change', "#ddlCndTypeImport", function () {
        var protype = $('#ddlCndTypeImport').val();
        $('#ddlBulkOrg_Placeholder')[0].selectedIndex = 0;
        $('.divBulkFileUploader').css('border', '1px solid #bbb');
        $('#ddlBulkOrg_Placeholder').css('border', '1px solid #bbb');
        if (protype == 'A') {
            $('#ddlBulkOrg').show();    
        }
        else {
            $('#ddlBulkOrg').hide();         
        }
    });
    $(document).on('change', "#ddl_role_0", function () {
        var role_id = $('#ddl_role_0').val();
        $('.clsRoleImport').val(role_id);
    });
    $(document).on('change', "#ddl_location_0", function () {
        var location_id = $('#ddl_location_0').val();
        $('.clsLocationImport').val(location_id);
    });
    $(document).on('click', ".cls-import-action", function () {
        var action = $(this).attr('data-action');
        if (action == 'importcndcsv') {
            ns_bulk_Import.bindDropdowns(0, "org", "ddlBulkOrg");
            $('.bulk-ddl-CND-type')[0].selectedIndex = 0;
            $('#ddlCndTypeImport').css('border', '1px solid #bbb');
            $('.divBulkFileUploader').css('border', '1px solid #bbb');
            $('#ddlBulkOrg_Placeholder').css('border', '1px solid #bbb');
            $('.divexistemail, .divexistmobile').hide();
            $('.divexistMsg, .divexistSucessMsg').hide();
            $('#divPromptBlock').hide();
            $('.divCsvDataPreviewBlock').hide();
            $('.divFileImportBlock').show('slow');
            $('#import-tab-step1').removeClass('completed').addClass('active');
            $('#import-tab-step2').removeClass('completed').removeClass('active');
            $('#import-tab-step3').removeClass('completed').removeClass('active');
        }
        else if (action == 'showcsvdata') {
            if (ns_bulk_Import.validateForm($(this).attr('data-bulk-type')))
                ns_bulk_Import.convertCSVToJSON($('#bulkFileUpload'), $(this).attr('data-bulk-type'));
        }
        else if (action == 'save') {
            var dataJson = $(this).attr('data-json');
            var obj = jQuery.parseJSON(dataJson)[0];

            if (obj.length > 0) {
                var flag = true;
                $.each(obj, function (key, value) {
                    var ctrddlRole = $("#ddl_role_" + (key + 1));
                    var ctrddlLocation = $("#ddl_role_" + (key + 1));

                    ctrddlRole.css('border', '1px solid #ddd');
                    ctrddlLocation.css('border', '1px solid #ddd');

                    var cnd_role_id = $("#ddl_role_" + (key + 1) + " option:selected").val();
                    var cnd_location_id = $("#ddl_location_" + (key + 1) + " option:selected").val();

                    if (cnd_role_id == '0') {
                        ctrddlRole.css('border', '1px solid #f00');
                        ShowAlertMessage("Message", "Select Employee Role", "A");
                        $("#ddl_role_" + (key + 1)).focus();
                        flag = false;
                        return false;
                    }
                    else
                        ctrddlRole.css('border', '1px solid #ddd');

                    if (cnd_location_id == '0') {
                        ctrddlLocation.css('border', '1px solid #f00');
                        ShowAlertMessage("Message", "Select Employee Role", "A");
                        $("#ddl_location_" + (key + 1)).focus();
                        flag = false;
                        return false;
                    }
                    else
                        ctrddlLocation.css('border', '1px solid #ddd');

                    if (flag) {
                        $.each(value, function (ky, val) {
                            if (ky == 'cnd_role')
                                obj[key].cnd_role = cnd_role_id;
                            if (ky == 'cnd_location')
                                obj[key].cnd_location = cnd_location_id;
                        });
                    }
                });
                if (flag) {
                    var params = "[" + JSON.stringify(obj) + "]";
                    ns_bulk_Import.post(params);
                }
            }
        }
        else if (action == 'updateignore') {
            var prompt_status = $('input[name="rdoPrompt"]:checked').val();
            if (prompt_status !== '1' && prompt_status !== '2') {
                $('input[name="rdoPrompt"]').focus();
                ShowAlertMessage("Message", "Please chose one of the option below to complete the process", "A");
                return false;
            }
            else {
                var dataJson = $(this).attr('data-json');
                var obj = jQuery.parseJSON(dataJson)[0];
                $.each(obj, function (key, value) {
                    $.each(value, function (ky, val) {
                        if (ky == 'prompt_status')
                            obj[key].prompt_status = prompt_status;
                    });
                });
                var params = "[" + JSON.stringify(obj) + "]";             
                ns_bulk_Import.post(params);
            }
        }
        else if (action == 'back') {
            $('#BtnSaveCSVDATA').attr('data-json', '');
            $('.divCsvDataPreviewBlock').hide();
            $('.divFileImportBlock').show('slow');
            $('.divexistemail, .divexistmobile').hide();
            $('.divexistMsg, .divexistSucessMsg').hide();
            $('#divPromptBlock').hide();
            $('#BtnSaveCSVDATA').attr('data-action', 'save');

            $('#import-tab-step1').removeClass('completed').addClass('active');
            $('#import-tab-step2').removeClass('completed').removeClass('active');
            $('#import-tab-step3').removeClass('completed').removeClass('active');
        }
        else if (action == 'cancel') {
            $('.bulk-upload').modal('hide');
            $('.modal-backdrop').hide('slow');
            $('#BtnSaveCSVDATA').attr('data-json', '');
            $('.divCsvDataPreviewBlock').hide();
            $('.divFileImportBlock').show('slow');
            $('.divexistemail, .divexistmobile').hide();
            $('.divexistMsg, .divexistSucessMsg').hide();
            $('#divPromptBlock').hide();
            $('#BtnSaveCSVDATA').attr('data-action', 'save');
            $('#import-tab-step1').removeClass('completed').addClass('active');
            $('#import-tab-step2').removeClass('completed').removeClass('active');
            $('#import-tab-step3').removeClass('completed').removeClass('active');
        }
    });
});
ns_bulk_Import = {
    csvInfo: function (type) {
        var csvColumns = '';
        //csvColumns = 'SrNo*,Title*,First_Name*,Middle_Name,Last_Name,DOB,Gender,Account_Email*,Personal_Email,Mobile*,Home_Phone,Payroll_Number,Wage_Salary,Pension_Eligible,Opsted_Out,Employee_contribution_Amount,Employer_contribution_Amount,Enrolment_Date,Job_Title,Contract_Type,Notify_Of_Expiry_On,Probation_Required,Notice_Period_Type,Notice_Period,Tax_Code,NI_Number,Passport_Number,Country_of_Issue,Date_of_Expiry,Visa_Number,Visa_Expiry_Date,Driving_Licence_Number,Country_of_Issue,Licence_Class,Date_of_Expiry,Notes';

        if (type.toUpperCase() == 'CANDIDATE')
            csvColumns = 'SrNo*,Title*,First_Name*,Middle_Name,Last_Name,DOB,Gender,Account_Email*,Personal_Email,Mobile*,Home_Phone,Job_Title,Tax_Code,NI_Number,Notes';
        $('.btn-download-template').attr('href', 'data:text/csv;charset=utf-8,' + encodeURI(csvColumns));
        $('.btn-download-template').attr('target', '_blank');
        $('.btn-download-template').attr('download', type + '_Template.csv');
    },
    validateForm: function (bulkType) {
        $('#ddlCndTypeImport').css('border', '1px solid #bbb');
        $('#ddlBulkOrg_Placeholder').css('border', '1px solid #bbb');
        $('.divBulkFileUploader').css('border', '1px solid #bbb');

        var bulkFileUploader = $('#bulkFileUpload');
        if (bulkType.toUpperCase() == 'CANDIDATES') {
            if ($('#ddlCndTypeImport').val() == '') {
                $('#ddlCndTypeImport').focus();
                $('#ddlCndTypeImport').css('border', '1px solid red');
                ShowAlertMessage("Message", "Please select employee type", "A");
                return false;
            }
            else if ($('#ddlCndTypeImport').val() == 'A' && $('#ddlBulkOrg_Placeholder').val() == '0') {
                $('#ddlBulkOrg_Placeholder').focus();
                $('#ddlBulkOrg_Placeholder').css('border', '1px solid red');
                ShowAlertMessage("Message", "Select an agency", "A");
                return false;
            }
        }
        if (bulkFileUploader[0].files.length == 0) {
            $('.divBulkFileUploader').css('border', '1px solid red');
            ShowAlertMessage("Message", "Please select file !", "A");
            return false;
        }
        else
            $('.divBulkFileUploader').css('border', '1px solid #bbb');

        return true;
    },
    convertCSVToJSON: function (csvFile, type) {
        var CndType = $("#ddlCndTypeImport option:selected").val();
        var agencyname = $("#ddlBulkOrg_Placeholder option:selected").text();
        var agency_id = $("#ddlBulkOrg_Placeholder option:selected").val();

        if (typeof (FileReader) != "undefined") {
            var reader = new FileReader();
            var arrNullFound = new Array(), arrCSV = new Array(), arrResult = new Array(), cells = new Array(), arrFileColumns = new Array();
            var bulkCSVJson = '', objAction = '', objData = '', noNullFound = true;
            reader.readAsText(csvFile[0].files[0]);
            reader.onload = function (e) {
                var csvRows = e.target.result.split("\r\n");
                //Filter empty csvRows here
                csvRows = csvRows.filter(function (element) { return element != null && element != ""; });

                if (csvRows.length > 1) {
                    //Validate diapers here
                    arrResult = ns_bulk_Import.validateCSV(csvRows, type);
                    //Get correct csv records here
                    csvRows = arrResult[0];

                    //Get csv file column names here
                    arrFileColumns = arrResult[3];

                    if (csvRows.length > 1) {
                        for (var i = 1; i < csvRows.length; i++) {
                            cells = csvRows[i].split(",");
                           
                            if (type.toUpperCase() == 'CANDIDATES') {
                                var sr_no = cells[arrFileColumns.indexOf('SrNo*')];
                                var title = cells[arrFileColumns.indexOf('Title*')];
                                var First_Name = cells[arrFileColumns.indexOf('First_Name*')];
                                var Middle_Name = cells[arrFileColumns.indexOf('Middle_Name')];
                                var Last_Name = cells[arrFileColumns.indexOf('Last_Name')];
                                var DOB = cells[arrFileColumns.indexOf('DOB')];
                                var Gender = cells[arrFileColumns.indexOf('Gender')];
                                var email_id = cells[arrFileColumns.indexOf('Account_Email*')];
                                var Personal_Email = cells[arrFileColumns.indexOf('Personal_Email')];
                                var mobile_number = cells[arrFileColumns.indexOf('Mobile*')];
                                var Home_Phone = cells[arrFileColumns.indexOf('Home_Phone')];
                                //var Payroll_Number = cells[arrFileColumns.indexOf('Payroll_Number')];
                                //var Wage_Salary = cells[arrFileColumns.indexOf('Wage_Salary')];
                                //var Pension_Eligible = cells[arrFileColumns.indexOf('Pension_Eligible')];
                                //var Opsted_Out = cells[arrFileColumns.indexOf('Opsted_Out')];
                                //var Employee_contribution_Amount = cells[arrFileColumns.indexOf('Employee_contribution_Amount')];
                                //var Employer_contribution_Amount = cells[arrFileColumns.indexOf('Employer_contribution_Amount')];
                                //var Enrolment_Date = cells[arrFileColumns.indexOf('Enrolment_Date')];
                                var Job_Title = cells[arrFileColumns.indexOf('Job_Title')];
                                //var Contract_Type = cells[arrFileColumns.indexOf('Contract_Type')];
                                //var Notify_Of_Expiry_On = cells[arrFileColumns.indexOf('Notify_Of_Expiry_On')];
                                //var Probation_Required = cells[arrFileColumns.indexOf('Probation_Required')];
                                //var Notice_Period_Type = cells[arrFileColumns.indexOf('Notice_Period_Type')];
                                //var Notice_Period = cells[arrFileColumns.indexOf('Notice_Period')];
                                var Tax_Code = cells[arrFileColumns.indexOf('Tax_Code')];
                                var NI_Number = cells[arrFileColumns.indexOf('NI_Number')];
                                //var Passport_Number = cells[arrFileColumns.indexOf('Passport_Number')];
                                //var Country_of_Issue = cells[arrFileColumns.indexOf('Country_of_Issue')];
                                //var Date_of_Expiry = cells[arrFileColumns.indexOf('Date_of_Expiry')];
                                //var Visa_Number = cells[arrFileColumns.indexOf('Visa_Number')];
                                //var Visa_Expiry_Date = cells[arrFileColumns.indexOf('Visa_Expiry_Date')];
                                //var Driving_Licence_Number = cells[arrFileColumns.indexOf('Driving_Licence_Number')];
                                //var Country_of_Issue = cells[arrFileColumns.indexOf('Country_of_Issue')];
                                //var Licence_Class = cells[arrFileColumns.indexOf('Licence_Class')];
                                //var Date_of_Expiry = cells[arrFileColumns.indexOf('Date_of_Expiry')];
                                var Notes = cells[arrFileColumns.indexOf('Notes')];

                                var cnd_role = "0", cnd_location = "0";
                                objData = {
                                    "action": 'import',
                                    "sr_no": i,
                                    "prompt_status": '0',
                                    "cnd_type": 'EMP',
                                    "cnd_sub_type": CndType,
                                    "cnd_agency": agencyname,
                                    "cnd_agency_id": agency_id,
                                    "cnd_role": cnd_role,
                                    "cnd_location": cnd_location,
                                    "title": title,
                                    "first_name": First_Name,
                                    "middle_name": Middle_Name,
                                    "last_name": Last_Name,
                                    "DOB": DOB,
                                    "gender": Gender,
                                    "email_id": email_id,
                                    "personal_email": Personal_Email,
                                    "mobile_number": mobile_number,
                                    "home_phone": Home_Phone,
                                    //"payroll_number": Payroll_Number,
                                    //"wage_salary": Wage_Salary,
                                    //"pension_eligible": Pension_Eligible,
                                    //"opsted_out": Opsted_Out,
                                    //"employee_contribution_amount": Employee_contribution_Amount,
                                    //"employer_contribution_amount": Employer_contribution_Amount,
                                    //"enrolment_date": Enrolment_Date,
                                    "job_title": Job_Title,
                                    //"contract_type": Contract_Type,
                                    //"notify_of_expiry_on": Notify_Of_Expiry_On,
                                    //"probation_required": Probation_Required,
                                    //"notice_period_type": Notice_Period_Type,
                                    //"notice_period": Notice_Period,
                                    "tax_code": Tax_Code,
                                    "ni_number": NI_Number,
                                    //"passport_number": Passport_Number,
                                    //"country_of_issue": Country_of_Issue,
                                    //"date_of_expiry": Date_of_Expiry,
                                    //"visa_number": Visa_Number,
                                    //"visa_expiry_date": Visa_Expiry_Date,
                                    //"driving_licence_number": Driving_Licence_Number,
                                    //"country_of_issue": Country_of_Issue,
                                    //"licence_class": Licence_Class,
                                    //"date_of_expiry": Date_of_Expiry,
                                    "notes": Notes
                                };
                            }
                            arrCSV.push(objData);
                        }
                        //Create JSON object to pass it to api
                        bulkCSVJson = "[" + JSON.stringify(arrCSV) + "]";
                        call_tmpl_binder(jQuery.parseJSON(bulkCSVJson)[0], '/Template/cnd_profile_tmpl.html', '#ImportCndProfiles_Template', '#bodyimportedRecordsTable');
                        setTimeout(function () { ns_bulk_Import.Get_JobRole_Location('.clsLocationImport', '.clsRoleImport'); }, 300);
                        if (jQuery.parseJSON(bulkCSVJson)[0].length > 0) {
                            $('#BtnSaveCSVDATA').attr('data-json', bulkCSVJson);
                            $('.divFileImportBlock').hide();
                            $('.divexistemail, .divexistmobile').hide();
                            $('.divexistMsg, .divexistSucessMsg').html('');
                            $('#divPromptBlock').hide();
                            $('.divCsvDataPreviewBlock').show('slow');
                            $('#import-tab-step1').removeClass('active').addClass('completed');
                            $('#import-tab-step2').addClass('active');
                        }

                        //Bulk upload api call
                        //ns_bulk_Import.post(bulkCSVJson, type, arrResult);
                    }
                    else {
                        ShowAlertMessage("Message", "There is no corrects " + type + "  record in the file.<br> Please check Required field value and pattern !", "A");
                        if (result[1].length > 1) {
                            $('<a></a>').addClass('download-file').attr('target', '_blank').attr('href', 'data:text/csv;charset=utf8,' + encodeURI(result[1].join('\n'))).attr('download', type.toUpperCase() + '_ERRORS_RECORDS.csv').css('display', 'none').appendTo('.tabs-container');
                            $('.download-file')[0].click();
                            $('.download-file').remove();
                            $('<a></a>').addClass('download-file').attr('target', '_blank').attr('href', 'data:text/csv;charset=utf8,' + encodeURI(result[2].join('\n'))).attr('download', type.toUpperCase() + '_ERRORS.csv').css('display', 'none').appendTo('.tabs-container');
                            ShowAlertMessage("Message", "These records contain errors please a look on files !", "A");
                            $('.download-file')[0].click();
                            $('.download-file').remove();
                            result[1].length = 0;
                            result[2].length = 0;
                        }
                    }
                }
                else
                    ShowAlertMessage("Message", "There is no  record in the " + type + " file, Please add some data then process again !", "A");
            }
        }
    },
    validateCSV: function (fileRows, fileType) {
        //Change fileType to upper case 
        fileType = fileType.toUpperCase();

        var arrErrors = new Array(), arrFileColumns = new Array(), arrErrorRecord = new Array(), arrCorrectRecord = new Array(), arrMaster = new Array();
        var nullColumns = '', invalidColumns = '', cells = '', csvColumns = '', cnd_titles = ['Mr,', 'Mrs', 'Miss', 'Dr'];
        for (var i = 0; i < fileRows.length; i++) {
            cells = fileRows[i].split(","); nullColumns = '', invalidColumns = '';
            if (i == 0) {
                //Get All Header columns
                arrFileColumns = cells;
                csvColumns = fileRows[i];
            }
            else {
                for (var j = 0; j < cells.length; j++) {
                    var ColumnsName = arrFileColumns[j];
                    ColumnsName = ((ColumnsName.slice(-1)) == '*' ? ColumnsName.slice(0, -1).toLowerCase() : ColumnsName.toLowerCase());

                    if (fileType == "CANDIDATES") {
                        if ((ColumnsName == 'srno' || ColumnsName == 'title' || ColumnsName == 'first_name' || ColumnsName == 'account_email' || ColumnsName == 'mobile') && cells[j].length == 0)
                            nullColumns += "[" + arrFileColumns[j] + "]";
                        if (ColumnsName == 'mobile' && cells[j] !== '' && (cells[j].length < 10 || cells[j].length > 11))
                            invalidColumns += "[" + arrFileColumns[j] + "] is invaild."
                        if (ColumnsName == 'account_email' && cells[j].length > 0 && !IsEmail(cells[j]))
                            invalidColumns += "[" + arrFileColumns[j] + "] is invaild."
                    }
                }
                if (nullColumns.length > 0) {
                    arrErrors.push(cells[0] + "," + nullColumns + " are null" + (fileType == "CANDIDATES" ? invalidColumns.length > 0 ? ' & ' : '' + invalidColumns : ''));
                    arrErrorRecord.push(fileRows[i]);
                }
                else
                    arrCorrectRecord.push(fileRows[i]);
            }
        }
        //Added head columns in array
        arrCorrectRecord.unshift(csvColumns);
        arrErrorRecord.unshift(csvColumns);
        arrErrors.unshift("Srno,Errors");

        //Generate master array
        arrMaster.push(arrCorrectRecord);
        arrMaster.push(arrErrorRecord);
        arrMaster.push(arrErrors);
        arrMaster.push(arrFileColumns);

        return arrMaster;
    },
    post: function (params) {
        $('#BtnSaveCSVDATA').addClass('a-disabled');
        $('#BtnSaveCSVDATA').html('Process...<img src="images/spin.gif" />');
        var serverResponse;
        ns_ajax.post(
            urls.employees + 'import',
            params,
            function (response) {
                $('#BtnSaveCSVDATA').removeClass('a-disabled');
                $('#BtnSaveCSVDATA').html('Save');

                if (response.split('|')[0] == "OK") {
                    if (response.split('|')[1] == "UPGRADESUBS") {
                        $('#spanAccountRenewalTitle').html('Upgrade subscription');
                        $('#divAccountRenewalMessage').html('Your current plan users limit is exceeding, please upgrade your plan to avail more license(s).');
                        $('#btnsubsRenewal').html('Upgrade Subscription');
                        $("#ModalSubcription").modal('show');
                    }
                    else {
                        serverResponse = response.split('|')[1] !== "" ? jQuery.parseJSON(response.split('|')[1]) : null;
                        var flag = true, totalRecords = 0, totalImport = 0, tbl_email = '', tbl_mobile = '', respons_status = '', msg = '';
                        $.each(serverResponse.Results, function (index, value) {
                            respons_status = value.status;
                            msg = value.msg;
                            totalRecords = value.total_records;
                            totalImport = value.total_import;


                            var objEmails = value.existing_email;
                            var objMobiles = value.exisitng_mobile;

                            if (respons_status == 'failed') {
                                $.each(jQuery.parseJSON(objEmails), function (idx, val) {
                                    tbl_email += '<tr><td>' + val.name + '</td><td>' + val.email + '</td></tr>';
                                    flag = false;
                                });
                                $.each(jQuery.parseJSON(objMobiles), function (idx, val) {
                                    tbl_mobile += '<tr><td>' + val.name + '</td><td>' + val.mobile + '</td></tr>';
                                    flag = false;
                                });
                            }
                            else {
                                flag = true;
                            }
                        });
                        if (flag) {
                            msg = '<b>' + totalImport + "</b> employees has been imported out of <b>" + totalRecords + "</b>";
                            ShowAlertMessage("Message", msg, "C");
                            $('.divexistSucessMsg').html(msg).show();
                            $('.divexistemail, .divexistmobile').show('slow');
                            $('.divexistMsg').html('').hide();
                            $('.divCsvDataPreviewBlock').hide();
                            $('#divPromptBlock').hide();
                            $('#BtnSaveCSVDATA').attr('data-action', 'save');
                            $('#import-tab-step1').addClass('completed');
                            $('#import-tab-step2').addClass('completed').removeClass('active');
                            $('#import-tab-step3').addClass('completed').removeClass('active');
                            ns_employee.get('Profiles');
                        }
                        else {
                            msg = 'We found few matching records in the system that already exists.';
                            ShowAlertMessage("Message", msg, "");
                            $('.divFileImportBlock').hide();
                            $('.divCsvDataPreviewBlock').hide();
                            $('.clsPromptAccepting').show();
                            $('#divPromptBlock').show();
                            $('.divexistMsg').html(msg).show();
                            $('.divexistSucessMsg').html('').hide();
                            $('#BtnSaveCSVDATA').attr('data-action', 'updateignore');

                            $('#import-tab-step1').addClass('completed');
                            $('#import-tab-step2').removeClass('active').addClass('completed');
                            $('#import-tab-step3').addClass('active');

                            if (tbl_email !== '') {
                                $('.divexistemail').html('<table class="table table-hover table-bordered wd-table emptbl"><thead><tr><th style="width:50px"><b>Name</b></th><th><i class="zmdi zmdi-email mr-1"></i>Matching Email Id</th></tr></thead><tbody>' + tbl_email + '</tbody></table>');
                                $('.divexistemail').show('slow');
                            }
                            if (tbl_mobile !== '') {
                                $('.divexistmobile').html('<table class="table table-hover table-bordered wd-table emptbltable"> <thead><tr><th>Name</th><th><i class="zmdi zmdi-phone-in-talk mr-1"></i>Matching Mobile Number.</th></tr></thead><tbody>' + tbl_mobile + '</tbody></table>');
                                $('.divexistmobile').show('slow');
                            }
                        }
                        //if (errors[1].length > 1 || errors[2].length > 1) {
                        //    $('<a></a>').addClass('download-file').attr('target', '_blank').attr('href', 'data:text/csv;charset=utf8,' + encodeURI(errors[1].join('\n'))).attr('download', 'CANDIDATES_ERRORS_RECORDS.csv').css('display', 'none').appendTo('.tabs-container');
                        //    $('.download-file')[0].click();
                        //    $('.download-file').remove();
                        //    $('<a></a>').addClass('download-file').attr('target', '_blank').attr('href', 'data:text/csv;charset=utf8,' + encodeURI(errors[2].join('\n'))).attr('download', 'CANDIDATES_ERRORS.csv').css('display', 'none').appendTo('.tabs-container');
                        //    ShowAlertMessage("Message", "These records contain errors please a look on files !", "A");
                        //    $('.download-file')[0].click();
                        //    $('.download-file').remove();
                        //}
                    }

                }
                else {
                  
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    get: function (bulkUploadType, batchNo) {
        var serverResponse;
        var params = { type: bulkUploadType, batchNumber: batchNo, test: "sd" }
        ns_ajax.get(
            urls.ImportDataApi,
            params,
            function (response) {
                if (response.split('|')[0] == "OK")
                    serverResponse = jQuery.parseJSON(response.split('|')[1]);
                else
                    serverResponse = null;

                //Changed  to upper case
                bulkUploadType = bulkUploadType.toUpperCase();

                if (bulkUploadType == 'JOBS')
                    $('.col-client').text('Employer');
                else if (bulkUploadType == 'CANDIDATES' || bulkUploadType == 'EMPLOYERS')
                    $('.col-client').text('Agency');
                else if (bulkUploadType == 'JOB-SUMMARY') {
                    headRow = '<tr>\
                            <th class="text-center">Job Id</th>\
                            <th class="text-center">Start Date</th>\
                            <th class="text-center">Start Time</th>\
                            <th class="text-center">End Date</th>\
                            <th class="text-center">End Time</th>\
                            <th class="text-center">Employer Rate</th>\
                            <th class="text-center">Candidate Rate</th>\
                            <th class="text-center">Job Role</th>\
                            <th class="text-center">Job Location</th>\
                            <th class="text-center">Shift Type</th>\
                        </tr>';
                }
                else if (bulkUploadType == 'CANDIDATE-SUMMARY') {
                    headRow = '<tr>\
                            <th class="text-center">CND Id</th>\
                            <th class="text-center">Name</th>\
                            <th class="text-center">Gender</th>\
                            <th class="text-center">Email</th>\
                            <th class="text-center">Mobile</th>\
                            <th class="text-center">Role</th>\
                            <th class="text-center">CND_GMC_OR_REGNUMBER</th>\
                        </tr>';
                }
                else if (bulkUploadType == 'EMPLOYER-SUMMARY') {
                    headRow = '<tr>\
                            <th class="text-center">EMP Id</th>\
                            <th class="text-center">Name</th>\
                            <th class="text-center">Email</th>\
                            <th class="text-center">Mobile</th>\
                            <th class="text-center">Role</th>\
                            <th class="text-center">Practice Code</th>\
                        </tr>';
                }

                if (serverResponse != null) {
                    if (bulkUploadType == 'JOBS' || bulkUploadType == 'CANDIDATES' || bulkUploadType == 'EMPLOYERS') {
                        $("#BulkSummary_Placeholder").empty();
                        call_tmpl_binder(serverResponse.Bulk_Upload, '/Template/bulk_upload_tmpl.html', '#BulkUpload_Template', '#BulkUpload_Placeholder');
                    }
                    else if (bulkUploadType == 'JOB-SUMMARY' || bulkUploadType == 'CANDIDATE-SUMMARY' || bulkUploadType == 'EMPLOYER-SUMMARY') {
                        $("#BulkSummary_Placeholder").empty();
                        $("#tblBulkSummaryHead").empty();
                        $("#tblBulkSummaryHead").append(headRow);
                        console.log(serverResponse.Bulk_Summary);
                        call_tmpl_binder(serverResponse.Bulk_Summary, '/Template/bulk_upload_tmpl.html', '#BulkSummary_Template', '#BulkSummary_Placeholder');
                    }
                }
                else {
                    $("#BulkUpload_Placeholder").empty();
                    if (bulkUploadType == 'JOBS')
                        $("#BulkUpload_Placeholder").append('<tr><td colspan="7" class="text-center">No record found</td></tr>')
                    else if (bulkUploadType == 'CANDIDATES' || bulkUploadType == 'EMPLOYERS')
                        $("#BulkUpload_Placeholder").append('<tr><td colspan="6" class="text-center">No record found</td></tr>')
                }
            });
    },

    bindDropdowns: function (org_id, dropdown, dropdownToBind) {
        var params = { orgIdORsecId: org_id, dro: dropdown };
        ns_ajax.get(
            'api/ImportApi/',
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var serverResponse = $.parseJSON(response.split('|')[1]);
                    call_tmpl_binder(serverResponse.dropdown_data, '/Template/bulk_import_tmpl.html', '#' + dropdownToBind + '_Template', '#' + dropdownToBind + '_Placeholder');
                }
            }
        );
    },
    Get_JobRole_Location: function (clsLocation, clsRole) {
        var param = { id: '0' };
        ns_ajax.get(
            urls.rotaApi + "location",
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response; //jQuery.parseJSON(response.split('|')[1]);
                    var str = '';
                    //Location(s)
                    if (clsLocation !== '') {
                        str = '<option value="0">Select Location</option>';
                        $.each(obj.Location, function (key, value) {
                            str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                        });
                        $(clsLocation).html(str);

                        setTimeout(function () {
                            $(clsLocation).multiselect({
                                includeSelectAllOption: true
                            });

                        }, 300);

                    }

                    //Job Role(s)  
                    if (clsRole !== '') {
                        str = '<option data-role-id="0" data-rate="0" value="0" >Select Role</option>';
                        $.each(obj.JobRole, function (key, value) {
                            str += "<option data-role-id='" + value.role_id + "' data-rate=" + value.cnd_custom_role_rate + " value=" + value.cnd_custom_role_id + " title='" + value.cnd_custom_role_name + "' style='color:" + value.cnd_custom_role_color + "'>" + value.cnd_custom_role_alias + "</option>";
                        });
                        $(clsRole).html(str);
                    }
                }
            });
    },
}

ns_organisation = {
    LoadSectors: function () {
        try {
            var param = { category: 'sectors' };
            ns_ajax.get(
                urls.masterApi,
                param,
                function (data) {
                    if (data.Status == 'OK') {
                        var output = '';
                        output = '<option selected="selected" value="">--Select Sector--</option>';
                        var obj = data.Response; //jQuery.parseJSON(response.split('|')[1]);
                        $.each(obj, function (key, value) {
                            output += '<option value="' + value.sector_id + '" class="capitalize">' + value.sector_name + '</option>';
                        });
                        $('.ddlindustry').html(output);
                    }
                });
        }
        catch (err) {
            ShowAlertMessage("Error", err.message, 'A');
        }
    },
    InsertOrgbasicDetails: function () {
        var obj = {};
        obj.org_id = 0;
        obj.org_name = $('#txtorg_name').val().trim();
        obj.org_alias_name = $('#txtorg_name').val().trim();
        obj.sector_id = $('#ddlindustry').val().trim();       
        obj.first_name = $('#txtfirst_name').val();
        obj.last_name = $('#txtlast_name').val();
        obj.email = $('#txtemail').val();
        obj.mobile = $('#txtmobile').val();

        var msg = '', flag = 0;
        if (obj.org_name == "") {
            flag = 1;
            msg = "Enter agency name !";
            $('#txtorg_name').focus();
        }
        else if (obj.sector_id == "") {
            flag = 1;
            msg = "Select a sector !";
            $('#ddlindustry').focus();
        }

        else if (obj.first_name == "") {
            flag = 1;
            msg = "Enter first name !";
            $('#txtfirst_name').focus();
        }
        else if (obj.email == "") {
            flag = 1;
            msg = "Enter email address!";
            $('#txtemail').focus();
        }
        else if (!IsEmail(obj.email)) {
            flag = 1;
            msg = "Enter a valid email address !";
            $('#txtemail').focus();
        }
        else if ((obj.mobile != "") && (!IsMobile(obj.mobile))) {
            flag = 1;
            msg = "Enter a valid mobile number !";
            $('#txtmobile').focus();
        }
        else
            flag = 0;
        if (flag == 0) {
            var params = "[" + JSON.stringify(obj) + "," + JSON.stringify("") + "]";
            try {
                ns_ajax.post(
                    urls.organisationsApi + "registeragency",
                    params,
                    function (response) {
                        if (response.split('|')[0] == "OK") {
                            ShowAlertMessage("Message", "Agency: <b>'" + obj.org_name + "'</b> has been saved successfully !", 'C');
                            ns_bulk_Import.bindDropdowns(0, "org", "ddlBulkOrg");
                            ns_employee.bindAgency("#ddlAgencies");
                            $('#AddOrgModal').modal('hide');
                            $('.modal-backdrop').hide('slow');
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            catch (error) {
                ShowAlertMessage("Error", err, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');
    },
}

/*************************************************
 *      Employer Users
 * **********************************************/
$(document).ready(function () {
 
    $(document).on('change', "#ddlEmployeeLocationsPermission", function () {
        emp_location_ids = $('#ddlEmployeeLocationsPermission').val();
        page_number = 0; page_size = 10;
        ns_users.get('','');
    });

    $(document).on('change', "#ddlEmployeeRolesPermission", function () {
        emp_role_id = $('#ddlEmployeeRolesPermission').val();
        page_number = 0; page_size = 10;
        ns_users.get('', '');
    });

    $(document).on('click', "#btnSearchEmployeesPermission", function () {
        emp_search = $('#txtuserSearch').val();
        page_number = 0; page_size = 10;
        ns_users.get('', '');
    });

    $(document).on('click', "#btnSearchEmployeesPermissionRefresh", function () {
        emp_location_ids = '', emp_role_id = '0', emp_search = '';
        $('#ddlEmployeeRolesPermission').val('0');
        $('#txtuserSearch').val('');
        page_number = 0; page_size = 10;
        ns_users.get('', '');
    });

    $(document).on('click', ".loadmoreUsersPermission", function () {
        page_number = page_number + 10;
        ns_users.get('','more');
    });
    $(document).on('click', '#chkLocationPermision', function () {
        if ($(this).prop('checked')) {
            $('#divLocationPermision').show('slow');
            $('#txtLocationPermision').focus();
        }
        else {
            $('#divLocationPermision').hide('slow');
            $('#txtLocationPermision').val('');
            $('#txtLocationPermision').attr('data-userid', '0');
        }
    });
    $(document).on('click', '#chkSubordinatePermision', function () {      
            if ($(this).prop('checked')) {
                $('#divSubordinatePermision').show('slow');
                //$('#txtSubordinatePermision').focus();
                $('#ddlSubordinates').focus();
                
            }
            else {
                $('#divSubordinatePermision').hide('slow');
                $('#ddlSubordinates').val('');
                $('#ddlSubordinates').focus();
                //$('#txtSubordinatePermision').val('');
                //$('#txtSubordinatePermision').attr('data-userid', '0');
               
            }     
    });
    $(document).on('click', '#chkModulePermision', function () {
        if ($(this).prop('checked')) {
            $('#divModulePermision').show('slow');
            $('#txtModulePermision').focus();
        }
        else {
            $('#divModulePermision').hide('slow');
            $('#txtModulePermision').val('');
            $('#txtModulePermision').attr('data-userid', '0');
        }
    });
    $(document).on('click', '#chk2fAuthentication', function () {
        if ($(this).prop('checked')) {
            $('#div2fAuthentication').show('slow');
            $('#txt2fAuthentication').focus();
        }
        else {
            $('#div2fAuthentication').hide('slow');
            $('#txt2fAuthentication').val('');
            $('#txt2fAuthentication').attr('data-userid', '0');
        }
    });
    $(document).on('click', '#chkPassword', function () {
        if ($(this).prop('checked')) {
            $('#divPassword').show('slow');
            $('#txtuserPassword').val('');    
            $('#txtuserPassword').focus();
        }
        else {
            $('#divPassword').hide('slow');
            $('#txtuserPassword').val('');           
        }
    });    


    $.widget("custom.catcomplete", $.ui.autocomplete, {
        _create: function () {
            this._super();
            this.widget().menu("option", "items", "> :not(.ui-autocomplete-category)");
        },
        _renderMenu: function (ul, items) {
            var that = this,
                currentCategory = "";
            $.each(items, function (index, item) {

                var li;
                if (item.category != currentCategory) {
                    ul.append("<li class='ui-autocomplete-category'>" + item.category + "</li>");
                    currentCategory = item.category;
                }
                li = that._renderItemData(ul, item);
                if (item.category) {
                    li.attr("aria-label", item.category + " : " + item.label);
                }
            });
        }
    });
    $(document).on('focusin', '#txtSubordinatePermision', function () {
        if ($('#ddlEmployerLocation').val() == '') {
            ShowAlertMessage("Message", 'Select Location first', 'A');
            $('#ddlEmployerLocation').focus();
        }
        else {
            //ns_users.getEmployees();
        }
    });

    $(document).on('click', ".cls-user-settings", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'settings') {          
            ns_UserModule.getAllModules();
        }
        if (action == 'adduser') {
            $('#btnAddNewUser').html('Add');
            $('#btnAddNewUser').attr('data-action', 'add'); 
            $('#btnAddNewUser').attr('data-cnd_id', ''); 
            $('#txtEmpUserName').val('');
            $('#txtEmpUserEmail').val('');
            $('#txtEmpUserMobile').val('');
            $('#ddlEmpUserRole').val('0');
            //$('#ddl2fAuthentication').val('');
            //$('#div2fAuthentication').hide('slow');
            //$('#divLocationPermision').hide('slow');
            //$('#divSubordinatePermision').hide('slow');   
            
            //$('#chkLocationPermision').prop('checked', false);
            //$('#chkSubordinatePermision').prop('checked', false);
            //$('#chk2fAuthentication').prop('checked', false);
            $('.cnsdivPassword').show();
            $('#chkPassword').prop('checked', true);
            $('#divPassword').show();
            $('#txtuserPassword').val('');

            $('#chkUserStatus').prop('checked', true);
            $('.clsinvitation_status').show();
            $('#chkinvitation_status').prop('checked', true);
        
        }        
        if (action == 'edit') {
            var user_id = $(this).attr('id').split('-')[1];
            var name = $(this).attr('data-name');
            var email = $(this).attr('data-email');
            var mobile = $(this).attr('data-mobile');
            var role_id = $(this).attr('data-role_id');
            //var auth_status = $(this).attr('data-auth_status');
            //var auth_type = $(this).attr('data-auth_type');
            var status = $(this).attr('data-status');            

            $('#txtEmpUserName').val(name);
            $('#txtEmpUserEmail').val(email);
            $('#txtEmpUserMobile').val(mobile);
            $('#ddlEmpUserRole').val(role_id);
          
            //$('#ddl2fAuthentication').val(auth_type);
            //if (auth_status == 1) {
            //    $('#div2fAuthentication').show('slow');
            //    $('#chk2fAuthentication').prop('checked', true);
            //}
            //else {
            //    $('#div2fAuthentication').hide('slow');
            //    $('#chk2fAuthentication').prop('checked', false);
            //}
            $('.cnsdivPassword').hide();
            $('#chkPassword').prop('checked', false);
            $('#divPassword').hide();
            $('#txtuserPassword').val('');
            
            $('.clsinvitation_status').hide();
            
            status == 1 ? $('#chkUserStatus').prop('checked', true) : $('#chkUserStatus').prop('checked', false);

            $('#btnAddNewUser').html('Update');
            $('#btnAddNewUser').attr('data-action', 'update');
            $('#btnAddNewUser').attr('data-cnd_id', user_id);            
            $('#modalAddUpdateUser').modal();
        }
        if (action == 'add') {               
            var location = $("#ddlEmployerLocation option:selected");
            var arrLocs = [], arrSubordinates=[];
            location.each(function () {
                arrLocs.push($(this).val());
            });

            var Subordinate = $("#ddlSubordinates option:selected");
            Subordinate.each(function () {
                arrSubordinates.push($(this).val());
            });

            //if ($('#txtSubordinatePermision').val()!=='')
            //    arrSubordinates.push($('#txtSubordinatePermision').attr('data-userid'));
                       

            var obj = {};
            obj.action = action;
            obj.section = 'users';            
            obj.name = $('#txtEmpUserName').val();
            obj.email = $('#txtEmpUserEmail').val().trim();
            obj.mobile = $('#txtEmpUserMobile').val().trim();
            obj.role_id = $('#ddlEmpUserRole').val();
            obj.company = $('#spanEmpname').html();
            //obj.locations = arrLocs;
            //obj.subordinates = arrSubordinates;
            //obj.authentication_status = $('#chk2fAuthentication').prop('checked') ? 1 : 0;
            //obj.authentication = $('#ddl2fAuthentication').val();  
           
            obj.status = $('#chkUserStatus').prop('checked') ? 1 : 0;
            obj.invitation_status = $('#chkinvitation_status').prop('checked') ? 1 : 0;
            obj.password_status = $('#chkPassword').prop('checked') ? 1 : 0; 
            obj.password = $('#txtuserPassword').val(); 
            if (obj.name == "") {      
                ShowAlertMessage("Message", 'Enter Name', 'A');
                $('#txtEmpUserName').focus();
                return false;
            }
            else if (obj.email == "") {
                ShowAlertMessage("Message", 'Enter email id', 'A');
                $('#txtEmpUserEmail').focus();
                return false;
            }
            else if (IsEmail(obj.email) == false) {
                ShowAlertMessage("Message", 'Enter valid email id', 'A');
                $('#txtEmpUserEmail').focus();
                return false;
            }
            else if (obj.mobile == "") {
                ShowAlertMessage("Message", 'Enter mobile number', 'A');
                $('#txtEmpUserMobile').focus();
                return false;
            }
            else if (obj.mobile !== "" && obj.mobile.length<10) {
                ShowAlertMessage("Message", 'Enter valid mobile number', 'A');
                $('#txtEmpUserMobile').focus();
                return false;
            }
            else if (obj.role_id == "" || obj.role_id == "0") {
                ShowAlertMessage("Message", 'Select user role', 'A');
                $('#ddlEmpUserRole').focus();
                return false;
            }
            else if ((obj.password_status == 1) && obj.password == "") {
                $('#chkPassword').prop('checked', true);
                $('#divPassword').show();
                ShowAlertMessage("Message", 'Enter user account password', 'A');
                $('#txtuserPassword').focus();
                return false;
            }
            else if (obj.password_status == 1 && obj.password.length <8) {
                ShowAlertMessage("Message", 'Password should be minimum 8 characters long', 'A');
                $('#txtuserPassword').focus();
                return false;
            }
            else {              
                var params = "[" + JSON.stringify(obj) + "]";                 
                 ns_users.post(params,evt);
            }
        }       
        if (action == 'update') {
            var location = $("#ddlEmployerLocation option:selected");
            var arrLocs = [], arrSubordinates = [];
            location.each(function () {
                arrLocs.push($(this).val());
            });

            var Subordinate = $("#ddlSubordinates option:selected");
            Subordinate.each(function () {
                arrSubordinates.push($(this).val());
            });
            //if ($('#txtSubordinatePermision').val() !== '')
            //    arrSubordinates.push($('#txtSubordinatePermision').attr('data-userid'));

            var obj = {};
            obj.action = action;
            obj.section = 'users';
            obj.user_id = $(this).attr('data-cnd_id');

            obj.name = $('#txtEmpUserName').val();
            obj.email = $('#txtEmpUserEmail').val();
            obj.mobile = $('#txtEmpUserMobile').val().trim();
            obj.role_id = $('#ddlEmpUserRole').val();
            //obj.locations = arrLocs;
            //obj.subordinates = arrSubordinates;
            //obj.authentication_status = $('#chk2fAuthentication').prop('checked') ? 1 : 0;
            //obj.authentication = $('#ddl2fAuthentication').val();
            obj.status = $('#chkUserStatus').prop('checked') ? 1 : 0; 
            //obj.password_status = $('#chkPassword').prop('checked') ? 1 : 0;
            //obj.password = $('#txtuserPassword').val(); 

            if (obj.name == "") {
                ShowAlertMessage("Message", 'Enter Name', 'A');
                $('#txtEmpUserName').focus();
                return false;
            }
            else if (obj.email == "") {
                ShowAlertMessage("Message", 'Enter email id', 'A');
                $('#txtEmpUserEmail').focus();
                return false;
            }
            else if (IsEmail(obj.email) == false) {
                ShowAlertMessage("Message", 'Enter valid email id', 'A');
                $('#txtEmpUserEmail').focus();
                return false;
            }
            else if (obj.mobile !== "" && obj.mobile.length <= 10) {
                ShowAlertMessage("Message", 'Enter valid mobile number', 'A');
                $('#txtEmpUserMobile').focus();
                return false;
            }
            else if (obj.role_id == "" || obj.role_id == "0") {
                ShowAlertMessage("Message", 'Select user role', 'A');
                $('#ddlEmpUserRole').focus();
                return false;
            }           
            //else if (obj.password_status == 1 && obj.password == "") {
            //    $('#chkPassword').prop('checked', true);
            //    ShowAlertMessage("Message", 'Enter user account password', 'A');
            //    $('#txtuserPassword').focus();
            //    return false;
            //}
            //else if (obj.password_status == 1 && obj.password.length < 8) {
            //    ShowAlertMessage("Message", 'Password should be minimum 8 characters long', 'A');
            //    $('#txtuserPassword').focus();
            //    return false;
            //}
            else {
                var params = "[" + JSON.stringify(obj) + "]";            
                ns_users.post(params,evt);
            }
        }
        if (action == 'loghistory') {
            var user_id = $(this).attr('id').split('-')[1];
            $('#loadmoreLoghistoryList').attr('data-id', user_id);
            $('#spanLogName').html($(this).attr('data-name'));
            ns_users.getUserLogHistory(user_id,'');
        }
        if (action == 'invite') {            
            var name = $(this).attr('data-name');
            var email = $(this).attr('data-email');
            var mobile = $(this).attr('data-mobile');
            var obj = {};
            obj.action = action;
            obj.section = 'users';
            obj.user_id = $(this).attr('data-cnd_id');
            obj.name = name;
            obj.email = email;
            obj.mobile = mobile;            
            obj.company = $('#spanEmpname').html();
            obj.invitation_status =1;          
          
            var params = "[" + JSON.stringify(obj) + "]";
            ns_users.post(params,evt);           
        }
        if (action == 'viewpermission') {
            var user_id = $(this).attr('id').split('-')[1];
            var name = $(this).attr('data-name');
            var email = $(this).attr('data-email');
            var mobile = $(this).attr('data-mobile');
            $('#spanUName').html(name);
            $('#spanUName').attr('data-user_id', user_id);
            ns_users.getPermissions(user_id);
        }
        
    });

    
    $(document).on('click', ".cls-setpermission", function () {
        var action = $(this).attr('data-action');
        var id = $(this).val();
        var user_id = $('#spanUName').attr('data-user_id');
        var obj = {};
        obj.action = 'setpermission';
        obj.section = 'users';
        obj.locations = action == 'location' ? id : '';
        obj.subordinates = action == 'subordinate' ? id : '';
        obj.user_id = user_id;
        var params = "[" + JSON.stringify(obj) + "]";     
        ns_users.setPermissions(params);
    });

    $(document).on('click', ".loadmoreLoghistoryList", function () {
        page_number = page_number + 10;  
        var user_id = $(this).attr('data-id');
        ns_users.getUserLogHistory(user_id, 'more');
    });
    //User's Profile

    $(document).on('click', ".cls-user-profile", function (evt) {
        var action = $(this).attr('data-action');
        var user_id = $('#spanUName').attr('data-user_id');
        var params = '', obj = {};
        obj.action = action;
        obj.section = 'users';
        obj.user_id = user_id;

        if (action == 'updatename') {         
            obj.name = $('#txt_user_profile_name').val();
            if (obj.name == "") {
                ShowAlertMessage("Message", 'Enter name', "A");
                $('#txt_user_profile_name').focus();
                return false;
            }
            else
              params = "[" + JSON.stringify(obj) + "]";
        }
        else if (action == 'updateemail') {           
            obj.email = $('#txt_user_profile_email').val();
            if (obj.email == "") {                
                ShowAlertMessage("Message", 'Enter Email Id', "A");
                $('#txt_user_profile_email').focus();
                return false;
            }
            else if (IsEmail(obj.email) == false) {
                ShowAlertMessage("Message", 'Enter valid Email Id', "A");
                $('#txt_user_profile_email').focus();
                return false;
            }
            else if (obj.email == $('#txt_user_profile_email').attr('data-email')) {
                ShowAlertMessage("Message", 'Enter diferent email id', "A");
                $('#txt_user_profile_email').focus();
                return false;
            }
            else
             params = "[" + JSON.stringify(obj) + "]";
        }
        else if (action == 'updatemobile') {           
            obj.mobile = $('#txt_user_profile_mobile').val();
            if (obj.mobile == "") {
                ShowAlertMessage("Message", 'Enter Mobile number', "A");
                $('#txt_user_profile_mobile').focus();
                return false;
            }
            else if (obj.mobile !== "" && obj.mobile.length < 10) {
                ShowAlertMessage("Message", 'Enter correct mobile number', "A");
                $('#txt_user_profile_mobile').focus();
                return false;
            }
            else if (obj.mobile == $('#txt_user_profile_mobile').attr('data-mobile')) {
                ShowAlertMessage("Message", 'Enter diferent mobile number', "A");
                $('#txt_user_profile_mobile').focus();
                return false;
            }      
            else
               params = "[" + JSON.stringify(obj) + "]";
        }      

        if (params !== '')
            ns_users.post(params,evt);

    });

    //2FA

    

    $(document).on('click', ".cls2factor", function (evt) {
        var action = $(this).attr('data-action');
        var request = $(this).attr('data-request');
      // alert(action+'     '+request);
        if (action == 'change') {
            var hide = $(this).attr('data-hide');
            var show = $(this).attr('data-show');
            $(hide).hide();
            $(show).show();
        }
        if (action == 'cancel') {
            var hide = $(this).attr('data-hide');
            var show = $(this).attr('data-show');
            $(hide).hide();
            $(show).show();
        }
        if (action == 'security_status') {

            var obj = {};
            obj.action = 'security_status';
            obj.section = 'users';
            obj.status = status
            var params = "[" + JSON.stringify(obj) + "]";
            $('#btnverifyTwoafOTP').attr('data-json', params);
            $('#btnverifyTwoafOTP').attr('data-request', action);
            $('#txt_otp').val('');
            $('#modalVerification').modal();

        }
        if (action == 'update_2FA') {
            var authentication_type = $('input[name="rdo2fa"]:checked').val();
          
            var security_code = $('#txt_security_code').val();
            if (authentication_type == undefined) {
                ShowAlertMessage("Message", 'Select two factor authentication option', "A");
                $('#txt_security_code').focus();
                return false;
            }
            else if (authentication_type == 'security_key' && security_code=='') {
                ShowAlertMessage("Message", 'Enter security code', "A");
                $('#txt_security_code').focus();
                return false;
            }
            else if (authentication_type == 'security_key' && security_code.length !==6) {
                ShowAlertMessage("Message", 'Enter 6 digit security code', "A");
                $('#txt_security_code').focus();
                return false;
            }
            else {
                var obj = {};
                obj.action = '2FA';
                obj.section = 'users';
                obj.authentication_type = authentication_type;
                obj.security_code = authentication_type =='security_key'? security_code:'';
                var params = "[" + JSON.stringify(obj) + "]";             
                /*ns_users.post(params, evt);*/                
                $('#btnverifyTwoafOTP').attr('data-json', params);
                $('#btnverifyTwoafOTP').attr('data-action', action);
                $('#btnverifyTwoafOTP').attr('data-request', action);
                $('#txt_otp').val('');                
                $('#modalVerification').modal();
            }
        }

        if (action == 'generate_backup_code') {
            var obj = {};
            obj.action = 'generate_backup_code';
            obj.section = 'users';           
            var params = "[" + JSON.stringify(obj) + "]";        
            $('#btnverifyTwoafOTP').attr('data-json', params);
            $('#btnverifyTwoafOTP').attr('data-request', action);
            $('#btnverifyTwoafOTP').attr('data-action', 'verify_otp');
            $('#txt_otp').val('');
            $('#modalVerification').modal();       
        }
        if (action == 'verify_otp') {
            $('#divMessageBlock').html('Enter account password');
            var otp = $('#txt_otp').val();
            if (otp == '') {
                $('#divMessageBlock').html('<span style="color:red">Enter account password</span>');
                $('#txt_otp').focus();
                return false;
            }
            else {
                var request = $(this).attr('data-request');
                if (request == 'generate_qr_code') {
                    ns_users.getQRCode(otp);
                }
                else {
                    var obj = $.parseJSON($(this).attr('data-json'));
                    obj[0].otp = otp;
                    var params = JSON.stringify(obj);
                    $('#btnverifyTwoafOTP').attr('data-action', request);
                    ns_users.post(params, evt);
                }
            }
        }
    });

    $(document).on('change', ".cls_rdo2fa", function (evt) {
        var authentication_type = $(this).val();
        $('#txt_security_code').val('');
        if (authentication_type == 'sms') {
            $('.divtfaAppAuthenticatorBlock').hide('slow');
            $('.divtfaSecurityCodeBlock').hide('slow')

            $('.clsTwoFaBtn').show();
            
        }
        if (authentication_type == 'security_key') {
            $('.divtfaAppAuthenticatorBlock').hide('slow');
            $('.divtfaSecurityCodeBlock').show('slow');
            $('#txt_security_code').val('');
            $('.clsTwoFaBtn').show();

        }
        if (authentication_type == 'authenticator_app') {
            $('.divtfaSecurityCodeBlock').hide();
            $('.clsTwoFaBtn').hide();
            var obj = {};
            obj.action = 'generate_qr_code';
            var params = "[" + JSON.stringify(obj) + "]";
            $('#btnverifyTwoafOTP').attr('data-json', params);
            $('#btnverifyTwoafOTP').attr('data-request', 'generate_qr_code');
            $('#txt_otp').val('');
            $('#modalVerification').modal();
            //var objData = {};
            //objData.action = 'otp_request';
            //var params = "[" + JSON.stringify(objData) + "]";
            //ns_users.OtpRequestApi(params, evt);
        }
    });

    $(document).on('click', "#verifyAppAuthCode", function (evt) {
        $('#errorMsgAppVerification').html('');
        var authentication_type = $('input[name="rdo2fa"]:checked').val();
        var security_code = $('#txtAppVerificationCode').val();
        if (security_code == '') {
            $('#errorMsgAppVerification').html('Enter the verification code displayed on your mobile app.');
            $('#txt_security_code').focus();
            return false;
        }
        else {
            var obj = {};
            obj.action = 'VerifyAuthenticatorApp';
            obj.section = 'users';
            obj.authentication_type = authentication_type;
            obj.security_code = security_code;
            var params = "[" + JSON.stringify(obj) + "]";
            ns_users.GoogleAuthVerify(params, evt);
        }
    });

    $(document).on('click', ".cls-backup-code", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'close') {
            $('#modalBackupVerificationCode').modal('hide');
            $('#btndownloadbackup').html('Download');
            $('#btncopybackup').html('Copy');
            $('#btnBackupclose').hide();
            $('#btnBackupmsg').show();
            ns_users.get2FaSetting();
        }        
        if (action == 'copy') {
            var arrayOfJson = $(this).attr('data-json');
            var filename = '*****Recovery Codes********';
            var csv_data = Convert_JSON_to_CSV(arrayOfJson, filename, true);
            CopyToClipboard("BackupVerificationCode_placeholder");        
            $(this).html('<i class="fa fa-check" style="color:green"> Copied</i>');
            $('#btnBackupmsg').hide();
            $('#btnBackupclose').show();
        }
        if (action == 'download') {
            var arrayOfJson = $(this).attr('data-json');
            var filename ='*****Recovery Codes********';
            Export_JSON_to_CSV(arrayOfJson, filename, true);
            $(this).html('<i class="fa fa-check" style="color:green"> Downloaded</i>');
            $('#btnBackupmsg').hide();
            $('#btnBackupclose').show();
        }
    });  
   
});

ns_users = {
    post: function (params, evt) {     
        var action = getAttribute(evt, 'data-action');
        var id = getAttribute(evt, 'id');
      
        if (action == 'invite') {
            $('#' + id).html('Sending...<img src="/images/spin.gif" />');
        }
        else if (action == 'updatename' || action == 'updateemail' || action == 'updatemobile' || action == 'update_2FA' || action == 'VerifyAuthenticatorApp' || action == 'generate_backup_code' || action == 'generate_qr_code') {
            $('#' + id).html('Wait...<img src="/images/spin.gif" />');
        }
        else {
            $('#btnAddNewUser').addClass('a-disabled');
            $('#btnAddNewUser').html('Process...<img src="/images/spin.gif" />');
        }
        ns_ajax.post(
            urls.usersApi,
            params,
            function (data) {
                if (action == 'invite') {
                    $('#' + id).html('Send');
                }
                else if (action == 'updatename' || action == 'updateemail' || action == 'updatemobile' || action == 'generate_backup_code' || action == 'generate_qr_code') {
                    $('#' + id).html('Submit');
                }
                else if (action == 'update_2FA') {
                    $('#' + id).html('Update');
                }
                else if (action == 'VerifyAuthenticatorApp') {
                    $('#' + id).html('Verify');
                }
                else {
                    $('#btnAddNewUser').removeClass('a-disabled');
                    $('#btnAddNewUser').html('Add');
                }

                if (data.Status == 'OK') {
                    if (action == 'updatename' || action == 'updateemail' || action == 'updatemobile') {
                        if (action == 'updateemail' || action == 'updatemobile')
                            ShowAlertMessage("Message", data.Response[0].message, 'C');
                        else
                            ShowAlertMessage("Message", data.Response, 'C');

                        var ProObj = jQuery.parseJSON(params)[0];
                        if (action == 'updatename') {                           
                            jQuery('#spanEmpName, #spanprofile-name, #spanProName').html(ProObj.name);
                            $('.EmployeeAvatar').html(ProObj.name.charAt(0));
                            $('.EmployeeAvatar').attr('title', ProObj.name);
                          
                            $('.profileEdit').hide();
                            $('.profileView').show();                          
                        }
                        if (action == 'updateemail')
                        {
                            jQuery('#spanProEmail, #spanprofile-email, #spanProEmail').html(ProObj.email);
                            $('#txt_user_profile_email').attr('data-email', ProObj.email);
                            $('.emailEdit').hide();
                            $('.emailView').show();
                        }
                        if (action == 'updatemobile') {                           
                            jQuery('#spanProMob').html(ProObj.mobile);
                            $('#txt_user_profile_mobile').attr('data-mobile', ProObj.mobile);
                            $('.phoneEdit').hide();
                            $('.phoneView').show();
                        }                    
                    }
                    else {
                        if (action == 'update_2FA') 
                            ShowAlertMessage("Message", data.Response[0].message, 'C');
                        else
                           ShowAlertMessage("Message", data.Response, 'C');
                        $('#modalAddUpdateUser').modal('hide');
                        $(".modal-backdrop").css('display', 'none');
                        ns_users.get('', '');
                    }                  
                    if (action == 'update_2FA') {
                        ns_users.get2FaSetting();
                        $('.teditableDiv').hide();                    
                        $('.tdivdemo').show();
                        $('#modalVerification').modal('hide');
                        $(".modal-backdrop").css('display', 'none');
                    }
                    if (action == 'security_status') {
                        $('#txt_otp').val('');
                        $('#modalVerification').modal('hide');
                        $(".modal-backdrop").css('display', 'none');
                        ns_users.get2FaSetting();
                    }
                    if (action == 'generate_backup_code') {

                        var JsonBackupcode = data.Response[0].recovery_backup.codes;//'[{"srno":1,"code":"zJAuYyWFQpIw","use_status":0,"use_datetime":""},{"srno":2,"code":"93W2tNmUgAXF","use_status":0,"use_datetime":""},{"srno":3,"code":"rV7pfJUReoAw","use_status":0,"use_datetime":""},{"srno":4,"code":"KgW2w3boXMRn","use_status":0,"use_datetime":""},{"srno":5,"code":"5o8gtMIxYdLr","use_status":0,"use_datetime":""}]';
                    
                        call_tmpl_binder(JsonBackupcode, '/Template/setting_tmpl.html', '#BackupVerificationCode_Template', '#BackupVerificationCode_placeholder');
                        $('#btndownloadbackup, #btncopybackup').attr('data-json', JSON.stringify(JsonBackupcode));
                        $('#modalVerification').modal('hide');
                        $(".modal-backdrop").css('display', 'none');                        
                        $('#modalBackupVerificationCode').modal();                     
                    }                   
                }
                else if (data.Error == 'UPGRADESUBS') {
                    
                    $('#spanAccountRenewalTitle').html('Upgrade subscription');
                    $('#divAccountRenewalMessage').html('Your current plan users limit is exceeding, please upgrade your plan to avail more license(s).');
                    $('#btnsubsRenewal').html('Upgrade Subscription');
                    $("#ModalSubcription").modal('show');
                    
                }
                else {
                    ShowAlertMessage("Message", data.Error, "A");
                }
            });
    },   
    get: function (cnd_id,act) {
        var serverResponse;
        var getInfoFor = 'GETUSERS';    
        var param = '{"action":"getusers","section":"users","role_id":"' + emp_role_id + '","search_key":"' + emp_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param }
        if (getInfoFor.toUpperCase() === 'GETUSERS') {
            
            $('#CndProfileList_Placeholder').html('<div style="padding:10px;text-align:center; width:100%">Loading...<img src="/images/spin.gif" /></div>');
            $('.loadmoreUsersPermission').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        }
            ns_ajax.get(
            urls.usersApi,
            params,
            function (data) {             
               // data = jQuery.parseJSON(data);                
                if (getInfoFor.toUpperCase() === 'GETUSERS')
                    $('.loadmoreUsersPermission').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');

                if (data.Status == 'OK') {                   

                    if (getInfoFor.toUpperCase() === 'GETUSERS') {
                        //Fill User Role
                     
                        var str = '<option data-role-id="0" data-rate="0" value="0" >User Roles</option>';
                        $.each(data.Response[0].UserRoles, function (key, value) {
                            str += "<option value=" + value.id + ">" + value.name + "</option>";
                        });
                        $('#ddlEmployeeRolesPermission').html(str);
                       
                        //bind User list  
                        var objUser = data.Response[0].UsersList.length > 0 ? data.Response[0].UsersList : null;
                        ns_users.allProfiles(objUser, act);                      
                        //ns_users.getSubordinates(data.Response[0].EmployeeList);          
                        
                    }
                }
                else 
                    $('#CndProfileList_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');                
            });
    },
    get2FaSetting: function () {       
        var param = '{"action":"get2fa","section":"users"}';
        var params = { json: param }
        $('#TwoFA_placeholder').html('<center>Please Wait...<img src="/images/spin.gif" /></center>');
        ns_ajax.get(
            urls.usersApi,
            params,
            function (data) {                     
                if (data.Status == 'OK') {
                    var status = data.Response[0].tfa[0].status;
                    var authentication_type = data.Response[0].tfa[0].authentication_type;
                    call_tmpl_binder(data.Response[0].tfa[0], '/Template/setting_tmpl.html', '#TwoFA_Template', '#TwoFA_placeholder');
                }
                else {
                    call_tmpl_binder(null, '/Template/setting_tmpl.html', '#TwoFA_Template', '#TwoFA_placeholder');
                }
            });
    },
    getQRCode: function ( otp) {
        $('#qrCode').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        $('#appseckey').html('Loading....');
        var param = '{"action":"getqr","otp":"' + otp+'"}';
        var params = { json: param }     
        ns_ajax.get(
            urls.QrCodeApi,
            params,
            function (data) {
                if (data.Status == 'OK') {           
                    var QRCodeImg = data.qrcode;                  
                    var key = data.key;
                    $('#qrCode').html('<img alt="Scan me!" src="' + QRCodeImg + '" style ="display: block; width: 200px;" >');
                    $('#appseckey').html(key);
                    $('.divtfaAppAuthenticatorBlock').show('slow');
                    $('#modalVerification').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                }
                else {
                    alert(data.Error);
                }
            });
    },
    GoogleAuthVerify: function (params, evt) {
        var id = getAttribute(evt, 'id');
        $('#' + id).html('Wait...<img src="/images/spin.gif" />');
        ns_ajax.post(
            urls.GoogleAuthVerifyApi,
            params,
            function (data) {
                $('#' + id).html('Verify');
                if (data.Status == 'OK') {
                    if (data.IsValidTwoFactorAuthentication) {                        
                        $('#txtAppVerificationCode').val('');
                        $('#errorMsgAppVerification').html('<span style="color:green">' + data.Response + '</span>');
                        ns_users.get2FaSetting();
                    }
                }
                else {
                    $('#errorMsgAppVerification').html(data.Error);
                }
            });
    },
    OtpRequestApi: function (params, evt) {
        //var id = getAttribute(evt, 'id');
        //$('#' + id).html('Wait...<img src="/images/spin.gif" />');
        ns_ajax.post(
            urls.OtpRequestApi,
            params,
            function (data) {
                /* $('#' + id).html('Verify');*/
            
                if (data.Status == 'OK') {
                 /*   alert(data.Response.request_token);*/
                    $('#divOTPSendMsg').html('We sent security code on you registered email');
                    $("#spanreqtoken").html(data.Response.request_token);
                }
                else {
                    $('#divOTPSendMsg').html('');
                    $("#spanreqtoken").html('');
                }

            });
    },
    

    setPermissions: function (params) {      
        ns_ajax.post(
            urls.usersApi,
            params,
            function (data) {               
                if (data.Status == 'OK') {
                    ShowAlertMessage("Message", data.Response, 'C');                 
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    getPermissions: function (user_id) {
        var param = '{"action":"GETPERMISSIONS","section":"users","user_id":' + user_id+'}';
        var params = { json: param }       
        $('.userPermisions_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.usersApi,
            params,
            function (data) {        
                if (data.Status == 'OK') {                       
                        call_tmpl_binder(data.Response[0], '/Template/setting_tmpl.html', '#userPermisions_Template', '#userPermisions_Placeholder');
                                      
                }
                else
                    $('#userPermisions_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    
    getUserprofile: function () {
        var param = '{"action":"getprofile","section":"users"}';
        var params = { json: param }
        $('.Profile_Basic_Info_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.usersApi,
            params,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/setting_tmpl.html', '#Profile_Template', '#Profile_Basic_Info_Placeholder');
                   
                }
                else
                    $('#Profile_Basic_Info_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },

    getEmployerAcCompletedStatus: function () {
        var param = '{"action":"accountsteps","section":"users"}';
        var params = { json: param }
        $('#AccountSteps_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.usersApi,
            params,
            function (data) {                
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/dashboard_tmpl.html', '#AccountSteps_Template', '#AccountSteps_Placeholder');

                    var profil_completed = data.Response[0].AccountSteps[0].account_completed_in_percent;
                    if (profil_completed < 100) {                      
                        toggleClass(document.querySelector('.menu_drawer'), 'menu_drawer--open');
                        $('#Dashboardstepbtn').addClass('menu_drawer-btn--on');
                        /*$('#Dashboardstepbtn').removeClass('');*/
                    }
                    var total_completed = 0;
                    $.each(data.Response[0].AccountSteps[0].steps, function (key, value) {
                        if (value.status==1)
                          total_completed=total_completed + 1;
                    });
                    setTimeout(function () {
                        $('#spanCompletedSteps').html(total_completed);
                    }, 300);
                  
                }
                else
                    $('#AccountSteps_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },    

    allProfiles: function (objProfilesData, act) {      
        var sr_no = 0, total_user = 0;
        if (objProfilesData != null) {
            if (act == 'more') {
                jQuery('#CndProfileList_Template').tmpl(objProfilesData).appendTo('#CndProfileList_Placeholder');
            }
            else
                call_tmpl_binder(objProfilesData, '/Template/setting_tmpl.html', '#CndProfileList_Template', '#CndProfileList_Placeholder');

            $.each(objProfilesData, function (key, value) {               
                total_user = value.total_user;
                sr_no = value.sr_no;
            });
        }
        else {
            $('#CndProfileList_Placeholder').empty();
            $('#CndProfileList_Placeholder').append('<tr><td colspan="7" style="text-align:center;"><span>No record found</span></td></tr>')
        }
       
        if (sr_no < total_user)
            $('#loadmoreUsersPermission').show();
        else
            $('#loadmoreUsersPermission').hide();
    },
    getUserRole: function (CtrlRole, CtrlLocation) {
        var param = '{"action":"getroles","section":"users"}';
        var param = { json: param }
        ns_ajax.get(
            urls.usersApi,
            param,
            function (data) {                
                //data = jQuery.parseJSON(data);                
                if (data.Status = 'OK') {                   
                     //Role(s)
                    if (CtrlRole !== '') {
                        var str = '<option data-role-id="0" data-rate="0" value="0" >User Roles</option>';
                        $.each(data.Response[0].UserRoles, function (key, value) {
                            str += "<option value=" + value.id + ">" + value.name + "</option>";
                        });
                        $(CtrlRole).html(str);
                    }

                    //Location(s)
                    if (CtrlLocation !== '') {
                        var str = '<option value="0">Select Location</option>';
                        $.each(data.Response[0].Locations, function (key, value) {
                            str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                        });
                        $(CtrlLocation).html(str);

                        setTimeout(function () {
                            $('#ddlEmployerLocation').multiselect({
                                includeSelectAllOption: true
                            });
                        }, 300);
                    }
                }
            });
    },   
    getEmployees: function () {
        var arrLocs = [];
        var location = $("#ddlEmployerLocation option:selected");      
        //Get all selected locations
        location.each(function () {
            arrLocs.push($(this).val());
        });

        $("#txtSubordinatePermision").autocomplete({
            minLength: 2,           
            multiselect: true,
            source: function (request, response) {
                ns_ajax.get(
                    urls.usersApi,
                    { json: '{"action":"getemployees","section":"users","section":"users","location":"' + arrLocs+'","search_key":"' + request.term + '"}' },
                    function (data) {                       
                        data = jQuery.parseJSON(data);                      
                        if (data.Status = 'OK') {                    
                            response($.map(data.Response[0].Employees, function (item) {
                                return {
                                    label: item.name,
                                    val: item.cnd_id
                                }
                            }))
                        }
                    });
            },
            select: function (e, i) {
                var id = i.item.val;
                $('#txtSubordinatePermision').attr('data-userid', id);
                $('#txtSubordinatePermision').val($(this).val());
            }
        });
    },    
    getSubordinates: function (objEmployees) {       
        $("#ddlSubordinates").empty();
        $("#ddlSubordinates").append($('<option/>', {
            value: 0,
            text: "Subordinates"
        }));
        $.each(objEmployees, function (key, value) {
            $('#ddlSubordinates').append($('<option/>', {
                value: this.cnd_id,
                text: this.cnd_full_name
            }));
        })
    },

    FillModuleDropdown: function (data) {
       
            //Modules
            var str = '<option value="" disabled="disabled" selected="selected" selected>Select</option>';
            $.each(data, function (key, value) {
                if (value.total_sub_module > 0)
                    str += '<optgroup label="' + value.module_name + '">';
                else
                    str += '<option value=' + value.module_name + '>' + value.module_name + '</option>';


                $.each(value.sub_module, function (key, value2) {
                    str += '<option value=' + value2.module_name + '>' + value2.module_name + '</option>';
                });
                str += '</optgroup> ';
            });
            $('#ddl_feed_feature').html(str);
       
    },

    getUserNav: function () {
        var ls_key = localStorage.hasOwnProperty('usernav');
       
        if (ls_key == false) {         
            //Get from Remote databse
            var param = '{"action":"getnav","section":"users"}';
            var param = { json: param }
            ns_ajax.get(
                urls.usersApi,
                param,
                function (data) {
                    //data = jQuery.parseJSON(data);
                    if (data.Status = 'OK') {
                        var JsonNav = JSON.stringify(data.Response[0].UserNavigation);                       
                        //Save navigation in localStorage
                        localStorage.setItem('usernav', JsonNav);   
                        call_tmpl_binder(jQuery.parseJSON(JsonNav), '/Template/setting_tmpl.html', '#UserNav_Template', '#UserNav_Placeholder');
                        ns_users.FillModuleDropdown(jQuery.parseJSON(JsonNav));


                        setTimeout(function () {
                            //Write here code              
                            window.location.href = "/Home";
                            
                        }, 300);


                    }
                });
        }
        else {           
            //Get from local Storage
            var UserNavJson = localStorage.getItem('usernav');
            UserNavJson = jQuery.parseJSON(UserNavJson);
          /*  console.log(UserNavJson);*/
            call_tmpl_binder(UserNavJson, '/Template/setting_tmpl.html', '#UserNav_Template', '#UserNav_Placeholder');
            ns_users.FillModuleDropdown(UserNavJson);
        }
    },

    getUserSettingNav: function () {
        var UserNavJson = localStorage.getItem('usernav');
        UserNavJson = jQuery.parseJSON(UserNavJson);
        call_tmpl_binder(UserNavJson, '/Template/setting_tmpl.html', '#ulSettingNav_Template', '#ulSettingNav_Placeholder');   
    },    

    getUserLogHistory: function (user_id, act) {       
          var param = '{"action":"getuser_log_history","section":"users","user_id":"' + user_id + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param }  
        $('#loadmoreLoghistoryList').show();
        $('.loadmoreLoghistoryList').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
          ns_ajax.get(
              urls.usersApi,
              params,
              function (data) {
                  //data = jQuery.parseJSON(data); 
                  
                  $('.loadmoreLoghistoryList').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');                
                  if (data.Status == 'OK') {
                      var objUser = data.Response[0].emp_user_log_history.length > 0 ? data.Response[0].emp_user_log_history : null;

                      var sr_no = 0, total_count = 0;
                      if (objUser != null) {
                          if (act == 'more') {
                              jQuery('#LoghistoryList_Template').tmpl(objUser).appendTo('#LoghistoryList_Placeholder');
                          }
                          else
                              call_tmpl_binder(objUser, '/Template/setting_tmpl.html', '#LoghistoryList_Template', '#LoghistoryList_Placeholder');

                          $.each(objUser, function (key, value) {
                              total_count = value.total_count;
                              sr_no = value.sr_no;
                          });
                      }
                      else {                        
                          $('#LoghistoryList_Placeholder').html('<tr><td colspan="5" style="text-align:center;"><span>No record found</span></td></tr>');
                      }

                      if (sr_no < total_count)
                          $('#loadmoreLoghistoryList').show();
                      else
                          $('#loadmoreLoghistoryList').hide();
                  }
                  else {
                      $('#loadmoreLoghistoryList').hide();
                      $('#LoghistoryList_Placeholder').html('<tr><td colspan="5" style="text-align:center;"><span>No record found</span></td></tr>');
                  }
              });            
    },
    bindddl: function (ctrl_industry, ctrl_ddl_number_of_employees) {
    
        $(ctrl_industry).html('<option value="" disabled="disabled" selected="selected" selected>Select an industry</option>');
        $(ctrl_ddl_number_of_employees).html('<option value="0" disabled="disabled" selected="selected">How many have you got?</option>');
        var Param = { id: 0, type: 'signup' };
        try {
            $.ajax({
                url: uri+"api/employers/",
                data: Param,//this.stringifyParam(Param),
                dataType: "json",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.Status == 'OK') {
                        //Industry
                        var str = '<option value="" disabled="disabled" selected="selected" selected>Select an industry</option>';
                        $.each(data.Response[0].Industries, function (key, value) {
                            if (value.categories.length > 0)
                                str += '<optgroup label="' + value.industry_name + '">';

                            $.each(value.categories, function (key, value2) {
                                str += '<option value=' + value2.cat_id + ' data-industry="' + value.industry_id + '">' + value2.cat_name + '</option>';
                            });
                            str += '</optgroup> ';
                        });
                        $(ctrl_industry).html(str);

                        //No Of Employees
                        var str_emp = '<option value="0" disabled="disabled" selected="selected">How many have you got?</option>';
                        $.each(data.Response[0].no_of_employees, function (key, value) {
                            str_emp += '<option value=' + value.qty + '>' + value.label + '</option>';
                        });
                        $(ctrl_ddl_number_of_employees).html(str_emp);
                    }
                    else {
                        ShowMessage('Message', data.Error, 'A');
                    }
                },
                error: function (result) {
                    ShowMessage('Message', result, 'A');
                }
            });
        }
        catch (err) {
            ShowMessage('Message', err.message, "A");
        }
    },
    
}

/*************************************************
 *      Users Modules
 * **********************************************/
$(document).ready(function () {
    $(document).on('change', '#txtModuleName', function () {
        $('#txtModuleAlias').val($(this).val());
    });
    $(document).on('change', '#ddlModuleProfileType', function () {
        ns_UserModule.getParentType();
    });
    $(document).on('click', '.moduletab', function () {
        ProfileType = $(this).attr('data-ProfileType');      
        ns_UserModule.getAllModulesDetails(ProfileType,'');
    });
    $(document).on('click', '#btnAddNewModule', function () {
        $('#btnSaveUpdateModule').html('Save');
        $('#btnSaveUpdateModule').attr('data-id', '0');  
        $('#txtModuleName').val('');
        $('#txtModuleAlias').val('');
        $('#ddlModuleProfileType').val('0');
        $('#txtModuleRoute').val('');
        $('#txtNavIcon').val('');
        $('#txtSortorderNo').val('');
        ns_UserModule.getParentType();
    });
    $(document).on('click', '#btnSaveUpdateModule', function () {
        ns_UserModule.InsertUpdateModule();
    });
    $(document).on('click', '.EditModule', function () {
        var module_id = this.id.split('-')[1];
        var module_name = $(this).attr('data-module_name');
        var module_label = $(this).attr('data-module_label');
        var profile_type = $(this).attr('data-profile_type');
        var module_route = $(this).attr('data-module_route');
        var sort_order_no = $(this).attr('data-sort_order_no');
        var module_icon = $(this).attr('data-module_icon');
        var nav_status = $(this).attr('data-nav_status');
        parent_id = $(this).attr('data-parent_id');
        $('#txtModuleName').val(module_name);
        $('#txtModuleAlias').val(module_label);
        $('#ddlModuleProfileType').val(profile_type);       
        ns_UserModule.getParentType();
        $('#txtModuleRoute').val(module_route);
        $('#txtNavIcon').val(module_icon);
        
        $('#txtSortorderNo').val(sort_order_no);
        nav_status == 1 ? $('#chkModuleNavStatus').prop('checked', true) : $('#chkModuleNavStatus').prop('checked', false);

        $('#btnSaveUpdateModule').attr('data-id', module_id);
        $('#btnSaveUpdateModule').html('Update');
      
    });
    $(document).on('click', '.ChangeModuleStatus', function () {
        var module_id = this.id.split('-')[1];
        var status = $(this).attr('data-status');
        var result = confirm("Are you sure want to change the status?");
        if (result) {
            ns_UserModule.ChangeModuleStatus(module_id, status);
        }
        else
            return false;
    });
    $(document).on('click', '.ChangeNavStatus', function () {
        var module_id = this.id.split('-')[1];
        var navstatus = $(this).attr('data-nstatus');
        var result = confirm("Are you sure want to change the status?");
        if (result) {
            ns_UserModule.ChangeNavStatus(module_id, navstatus);
        }
        else
            return false;
    });
    //Module Allotments
    $(document).on('click', '.cls-module-allotment', function () {
        var action = $(this).attr('data-action');
        if (action == 'save') {
            ns_UserModule.AllotUserModules();
        }
        if (action == 'cancel') {
            ns_UserModule.getModuleSetting();
        }
    });       
    $(document).on('click', 'input[type=checkbox]', function () {       
        if ($(this).is(':checked')) 
            $(this).parents('li').children('input[type=checkbox]').prop('checked', true);
        else         
            $(this).parent().find('li input[type=checkbox]').prop('checked', false);       
    });
    $(document).on('click', '.parent', function () {       
        $(this).parent().find(".child").prop("checked", this.checked);
    });

    $(document).on('change', '#ddlModuleAllotmentProfileType', function () {
        ns_UserModule.getModuleSetting();
    });
    $(document).on('change', '#ddluserRoles', function () {
        ns_UserModule.getModuleSettingRoleWise();
    });  

    
});
ns_UserModule = {  
    getAllModulesDetails: function (ProfileType, act) {
        var module_id = 0;
        var strVal = $('#txtSearchModule').val();
        var param = '{"action":"getmodules","section":"usermodule","profile_type":"' + ProfileType + '","module_id": "' + module_id + '","search_key":"' + strVal + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var param = { json: param }
        $('#UserModules_placeholder').html('<tr><td colspan="11" style="text-align:center;"><div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td></tr>');  
        ns_ajax.get(
            urls.UserModuleApi,
            param,
            function (data) {
                data = jQuery.parseJSON(data);             
                if (data.Status == 'OK') {
                    var objData = data.Response[0].UserModules.length > 0 ? data.Response[0].UserModules : null;
                    var sr_no = 0, total_user = 0;
                    if (objData != null) {
                        if (act == 'more') {
                            jQuery('#UserModules_Template').tmpl(objData).appendTo('#UserModules_placeholder');
                        }
                        else {                          
                            call_tmpl_binder(objData, '/Template/setting_tmpl.html', '#UserModules_Template', '#UserModules_placeholder');
                        }       
                      
                    }
                    else {
                        $('#UserModules_placeholder').empty();
                        $('#UserModules_placeholder').append('<tr><td colspan="11" style="text-align:center;"><span>No record found</span></td></tr>')
                    }                   
                }
                else {                 
                    $('#UserModules_placeholder').html('<tr><td colspan="11" style="text-align:center;"><span>No record found</span></td></tr>');            
                }
            });   
    },   
    InsertUpdateModule: function () {
        var obj = {};
        obj.action = 'insertupdate';
        obj.section = 'usermodule';
        obj.module_id = $('#btnSaveUpdateModule').attr('data-id');
        obj.module_name = $('#txtModuleName').val();
        obj.module_alias = $('#txtModuleAlias').val();
        obj.profile_type = $('#ddlModuleProfileType').val();
        obj.parent_id = $('#ddlParentModule').val();
        obj.module_route = $('#txtModuleRoute').val();
        obj.sort_order = $('#txtSortorderNo').val(); 
        obj.icon = $('#txtNavIcon').val();  
        obj.nav_status = $('#chkModuleNavStatus').prop('checked') ? 1 : 0;
      
        var msg = '', flag = 0;
        if (obj.module_name == "") {
            flag = 1;
            msg = "Enter a module name !";
            $('#txtModuleName').focus();
        }
        else if (obj.module_name == "") {
            flag = 1;
            msg = "Enter a module alias !";
            $('#txtModuleAlias').focus();
        }
        else if (obj.profile_type == "") {
            flag = 1;
            msg = "Select a profile type !";
            $('#ddlProfileType').focus();
        }
        else
            flag = 0;
        var params = "[" + JSON.stringify(obj) + "]";       
        if (flag == 0) {
            try {
                ns_ajax.post(
                    urls.UserModuleApi,
                    params,
                    function (response) {
                        var data = jQuery.parseJSON(response);                     
                        if (data.Status == "OK") {                        
                           ShowAlertMessage("Message", data.Response, 'C');                           
                            $('#ModalModuleMaster').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_UserModule.getAllModulesDetails(ProfileType,'');
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            catch (errorThrown) {
                ShowAlertMessage("Message", errorThrown.message, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');
    },
    getParentType: function () {
        $('#ddlParentModule').empty();
        $('#ddlParentModule').html('<option value="0">-Select Parent--</option>');
        var ProfileType = $('#ddlModuleProfileType').val();
        var param = '{"action":"getparent","section":"usermodule","profile_type":"' + ProfileType+'"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserModuleApi,
            param,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status = 'OK') {
                    var row = '<option value="0">-Select Parent--</option>';
                    $.each(data.Response[0].ParentModules, function (key, value) {
                        row += '<option value="' + value.module_id + '" style="text-transform:capitalize">' + value.module_name + '</option>';
                    });
                    $('#ddlParentModule').html(row);                  
                    if (parent_id!=='')
                    $('#ddlParentModule').val(parent_id);
                }              
            });
    },    
    ChangeModuleStatus: function (module_id, status) {     
        status = status == 1 ? 0 : 1;
        var obj = {};
        obj.action = 'modulestatus';
        obj.section = 'usermodule';
        obj.module_id = module_id;
        obj.status = status;
        var params = "[" + JSON.stringify(obj) + "]";      
        try {
            ns_ajax.post(
                urls.UserModuleApi,
                params,
                function (response) {
                    var data = jQuery.parseJSON(response);
                    if (data.Status == "OK") {  
                        $('#status-' + module_id).attr('data-status', status);
                        if (status == 1)
                            $('#status-' + module_id).addClass("btn-success").removeClass("btn-warning");
                        else
                            $('#status-' + module_id).addClass("btn-warning").removeClass("btn-success");
                        $('#status-' + module_id).html((status == 1 ? '<i class="zmdi zmdi-check-all"></i>&nbsp&nbspActive&nbsp' : '<i class="zmdi zmdi-money-off"></i>Inactive'));
                        ShowAlertMessage("Message", "Status has been changed successfully", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },
    ChangeNavStatus: function (module_id, navstatus) {
        navstatus = navstatus == 1 ? 0 : 1;
        var obj = {};
        obj.action = 'navstatus';
        obj.section = 'usermodule';
        obj.module_id = module_id;
        obj.nav_status = navstatus;
        var params = "[" + JSON.stringify(obj) + "]";   

        try {
            ns_ajax.post(
                urls.UserModuleApi,
                params,
                function (response) {
                    var data = jQuery.parseJSON(response);
                    if (data.Status == "OK") {  
                        $('#nstatus-' + module_id).attr('data-nstatus', navstatus);
                        if (navstatus == 1)
                            $('#nstatus-' + module_id).addClass("btn-success").removeClass("btn-warning");
                        else
                            $('#nstatus-' + module_id).addClass("btn-warning").removeClass("btn-success");

                        $('#nstatus-' + module_id).html((navstatus == 1 ? 'Show' : 'Hide'));
                        ShowAlertMessage("Message", "Navigation Status has been changed successfully", 'C');
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },

    //Module Allotment       
    getModuleSetting: function () {
        $('#ddluserRoles').empty();
        var profile_type = $("#ddlModuleAllotmentProfileType option:selected").val(); 
        $('#ulModulesAllotments_Placeholder').html('Loading...<img src="/images/spin.gif" />');
        var param = '{"action":"employer_modules","section":"usermodule","profile_type":"' + profile_type +'"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserModuleApi,
            param,
            function (data) {               
                if (data.Status == 'OK') {  
                    //Roles
                    var str = '<option data-role-id="0" data-rate="0" value="0" >User Roles</option>';
                    $.each(data.Response[0].UserRoles, function (key, value) {
                        str += "<option value=" + value.id + ">" + value.name + "</option>";
                    });
                    $('#ddluserRoles').html(str);

                    //Modules
                    call_tmpl_binder(data.Response[0].UserModulesSetting, '/Template/setting_tmpl.html', '#ulModulesAllotments_Template', '#ulModulesAllotments_Placeholder');
                    
                }
            });
    },
    getModuleSettingRoleWise: function () {  
        var profile_type = $("#ddlModuleAllotmentProfileType option:selected").val();   
        var role_id = $('#ddluserRoles').val();
        $("#ulModulesAllotments_Placeholder li input[type=checkbox]").prop('checked', false);
        var param = '{"action":"GET_MODULES_ROLEWISE","section":"usermodule","profile_type":"' + profile_type +'","role_id":"' + role_id+'"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserModuleApi,
            param,
            function (data) {
              /*  data = jQuery.parseJSON(data);*/
                if (data.Status == 'OK') {                  
                    if (data.Response[0].RoleModulesSetting.length > 0) {
                        $.each(data.Response[0].RoleModulesSetting, function (key1, value1) {                       
                            var modules = jQuery.parseJSON(value1.modules);                          
                            $.each(modules, function (key, value) {
                                var module_id = value.module_id;
                                $.each($("#ulModulesAllotments_Placeholder li input[type=checkbox]"), function () {
                                    var m_id = $(this).attr('id');                                  
                                    if (m_id == module_id)                             
                                        $(this).prop('checked', true);                                   
                                    //else
                                    //     $(this).prop('checked', false);      

                                });
                            });
                          
                        });
                    }
                }
            });
    },
    AllotUserModules: function () {
        var profile_type = $("#ddlModuleAllotmentProfileType option:selected").val();
        var role_id = $('#ddluserRoles').val();
        var modules = [];
        $.each($("#ulModulesAllotments_Placeholder li input[type=checkbox]:checked"), function () {
            if ($(this).prop('checked'));
            {
                var m_obj = { "module_id":  + $(this).attr('id'), "status": 1 };
                modules.push(m_obj);             
            }
            
        });
        if (profile_type == '') {
            ShowAlertMessage("Message", 'Please select profile type', 'A');
            $('#ddlModuleAllotmentProfileType').focus();
            return false;
        }
        if (role_id == '0') {
            ShowAlertMessage("Message", 'Please select a role', 'A');
            $('#ddluserRoles').focus();
            return false;
        }
        if (modules.length == 0) {
            ShowAlertMessage("Message", 'Please select modules', 'A');
            $('#ulModulesAllotments_Placeholder').focus();
            return false;
        }
        else {          
            var result = confirm("Are you sure want to proceed?");
            if (result) {
                var obj = {};
                obj.action = 'modules_allotment';
                obj.section = 'usermodule';
                obj.profile_type = profile_type;
                obj.role_id = role_id;
                obj.modules = modules;
                var params = "[" + JSON.stringify(obj) + "]";               
                    ns_ajax.post(
                        urls.UserModuleApi,
                        params,
                        function (data) {
                         /*   var data = jQuery.parseJSON(response);*/
                            if (data.Status == "OK") {                                
                               ShowAlertMessage("Message", "Module has been save successfully", 'C');
                            }
                            else
                                ShowAlertMessage("Message", response, 'A');
                        });               
            }
            else
                return false;
        }           
    },       
};


/*************************************************
 *      User Wizard
 * **********************************************/
var wizard_change_status = 0;
$(document).ready(function () {
    $(document).on('input', '#txtWizardName', function () {
        var keyword = $(this).val().trim().toUpperCase().replace(/  +/g, ' ');
        $('#txtWizardKeyword').val(findAndReplace(keyword,' ','_'));
    });
    //$(document).on('change', '#ddlWizardProfileType', function () {
    //    ns_UserWizard.getParentType();
    //});
    $(document).on('click', '.moduletab', function () {
        ProfileType = $(this).attr('data-ProfileType');
        ns_UserWizard.getAllWizards(ProfileType, '');
    });
    $(document).on('click', '#btnAddNewWizard', function () {
        $('#btnSaveUpdateWizard').html('Save');
        $('#btnSaveUpdateWizard').attr('data-id', '0');
        $('#txtWizardName').val('');
        $('#txtWizardKeyword').val('');
        $('#ddlWizardProfileType').val('');
        $('#txtWizardRoute').val('');
        $('#txtNavIcon').val('');
        $('#txtSortorder').val('');
        //CodeMirror.fromTextArea(document.getElementById('WizardTemplateStructure'), {
        //    lineNumbers: true
        //}).setValue("");
        editor.setValue('');
       
        //var editor = CodeMirror.fromTextArea(document.getElementById("WizardTemplateStructure"));
        // editor.setValue('')
        //ns_UserWizard.getParentType();
        
    });
    $(document).on('click', '#btnSaveUpdateWizard', function () {
        ns_UserWizard.InsertUpdateWizard();
    });
    $(document).on('click', '.EditWizard', function () {
        var w_id = this.id.split('-')[1];
        var w_name = $(this).attr('data-w_name');
        var w_keyword = $(this).attr('data-w_keyword');
        var profile_type = $(this).attr('data-profile_type');
        var w_module_url = $(this).attr('data-w_module_url');
        var sort_order = $(this).attr('data-sort_order');
        var icon = $(this).attr('data-icon');
        var w_status = $(this).attr('data-w_status');  
        var w_html = $(this).attr('data-w_html');  
        $('#txtWizardName').val(w_name);
        $('#txtWizardKeyword').val(w_keyword);
        $('#ddlWizardProfileType').val(profile_type);    
        $('#txtWizardRoute').val(w_module_url);

       // var text = editor.getValue(); // CodeMirror function to get content
        //$('#WizardTemplateStructure').val(w_html); 
        editor.setValue(w_html);
        

        //CodeMirror.fromTextArea(document.getElementById('WizardTemplateStructure'), {
        //    lineNumbers: true
        //}).setValue(w_html);

      
       
        $('#txtIcon').val(icon);
        $('#txtSortorder').val(sort_order);
        w_status == 1 ? $('#chkWizardNavStatus').prop('checked', true) : $('#chkWizardNavStatus').prop('checked', false);

        $('#btnSaveUpdateWizard').attr('data-id', w_id);
        $('#btnSaveUpdateWizard').html('Update');

    });
    $(document).on('click', '.ChangeWizardStatus', function () {
        var w_id = this.id.split('-')[1];
        var status = $(this).attr('data-status');
        //var result = confirm("Are you sure want to change the status?");
        //if (result) {
            ns_UserWizard.ChangeWizardStatus(w_id, status);
        //}
        //else
        //    return false;
    });
    $(document).on('click', '.ChangeNavStatus', function () {
        var module_id = this.id.split('-')[1];
        var navstatus = $(this).attr('data-nstatus');
        var result = confirm("Are you sure want to change the status?");
        if (result) {
            ns_UserWizard.ChangeNavStatus(module_id, navstatus);
        }
        else
            return false;
    });
    //Wizard Allotments
    $(document).on('click', '.cls-wizard-allotment', function () {
        var action = $(this).attr('data-action');
        if (action == 'save') {
            ns_UserWizard.AllotUserWizards();
        }
        if (action == 'cancel') {
            ns_UserWizard.getWizardSetting();
        }
    });
   
    $(document).on('change', '#ddlWizardAllotmentProfileType', function () {
        ns_UserWizard.getWizardSetting();
    });
    $(document).on('change', '#ddluserRolesWizard', function () {
        ns_UserWizard.getModuleSettingRoleWise();
    });
    $(document).on('click', '.cls-personalized-wizards', function () {
        var action = $(this).attr('data-action');
        if (action == 'view-setting') {
            wizard_change_status = 0;
            //ns_UserWizard.getPersonalizedWizardSetting();
        }
        if (action == 'save') {       
            if (wizard_change_status>0)
            ns_UserWizard.SavePersonalizedWizard();
        }
        if (action == 'delete') {
            var wid = $(this).attr('data-id');
            $('#pw-' + wid).remove();
            wizard_change_status = wizard_change_status + 1;
        }
    });

});

ns_UserWizard = {
    getAllWizards: function (ProfileType, act) {
        var w_id = 0;
        var strVal = $('#txtSearchModule').val();
        var param = '{"action":"getwizards","section":"userwizard","profile_type":"' + ProfileType + '","w_id": "' + w_id + '","search_key":"' + strVal + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var param = { json: param }
        $('#UserWizards_placeholder').html('<tr><td colspan="6" style="text-align:center;"><div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td></tr>');
        ns_ajax.get(
            urls.UserWizardApi,
            param,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    var objData = data.Response[0].UserWizards.length > 0 ? data.Response[0].UserWizards : null;
                    var sr_no = 0, total_user = 0;
                    if (objData != null) {
                        if (act == 'more') {
                            jQuery('#UserWizards_Template').tmpl(objData).appendTo('#UserWizards_placeholder');
                        }
                        else {
                            call_tmpl_binder(objData, '/Template/setting_tmpl.html', '#UserWizards_Template', '#UserWizards_placeholder');
                        }

                    }
                    else {
                        $('#UserWizards_placeholder').empty();
                        $('#UserWizards_placeholder').append('<tr><td colspan="6" style="text-align:center;"><span>No record found</span></td></tr>')
                    }
                }
                else {
                    $('#UserWizards_placeholder').html('<tr><td colspan="6" style="text-align:center;"><span>No record found</span></td></tr>');
                }
            });
    },
    InsertUpdateWizard: function () {
        var obj = {};
        obj.action = 'insertupdate';
        obj.section = 'userwizard';
        obj.w_id = $('#btnSaveUpdateWizard').attr('data-id');
        obj.w_name = $('#txtWizardName').val();
        obj.w_keyword = $('#txtWizardKeyword').val();
        obj.profile_type = $('#ddlWizardProfileType').val();       
        obj.w_module_url = $('#txtWizardRoute').val();
        obj.sort_order = $('#txtSortorder').val();
        obj.icon = $('#txtNavIcon').val();
        obj.w_status = $('#chkWizardNavStatus').prop('checked') ? 1 : 0;
        obj.w_html = editor.getValue();
       
        var msg = '', flag = 0;
        if (obj.w_name == "") {
            flag = 1;
            msg = "Enter a wizard name !";
            $('#txtWizardName').focus();
        }
        else if (obj.w_keyword == "") {
            flag = 1;
            msg = "Enter wizard keyword !";
            $('#txtWizardKeyword').focus();
        }
        else if (obj.profile_type == "") {
            flag = 1;
            msg = "Select a profile type !";
            $('#ddlProfileType').focus();
        }
        else if (obj.w_html == "") {
            flag = 1;
            msg = "Wizard Template Structure !";
            CodeMirror.fromTextArea(document.getElementById('WizardTemplateStructure')).focus();
        }
       

        else
            flag = 0;
        var params = "[" + JSON.stringify(obj) + "]";
        if (flag == 0) {
            try {
                ns_ajax.post(
                    urls.UserWizardApi,
                    params,
                    function (response) {
                        var data = jQuery.parseJSON(response);
                        if (data.Status == "OK") {
                           /* ShowAlertMessage("Message", data.Response, 'C');*/
                            $('#ModalWizardMaster').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_UserWizard.getAllWizards(ProfileType, '');
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            catch (errorThrown) {
                ShowAlertMessage("Message", errorThrown.message, 'A');
            }
        }
        else
            ShowAlertMessage("Message", msg, 'A');
    },  
    ChangeWizardStatus: function (w_id, status) {
        status = status == 1 ? 0 : 1;
        var obj = {};
        obj.action = 'wizardstatus';
        obj.section = 'userwizard';
        obj.w_id = w_id;
        obj.w_status = status;
        var params = "[" + JSON.stringify(obj) + "]";
        try {
            ns_ajax.post(
                urls.UserWizardApi,
                params,
                function (response) {
                    var data = jQuery.parseJSON(response);
                    if (data.Status == "OK") {
                        $('#status-' + w_id).attr('data-status', status);
                        if (status == 1)
                            $('#status-' + w_id).addClass("btn-success").removeClass("btn-warning");
                        else
                            $('#status-' + w_id).addClass("btn-warning").removeClass("btn-success");
                        $('#status-' + w_id).html((status == 1 ? '<i class="zmdi zmdi-check-all"></i>&nbsp&nbspActive&nbsp' : '<i class="zmdi zmdi-money-off"></i>Inactive'));
                       /* ShowAlertMessage("Message", "Status has been changed successfully", 'C');*/
                    }
                    else
                        ShowAlertMessage("Message", response, 'A');
                });
        }
        catch (err) {
            ShowAlertMessage("Exception", err.message, 'A');
        }
    },  

    //Wizard Allotment       
    getWizardSetting: function () {
        $('#ddluserRolesWizard').empty();
        var profile_type = $("#ddlWizardAllotmentProfileType option:selected").val();      
        $('#ulWizardAllotments_Placeholder').html('Loading...<img src="/images/spin.gif" />');
        var param = '{"action":"WIZARDSETTING","section":"usermodule","profile_type":"' + profile_type+'"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserWizardApi,
            param,
            function (data) {
               /* data = jQuery.parseJSON(data);*/
                if (data.Status == 'OK') {

                    //Roles
                    var str = '<option data-role-id="0" data-rate="0" value="0" >User Roles</option>';
                    $.each(data.Response[0].UserRoles, function (key, value) {
                        str += "<option value=" + value.id + ">" + value.name + "</option>";
                    });
                    $('#ddluserRolesWizard').html(str);

                    //Modules
                    call_tmpl_binder(data.Response[0].UserWizardSetting, '/Template/setting_tmpl.html', '#ulWizardAllotments_Template', '#ulWizardAllotments_Placeholder');

                }
            });
    },
    getModuleSettingRoleWise: function () {
        var profile_type = $("#ddlWizardAllotmentProfileType option:selected").val();   
        var role_id = $('#ddluserRolesWizard').val();
        
        $("#ulWizardAllotments_Placeholder li input[type=checkbox]").prop('checked', false);
        var param = '{"action":"GET_WIZARDS_ROLEWISE","section":"userwizard","profile_type":"' + profile_type +'","role_id":"' + role_id + '"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserWizardApi,
            param,
            function (data) {
               /* data = jQuery.parseJSON(data);*/
                if (data.Status == 'OK') {
                    if (data.Response[0].RoleWizardsSetting.length > 0) {
                        $.each(data.Response[0].RoleWizardsSetting, function (key1, value1) {
                            var modules = jQuery.parseJSON(value1.wizards);
                            $.each(modules, function (key, value) {
                                var wizard_id = value.w_id;
                                $.each($("#ulWizardAllotments_Placeholder li input[type=checkbox]"), function () {
                                    var m_id = $(this).attr('id');
                                    if (m_id == wizard_id)
                                        $(this).prop('checked', true);
                                    //else
                                    //     $(this).prop('checked', false);      

                                });
                            });

                        });
                    }
                }
            });
    },
    AllotUserWizards: function () {
        var profile_type = $("#ddlWizardAllotmentProfileType option:selected").val();   
        var role_id = $('#ddluserRolesWizard').val();
        var wizards = [];
        $.each($("#ulWizardAllotments_Placeholder li input[type=checkbox]:checked"), function () {
            if ($(this).prop('checked'));
            {
                var m_obj = { "w_id": + $(this).attr('id'), "status": 1 };
                wizards.push(m_obj);
            }
        });

        if (profile_type == '') {
            ShowAlertMessage("Message", 'Please select profile type', 'A');
            $('#ddlWizardAllotmentProfileType').focus();
            return false;
        }
        if (role_id == '0') {
            ShowAlertMessage("Message", 'Please select a role', 'A');
            $('#ddluserRolesWizard').focus();
            return false;
        }
        if (wizards.length == 0) {
            ShowAlertMessage("Message", 'Please select modules', 'A');
            $('#ulWizardAllotments_Placeholder').focus();
            return false;
        }
        else {
            var result = confirm("Are you sure want to proceed?");
            if (result) {
                var obj = {};
                obj.action = 'wizards_allotment';
                obj.section = 'userwizard';
                obj.profile_type = profile_type;
                obj.role_id = role_id;
                obj.wizards = wizards;
                var params = "[" + JSON.stringify(obj) + "]";
            
                ns_ajax.post(
                    urls.UserWizardApi,
                    params,
                    function (data) {
                      /*  var data = jQuery.parseJSON(response);*/
                        if (data.Status == "OK") {
                           /* ShowAlertMessage("Message", "Wizard has been save successfully", 'C');*/
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            else
                return false;
        }
    },

    // Personalized Wizard
    getPersonalizedWizardSetting: function () {
        
        $('#PersonalizedWizard_Placeholder').html('<div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div>');
        $('#PersonalizedWizardSetting_Placeholder').html('<div class="text-center w-100">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"PERSONALIZED_WIZARD","section":"userwizard","profile_type":"USER"}';
        var param = { json: param }
        ns_ajax.get(
            urls.UserWizardApi,
            param,
            function (data) {
                //data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    $('#PersonalizedWizard_Placeholder').html('');
                    call_tmpl_binder(data.Response, '/Template/setting_tmpl.html', '#PersonalizedWizardSetting_Template', '#PersonalizedWizardSetting_Placeholder');


                    setTimeout(function () {
                        //sortable Wizard Setting 
                        $(function () {
                            $('.clsPersonalizedWizardsSettingOrdering').sortable({
                                connectWith: ".connectedSortable",
                                placeholder: "ui-state-highlight2",
                                update: function (e, ui) {
                                    var target_id = e.target.id;
                                    var index_no = ui.item.index();
                                    var action_key = $(ui.item).data('action_key');
                                    var action_value = '';
                                    var w_id = $(ui.item).data('w_id');
                                    var obj = {};
                                    obj.action_key = action_key;
                                    obj.action_value = action_value;
                                    obj.w_id = w_id;
                                    obj.sort_order = index_no + 1;
                                    //console.log(JSON.stringify(obj));

                                    wizard_change_status = wizard_change_status + 1;
                                    //ns_task.boardActions(obj);
                                }

                            }).disableSelection();
                        });
                    }, 500);

                    //call_tmpl_binder(data.Response[0].PersonalizedWizards, '/Template/setting_tmpl.html', '#PersonalizedWizard_Template', '#PersonalizedWizard_Placeholder');

                    var IsCalendar = false;
                    if (data.Response[0].PersonalizedWizards.length > 0) {                        
                        $.each(data.Response[0].PersonalizedWizards, function (key, value) {
                            if (value.w_keyword == "CALENDER")
                                IsCalendar = true;
                            
                            var tmpl_id = value.w_keyword + '_' + value.w_id + '_tmpl';
                            var tmpl_structure = (value.w_html == "" || value.w_html == undefined) ? '<div class="h-300px"></div>' : value.w_html;
                            var json_object = (value.w_jsondata !==undefined && value.w_jsondata !== '' && value.w_jsondata !== null) ? jQuery.parseJSON(value.w_jsondata) : null;
                            tmpl_structure = tmpl_structure.replace('{w_name}', value.w_name);                        
                                          
                            var temp = '<script id="' + tmpl_id + '" type="text/x-jquery-tmpl">' + tmpl_structure + '</script>';

                            $(temp).appendTo("body");
                            $("#" + tmpl_id).tmpl(json_object).appendTo("#PersonalizedWizard_Placeholder");
                           
                            //TempCompiler(tmpl_id, tmpl_structure, tmpl_placeholder, json_object);
                         
                        });
                     
                        if (IsCalendar == true) {
                            ns_candidate_calendar.design('candidate-calendar-container', 'Jobs');
                            $('#divCalendar').show();
                        }
                        else {
                            $('#divCalendar').hide();
                        }

                    }
                    else {
                        var msg = "Dashboard wizards not found.";
                        var link = 'Please configure the personalize wizards by click on button <a class="cls-personalized-wizards btn btn-outline-primary btn-sm" data-action="view-setting" data-toggle="modal" data-target="#ModalPersonalizedWizards"><i class="ti ti-plus"></i> Configure</a>';
                        $('#PersonalizedWizard_Placeholder').html(nodata2(msg, link));
                    }

                   
                }
                else {
                    var msg = "Dashboard wizards not found.";
                    var link = 'Please configure the personalize wizards by click on button <a class="cls-personalized-wizards btn btn-outline-primary btn-sm" data-action="view-setting" data-toggle="modal" data-target="#ModalPersonalizedWizards"><i class="ti ti-plus"></i> Configure</a>';
                    $('#PersonalizedWizard_Placeholder').html(nodata2(msg, link));
                }
            });
    },
    
    SavePersonalizedWizard: function () {       
        var wizards = [];
        $('#ul_PersonalizeWizardsList li').each(function (index) {            
            var m_obj = { "w_id": + $(this).attr('id').split('-')[1], "order": index + 1 };
                wizards.push(m_obj);           
        });
      
        if (wizards.length == 0) {
            ShowAlertMessage("Message", 'Please select wizard', 'A');
            $('#PersonalizedWizardSetting_Placeholder').focus();
            return false;
        }
        else {
            //var result = confirm("Are you sure want to save personalize setting?");
            //if (result) {
                var obj = {};
                obj.action = 'save_personalized_wizard'; 
                obj.section = 'userwizard'; 
                obj.profile_type = "USER";
                obj.wizards = wizards;
                var params = "[" + JSON.stringify(obj) + "]";
         
                ns_ajax.post(
                    urls.UserWizardApi,
                    params,
                    function (data) {
                        //var data = jQuery.parseJSON(data);
                        if (data.Status == "OK") {
                            //ShowAlertMessage("Message", "Personalize wizards setting has been saved successfully", 'C');
                            $('#ModalPersonalizedWizards').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_UserWizard.getPersonalizedWizardSetting();
                        }
                        else
                            ShowAlertMessage("Message", data.Error, 'A');
                    });
            //}
            //else
            //    return false;
        }
    },
         
};

/*************************************************
 *      Payroll Settings
 * **********************************************/
$(document).ready(function () {
    $(document).on('click', '.cls-payroll-setting', function () {
        var action = $(this).attr('data-action');       
        if (action == 'edit') {
            var sid = $(this).attr('data-id');
            var section = $(this).attr('data-section');
            var title = $(this).attr('data-title');
            var jsonData = $(this).attr('data-json');            
            jsonData = (jsonData == '' || jsonData == '[]') ? null : jQuery.parseJSON(jsonData);         
            $('#btnUpdatePayrollSetting').attr('data-id', sid);
            $('#btnUpdatePayrollSetting').attr('data-section', section);
            $('#btnUpdatePayrollSetting').attr('data-title', title); 
            $('#parollSettingHead').html(title);            
            call_tmpl_binder(jsonData, '/Template/setting_tmpl.html', '#editForm_' + section + '_Template', '#PayrollSettingsUpdate_Placeholder');
            setTimeout(function () {DatePairFuction();}, 200);
        }   
        if (action == 'save') {
            var obj = {};
            var sid = $(this).attr('data-id');
            var block = $(this).attr('data-section');
            var title = $(this).attr('data-title');          
            if (block == 'payschedule') {
                var name = $('#txt_name_payschedule').val().trim();
                var pay_schedule = $('#ddl_pay_schedule').val();
                var pay_schedule_month_week = $('#txt_pay_schedule_month_week').val().trim();
                var pay_date = $('#txt_pay_date').val().trim();
                var pay_period_date = $('#txt_pay_period_date').val();
              
                if (name == '') {
                    ShowAlertMessage("Message", 'Required pay schedule name', 'A');
                    $('#txt_name_payschedule').focus();
                    return false;
                }
                if (pay_schedule == '') {
                    ShowAlertMessage("Message", 'Required pay schedule', 'A');
                    $('#ddl_pay_schedule').focus();
                    return false;
                }
                else if (pay_schedule_month_week == '') {
                    ShowAlertMessage("Message", 'Required pay period ', 'A');
                    $('#txt_pay_schedule_month_week').focus();
                    return false;
                }
                else if (pay_date == '') {
                    ShowAlertMessage("Message", 'Required pay date', 'A');
                    $('#txt_pay_date').focus();
                    return false;
                }
                else if (pay_period_date == '') {
                    ShowAlertMessage("Message", 'Required pay period date', 'A');
                    $('#txt_pay_period_date').focus();
                    return false;
                }
               
                else {

                    ConvertDateFormate

                    if (confirm("Are you sure want to proceed?")) {                       
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;

                        obj.name = name;
                        obj.pay_schedule = pay_schedule;
                        obj.pay_schedule_month_week = pay_schedule_month_week;
                        obj.pay_period_date = pay_period_date
                        obj.pay_date = pay_date;
                      
                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block,title);
                    }
                    else
                        return false;
                }
            }
            if (block == 'hmrc') {
                var gateway_user_id = $('#txt_gateway_user_id').val().trim();
                var gateway_password = $('#txt_gateway_password').val().trim();               
                var save_gateway_credentials = $('#chk_save_gateway_credentials').prop('checked') ? 1 : 0;
                var automatically_submit_to_hmrc = $('#chk_automatically_submit_to_hmrc').prop('checked') ? 1 : 0;

                if (gateway_user_id == '') {
                    ShowAlertMessage("Message", 'Required gateway userid', 'A');
                    $('#txt_gateway_user_id').focus();
                    return false;
                }
                if (gateway_password == '') {
                    ShowAlertMessage("Message", 'Required gateway password', 'A');
                    $('#txt_gateway_password').focus();
                    return false;
                }
                else {
                    if (confirm("Are you sure want to proceed?")) {
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;      

                        obj.gateway_user_id = gateway_user_id;
                        obj.gateway_password = gateway_password;
                        obj.save_gateway_credentials = save_gateway_credentials;
                        obj.automatically_submit_to_hmrc = automatically_submit_to_hmrc;
                      
                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block, title);
                    }
                    else
                        return false;
                }
            } 
            if (block == 'hmrc_reference') {
                var paye_reference = $('#txt_paye_reference').val().trim();
                var accounts_office_reference = $('#txt_accounts_office_reference').val();               
                if (paye_reference == '') {
                    ShowAlertMessage("Message", 'Required paye reference', 'A');
                    $('#txt_paye_reference').focus();
                    return false;
                }
                if (accounts_office_reference == '') {
                    ShowAlertMessage("Message", 'Required accounts office reference', 'A');
                    $('#txt_accounts_office_reference').focus();
                    return false;
                }               
                else {
                    if (confirm("Are you sure want to proceed?")) {
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;

                        obj.paye_reference = paye_reference;
                        obj.accounts_office_reference = accounts_office_reference;                      

                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block, title);
                    }
                    else
                        return false;
                }
            }
            if (block == 'pension_pay_types') {
                var pay_type = $('#txt_pay_type').val().trim();
                var bonus = $('#chk_bonus').prop('checked') ? 1 : 0;
                var car_allowance = $('#chk_car_allowance').prop('checked') ? 1 : 0;
                var commission = $('#chk_commission').prop('checked') ? 1 : 0;
                var overtime = $('#chk_overtime').prop('checked') ? 1 : 0;
                if (paye_reference == '') {
                    ShowAlertMessage("Message", 'Required paye reference', 'A');
                    $('#txt_paye_reference').focus();
                    return false;
                }               
                else {
                    if (confirm("Are you sure want to proceed?")) {
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;
                        obj.pay_type = pay_type;
                        obj.bonus = bonus;
                        obj.car_allowance = car_allowance;
                        obj.commission = commission;
                        obj.overtime = overtime;

                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block, title);
                    }
                    else
                        return false;
                }
            }
            if (block == 'ni_relief') {
                var credit_used_amount = 0, state_aid_rules = 0, sectors_applied = '0';
                var employment_allowance = $('input[name="rdoEmploymentAllowance"]:checked').val();
                var small_employer_relief = $('input[name="rdoSmallEmployersRelief"]:checked').val();

                credit_used_amount = $('#txt_credit_used').val();
                state_aid_rules = $('input[name="rdoStateAidRules"]:checked').val();
                sectors_applied = $('input[name="chk_sector"]:checked') ? $('input[name="chk_sector"]:checked').val() : '0';
                if (typeof sectors_applied === "undefined")
                    sectors_applied = '0'           
                
             
                if (employment_allowance == '1' && credit_used_amount=='') {
                    ShowAlertMessage("Message", 'Enter Credit used this tax year (since 6 April) Amount', 'A');
                    $('#txt_credit_used').focus();
                    return false;
                }  
                if (employment_allowance == '1' && state_aid_rules == '') {
                    ShowAlertMessage("Message", 'State Aid Rules apply?', 'A');
                    $('input[name="rdoStateAidRules"]').focus();
                    return false;
                }  

                    if (confirm("Are you sure want to proceed?")) {
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;                     
                        obj.employment_allowance = employment_allowance;
                        obj.small_employer_relief = small_employer_relief;
                       

                        obj.credit_used_amount = employment_allowance=='0'?'0': credit_used_amount;
                        obj.state_aid_rules = employment_allowance == '0' ? '0' : state_aid_rules;
                        obj.sectors_applied = employment_allowance == '0' ? '0' : sectors_applied;

                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block, title);
                    }
                    else
                        return false;              
            }   
            if (block == 'pension_submission_with_nest') {
                var username = $('#txt_pension_submission_username').val().trim();
                var password = $('#txt_pension_submission_password').val().trim();
                var submit_automatically_to_nest_every_payroll = $('#chk_SubmitAutomatically_to_Nest_every_payroll').prop('checked') ? 1 : 0;
                var pension_automation = $('input[name="SmallEmployersRelief"]:checked').prop('checked') ? 1 : 0;               
                
                if (username == '') {
                    ShowAlertMessage("Message", 'Required username', 'A');
                    $('#txt_pension_submission_username').focus();
                    return false;
                }
                if (password == '') {
                    ShowAlertMessage("Message", 'Required password', 'A');
                    $('#txt_pension_submission_password').focus();
                    return false;
                }
                else {
                    if (confirm("Are you sure want to proceed?")) {
                        obj.action = action;
                        obj.section = 'payroll_setting';
                        obj.block = block;
                        obj.uid = sid;

                        obj.username = username;
                        obj.password = password;
                        obj.submit_automatically_to_nest_every_payroll = submit_automatically_to_nest_every_payroll;
                        obj.pension_automation = pension_automation;

                        var params = "[" + JSON.stringify(obj) + "]";
                        ns_payrollSettings.post(params, block, title);
                    }
                    else
                        return false;
                }
            } 
            
        }   
    });  

    $(document).on('click', '.employment_allowence', function () {
        var val = $(this).val();
        if(val=='1')
            $('#div_employment_allowence').show('slow');
        else
            $('#div_employment_allowence').hide('slow');

    });
    
});

ns_payrollSettings = {
    get: function (act) {
        $('#PayrollSettings_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"get_settings","section":"payroll_setting"}';
        var params = { json: param }       
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {                
                if (data.Status == 'OK') {                 
                    call_tmpl_binder(data.Response[0], '/Template/setting_tmpl.html', '#PayrollSettings_Template', '#PayrollSettings_Placeholder');
                  }
                else
                    $('#PayrollSettings_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    post: function (params, block,title) {     
        ns_ajax.post(
            urls.payrollApi,
            params,
            function (data) {      
                if (data.Status == "OK") {
                    ShowAlertMessage("Message", data.Response, 'C');
                    $('#ModalPayrollSettings').modal('hide');
                    $(".modal-backdrop").css('display', 'none');
                    ns_payrollSettings.get();
                }
                else
                    ShowAlertMessage("Message", response, 'A');
            });
    },  
}


/*************************************************
 *      Payroll 
 * **********************************************/
$(document).ready(function () {  
    $(document).on('click', ".loadmoreWorkhistory", function () {
        page_number = page_number + 10;     
        ns_payroll.get('more');
    });
    $(document).on('click', ".btnRefreshWorkHistory", function () {
        page_number = 0; page_size = 10;
        ns_payroll.get('');
    });
    $(document).on('click', ".ul-records-tabs-work-history li a", function () {
        JobStatus = jQuery(this).attr('data-status');
        page_number = 0; page_size = 10;
        ns_payroll.get('');
    });
    $(document).on('click', ".clstopTabs li a", function () {
        var type = $(this).attr('data-type');      
        page_number = 0; page_size = 10;
        if (type == 'payroll') {
            var action = $(this).attr('data-action');
            payrolltype = action;
            if (action == 'staffbank')
                $('#divAgencyFilter').hide();
            else if (action == 'overtime')
                $('#divAgencyFilter').hide();
            else
                $('#divAgencyFilter').show();

            ns_payroll.getPayroll('');
        }
        if (type == 'workhistory')    
            ns_payroll.get('');
    });
    $(document).on('click', ".btnRefreshFinance", function () {
     
        var action = $(this).attr('data-action');
        employee_id = 0;
        agency_id = 0;
        page_number = 0; page_size = 10;
        if ($(this).attr('data-type')!=='perm')
            datecalendar();

        $('#ddlAgenciesList').val('0');
        
        $('#ddlAgenciesList').val('0');
        
        $('#txtCandidate').val('');
        $("#hfcndid").val('');
        if (action == 'payroll') {
            payrolltype = $(this).attr('data-type');          
            ns_payroll.getPayroll('');
        }      
    });
    
    $(document).on('click', ".btnDownloadPayroll", function () {
        var action = $(this).attr('data-action');     
        if (action == 'payroll') {
            payrolltype = $(this).attr('data-type');
            ns_payroll.downlodPayroll('');
        }
    });

    $(document).on('change', "#ddlAgenciesList", function () {
        agency_id = $(this).val();   
        page_number = 0; page_size = 10;      
        ns_payroll.getPayroll('');
    });


    $(document).on('change', "#txt_pay_date", function () {       
        page_number = 0; page_size = 10;
        ns_payroll.getPayroll('');
    });

    $(document).on('change', "#txtCandidate", function () {        
        employee_id = $("#hfcndid").val();
        page_number = 0; page_size = 10;
        ns_payroll.getPayroll('');
    });
    

    $(document).on('click', ".chkExcludeParoll", function () {      
        var cndid = $(this).attr('id').split('-')[1];
        var amount = parseFloat($(this).attr('data-amount'));
        var total = parseFloat($('#spanPayrollTotal').attr('data-amt'));
        if ($(this).prop('checked')) {         
            $('#trpayroll-' + cndid).removeClass('cardlist');
            amount = total + amount;
        }
        else {
            $('#trpayroll-' + cndid).addClass('cardlist');
            amount = total - amount;
        }
        $('#spanPayrollTotal').attr('data-amt', amount);
        $('#spanPayrollTotal').html(amount.toLocaleString());
    }); 
    $(document).on('click', ".loadmorepayroll", function () {
        page_number = page_number + 10;     
        ns_payroll.getPayroll('more');
    });
    $(document).on('click', '.cls-payroll', function () {
        var action = $(this).attr('data-action');
        if (action == 'review') {
            payrolltype = $(this).attr('data-type');
      
            $('#btnConfrimSubmitPayroll').attr('data-type', payrolltype);
            ns_payroll.ReviewPayroll();
        }    
        if (action == 'create') {
            payrolltype = $(this).attr('data-type');
            ns_payroll.createPayroll();
        }  
        if (action == 'edit') {           
            var cnd_id = $(this).attr('data-cnd-id');          
            $('#btnUpdatePayroll').attr('data-cnd-id', cnd_id);
            $('.allowences_masters').attr('data-cndid', cnd_id);
            
            $('#spanpayrollCndProfilename').html($(this).attr('data-cnd_name'));
            $('#spanpayrollCndProfileType').html($(this).attr('data-cnd_type'));            
            $('#txt_payroll_salary').val($(this).attr('data-salary'));   
            $('#txt_payroll_overtime_amt').val($(this).attr('data-overtime'));      
            $('#spanPayrollNetPay').html($(this).attr('data-netamount'));
            ns_payroll.GetPayrollEditDetails(cnd_id);
        } 
        if (action == 'updateparoll') {              
            ns_payroll.updatePayroll($(this).attr('data-cnd-id'));
        }

        if (action == 'payslip') {           
            var cnd_id = $(this).attr('data-cnd-id');
            $('#btnpayslipprint').attr('data-cnd-id', cnd_id);
            $('#spanpayslipCndProfilename').html($(this).attr('data-cnd_name'));
            $('#spanpayslipCndProfileType').html($(this).attr('data-cnd_type'));   
            $('#spanpayslipPeriod').html($('#txt_pay_date').val());
            
            $('#spanPayslipSalary').html(parseFloat($(this).attr('data-salary')).toFixed(2));
            $('#spanpayslip_overtime_amt').html(parseFloat($(this).attr('data-overtime')).toFixed(2));
            var grossPay = $(this).attr('data-gross_pay');
            
            $('#spanPayslipNetPayslip').html(parseFloat($(this).attr('data-netamount')).toFixed(2));
            ns_payroll.PaySlip(cnd_id, grossPay);         

        }
        if (action == 'PayrollRemittanceView') {
            var group_id = $(this).attr('data-group_id');
            ns_payroll.PayrollRemittanceView(group_id);

            $('#tr_to, #tr_bcc, #tr_payroleComments, #btnsend_remittanceBack').hide('slow');
            $('.downloadnowRemittance').show('slow');
            $('#btnsend_remittance').attr('data-action', 'send_remittance_preview');
        }

        if (action == 'send_remittance_preview') {
          
            $('#tr_to, #tr_bcc, #tr_payroleComments, #btnsend_remittanceBack').show('slow');
            $('.downloadnowRemittance').hide('slow');
            $('#btnsend_remittance').attr('data-action','send_remittance');            
        }

        if (action == 'send_remittance_back') {
            $('#tr_to, #tr_bcc, #tr_payroleComments, #btnsend_remittanceBack').hide('slow');
            $('.downloadnowRemittance').show('slow');
            $('#btnsend_remittance').attr('data-action', 'send_remittance_preview');
        }
        

        if (action == 'send_remittance') {          
            var group_id = $(this).attr('data-group_id');
            ns_payroll.SendRemittanceView(group_id);
        }

        
        
        if (action == 'shiftdetails') {
            payrolltype = $(this).attr('data-type');
            var cnd_id = $(this).attr('data-cnd-id');
            var is_overtime = $(this).attr('data-is_overtime');
            
            $('.btn_exclude_jobs').attr('data-cnd-id', cnd_id);
            $('#spanpayrollProfilename').html($(this).attr('data-cnd_name'));
            $('#spanpayrollProfiletype').html($(this).attr('data-cnd_type'));
            ns_payroll.getPayrollHisoty(cnd_id, is_overtime);
        }   
        if (action == 'exclude' || action == 'include') {                
            ns_payroll.ExcludePayrollShift(action);
        } 
        if (action == 'payroll_history_details') {         
            var group_id = $(this).attr('data-group_id');  
       /*     $('#spanPaySchedulePaymentDetails').html($(this).attr('data-PaySchedule'));*/
            $('#spanPayperiodPaymentDetails').html($(this).attr('data-Payperiod'));
            $('#spanPay_date_PaymentDetails').html($(this).attr('data-pay_date'));
            $('#spanUserPaymentDetails').html($(this).attr('data-byuser'));
            
            $('#spanGroupIDPaymentDetails').html(group_id);
            
            ns_payroll.getPaymentsHisotyDetails(group_id);
        }   
        if (action == 'allowences_masters') {
            $(".modal-backdrop").css('display', 'none');
            $('#MasterlistModal').modal('show');
          
            var cndid = $(this).attr('data-cndid');
            $('#btnupdate_cnd_allowence_deduction_heads').attr('data-cndid', cndid);
                
            ns_payroll.getBonusAllowenceMasterList($(this).attr('data-type'), cndid);
        }   
        if (action == 'update_cnd_allowence_deduction_heads') {
            var cndid = $(this).attr('data-cndid');        
            ns_payroll.SaveCndAllowencessHeads(cndid);
        }
        
        if (action == 'add_master') {             
            $('#txt_type_payrollhead').val('');
            $('#txt_icons_payrollhead').val('');
            $('#txt_desc_payrollhead').val('');
            $('#chkpayrollheadStatus').prop('checked', false);
            $('#divListMasterCatParoll').hide();
            $('#divAddMasterCatParoll').show();
        }  
        if (action == 'cancel_allowencess_master') {
            $('#txt_type_payrollhead').val('');
            $('#txt_icons_payrollhead').val('');
            $('#txt_desc_payrollhead').val('');
            $('#chkpayrollheadStatus').prop('checked', false);
            $('#divListMasterCatParoll').show();
            $('#divAddMasterCatParoll').hide();           
        }       
        if (action == 'save_allowencess_master') {
            ns_payroll.SaveAllowencessMaster();
        }       
    });  
    $(document).on('click', ".loadmorePaymentsHistory", function () {
        page_number = page_number + 10;
        ns_payroll.getPaymentsHisoty('more');
    });
    $(document).on('change', '#ddl_PayForPayrollHistory', function () {
        ns_payroll.getPaymentsHisoty();
    });
    $(document).on('change', '#ddl_PaySchedulePayrollHistory', function () {     
        ns_payroll.getPaymentsHisoty();
    });
    $(document).on('click', '#btnSearchpayroll', function () {
        if ($('#txt_reference_payrollHistory').val().trim() == '') {
            ShowAlertMessage("Message", 'Enter Reference', 'A');
            $('#txt_reference_payrollHistory').focus();
            return false;
        }
        else
           ns_payroll.getPaymentsHisoty();
    });
    $(document).on('click', '#btnpayrollRefresh', function () {
        $('#ddl_PayForPayrollHistory, #txt_reference_payrollHistory').val('');

        datecalendar();
        ns_payroll.getPaymentsHisoty();
    });  

    $(document).on('change, input', '#txt_search_master_list', function () {
        var value = $(this).val();
      
        $("#MasterList_payroll_Placeholder div").each(function () {
            alert($(this).text().match(value));
            if ($(this).text().match(value)) {
                alert('1');
                //Text found in div 
            }
        });
    });  
});


ns_payroll = {
    get: function (act) {
        var param = '{"action":"get_work_history","section":"workhistory","JobStatus":"' + JobStatus + '","role_id":"' + emp_role_id + '","search_key":"' + emp_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param }
        $('.loadmoreWorkhistory').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);
                $('.loadmoreWorkhistory').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');

                if (data.Status == 'OK') {                   
                        ns_payroll.LoadWorkHistory(data.Response, act);
                        ns_payroll.TotalQty(data.Response[0].TotalCount);                 
                }
                else {
                    var msg = "Sorry ! we could't find any data matching your criteria..";
                    var link = "Try some different filters and search.";
                    /*$('#workhistory_Placeholder').html(nodata2(msg, link));*/
                    $('#WorkHistoryBody_placeholder').html('<tr><td colspan="21">' + nodata2(msg, link) + '</td></tr>');
                    
                }
            });
    },
    LoadWorkHistory: function (obj, act) {
        var sr_no = 0, total_count = 0;
      
        if (obj != null) {
           
            if (obj[0].SeachResult.length > 0) {
                if (act == 'more') {
                    jQuery('#WorkHistoryBody_Template').tmpl(obj[0]).appendTo('#WorkHistoryBody_placeholder');
                }
                else {
                 
                    call_tmpl_binder(obj[0], '/Template/payroll_tmpl.html', '#WorkHistoryHead_Template', '#WorkHistoryHead_placeholder');
                    call_tmpl_binder(obj[0], '/Template/payroll_tmpl.html', '#WorkHistoryBody_Template', '#WorkHistoryBody_placeholder');
                }
            }
            else {
                var msg = "Sorry ! we could't find any data matching your criteria..";
                var link = "Try some different filters and search.";
                /* $('#WorkHistoryBody_placeholder').html(nodata2(msg, link));*/
                $('#WorkHistoryBody_placeholder').html('<tr><td colspan="21">' + nodata2(msg, link) + '</td></tr>');
            }

            $.each(obj[0].SeachResult, function (key, value) {
                total_count = value.TotalRecord;
                sr_no = value.RowNumber;
            });

            setTimeout(
                function () {
                    ns_payroll.FilterColumns(obj[0]);
                }, 500);

        }
        else {
            var msg = "Sorry ! we could't find any data matching your criteria..";
            var link = "Try some different filters and search.";
            $('#WorkHistoryBody_placeholder').html('<tr><td colspan="21">'+nodata2(msg, link)+'</td></tr>');
        }
       

        if (sr_no < total_count)
            $('#loadmoreWorkhistory').show();
        else
            $('#loadmoreWorkhistory').hide();
    },
    FilterColumns: function (obj) {
        var StrCol = '', Strfilter = '';
        StrCol += '<li class="header line-hgt12 lststl"><span class="col-grey">Customize Columns</span><br></li>';
        StrCol += '<li class="list-group-item"><div id="grpChkBox" class="custom-checkbox">';
        var StrColFooter = '<li class="list-group-item">' +
            '<div class="form-group mb-0">' +
            '<a class="btn btn-outline col-blue font-14 mr-1 btn-sm locationbtn BtnWizardSearch"><i class="fa fa-floppy-o">&nbsp;</i>Save Above Setting</a>' +
            '</div></li>' +
            '<li class="list-group-item"><b>Saved setting(s) list:-</b></li>' +
            '<li class="list-group-item">' +
            '<div class="custom-checkbox">' +
            '<p><label><input type="checkbox" name="inclta" />Show 5 columns</label></p>' +
            '<p><label><input type="checkbox" name="inclta" />Show 9 columns</label></p>' +
            '</div>' +
            '</li>';



        //Filter
        Strfilter += '<li class="header lststl">Customize Filter</li><li>';
        var StrfilterFooter = '<li class="list-group-item">' +
            '<div class="form-group mb-0">' +
            '<a class="btn btn-outline col-blue font-14 mr-1 btn-sm "><i class="fa fa-floppy-o">&nbsp;</i>Save Filter</a>' +
            '</div>' +
            '</li>' +
            '<li class="list-group-item"><b>Saved filter list:-</b></li>' +
            '<li class="list-group-item">' +
            '<div class="custom-checkbox">' +
            '<p><label>Filter-1</label></p>' +
            '<p><label>Filter-1</label></p>' +
            '</div>' +
            '</li>';

        $.each(obj.Filters, function (key, value) {
            var fieldname = value.ws_field_name;
            var filterfield = (value.ws_filter_field == null ? '' : value.ws_filter_field);
            var fieldlabel = value.ws_field_label;
            var fieldplaceholder = value.ws_place_holder;
            var fieldControlActivity = value.ws_control_activity;
            //Column Controler
            var chkChecked = value.ws_default == '1' ? 'checked="checked"' : '';

            StrCol += '<p><label><input type="checkbox" name="' + fieldname + '" ' + chkChecked + ' /> ' + fieldlabel + '</label></p>';
            //Filter 
            if (value.ws_filter_status == 1) {
                if (fieldname !== 'employer')
                    Strfilter += '<a id="lbl' + fieldname + '" data-filterfield="' + filterfield + '" data-fieldtype="' + value.ws_field_type + '"  data-fieldlabel="' + fieldlabel + '" data-fieldName="' + fieldname + '" data-fieldplaceholder="' + fieldplaceholder + '" data-fieldControlActivity="' + fieldControlActivity + '" href="javascript:void(0);" class="dropdown-toggle clsfilterbtn" data-toggle="dropdown" role="button">' + fieldlabel + '</a>';
            }
        });
        $('#ulcolumn').html(StrCol + '</div></li>' + StrColFooter);
        $('#ulGridFilter').html(Strfilter + '</li>' + StrfilterFooter);

        $(function () {
            var $chk = $("#grpChkBox input:checkbox");
            var $tbl = $("#WorkHistoryTable");
            $chk.prop('checked', true);
            $chk.click(function () {
                var colToHide = $tbl.find("." + $(this).attr("name"));
                $(colToHide).toggle();
            });
        });

        $(document).on("change", ".chkAllMsg", function () {
            $("#WorkHistoryBody_placeholder input:checkbox").prop('checked', $(this).prop("checked"));
        });
    },
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == 'No Records') {
            //$('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED').html('0');
        }
        else {
            if (obj.length == 1)
                flag = false;
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'BOOKED' || value.status == 'UNCOMPLETED' || value.status == 'COMPLETED' || value.status == 'NOTACCEPTED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
                if (value.status == 'OFFLINE' || value.status == 'LIVE' || value.status == 'APPLIED' || value.status == 'EXPIRED' || value.status == 'DELETED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }

    },

    // payroll
    getPayroll: function (act) {
        job_age = $('#txt_pay_date').val();
        if (job_age !== '') {
            job_age = job_age.split('-')[0].trim() + '-' + job_age.split('-')[1].trim();
        }      
     
        payrolltype = payrolltype == 'agency' ? 'temp' : payrolltype;
        $('#btnAReviewPayroll, #btnRefreshFinance, #btnDownloadPayroll').attr('data-type', payrolltype);
        var param = '{"action":"get_payroll","section":"payroll","type":"' + payrolltype + '","agency_id":"' + agency_id + '","cnd_id":"' + employee_id + '","job_age":"' + job_age + '","role_id":"' + emp_role_id + '","search_key":"' + emp_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param }

        if (act == 'more') {
            $('.loadmorepayroll').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        }
        else {
            $('#PayrollListBody_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        }
            ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);
                $('.loadmorepayroll').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');

                if (data.Status == 'OK') {
                    ns_payroll.LoadPayroll(data.Response, act);
                }
                else {
                    ShowAlertMessage("Message", data.Error, "center");  
                    $('#PayrollListBody_placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
                    $('.loadmorepayroll').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                }
            });
    },    

    // Download
    downlodPayroll: function (act) {
        job_age = $('#txt_pay_date').val();
        if (job_age !== '') {
            job_age = job_age.split('-')[0].trim() + '-' + job_age.split('-')[1].trim();
        }

        payrolltype = payrolltype == 'agency' ? 'temp' : payrolltype;
        $('#btnAReviewPayroll, #btnRefreshFinance, #btnDownloadPayroll').attr('data-type', payrolltype);
        var param = '{"action":"download_payroll","section":"payroll","type":"' + payrolltype + '","agency_id":"' + agency_id + '","cnd_id":"' + employee_id + '","job_age":"' + job_age + '","role_id":"' + emp_role_id + '","search_key":"' + emp_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
      
        var params = { json: param }
        $('#btnDownloadPayroll').html('Loading...<img src="/images/spin.gif" />');       
        ns_ajax.get(
            urls.payrollDownload,
            params,
            function (data) {
                $('#btnDownloadPayroll').html('<b> <i class="fa fa-download"></i> Download</b>');

                if (data.Status == 'OK') {
                    ShowAlertMessage("Message", 'Download successfully...', 'C');
                    window.location = data.Response.split('###')[1];
                   /* ns_Export.RemoveFile(response.split('###')[0]);*/

                    //RemoveFile: function (filename) {
                    //    var param = { filename: filename };
                    //    ns_ajax.get(
                    //        urls.exportApi,
                    //        param,
                    //        function (response) { });
                    //},

                }
                else {
                    ShowAlertMessage("Message", data.Error, "center");                   
                }
            });
    },

    LoadPayroll: function (obj, act) {
        var sr_no = 0, total_count = 0, total_net_pay = 0;
        if (obj != null) {
            if (obj[0].payroll_list.length > 0) {
                if (act == 'more') {
                    jQuery('#PayrollList_Template').tmpl(obj[0]).appendTo('#PayrollListBody_placeholder');
                }
                else {
                    call_tmpl_binder(obj[0], '/Template/payroll_tmpl.html', '#PayrollList_Template', '#PayrollListBody_placeholder');
                }

            }
            else {
                var msg = "Sorry ! we could't find any data matching your criteria..";
                var link = "";
                $('#PayrollListBody_placeholder').html(nodata2(msg, link));
            }
            $.each(obj[0].payroll_list, function (key, value) {
                total_net_pay = parseFloat(total_net_pay) + parseFloat(value.net_pay2);
                
                total_count = value.TotalRecord;
                sr_no = value.RowNumber;
            });

            $.each(obj[0].pay_period, function (key, value) {              
                $('#spanPaySchedule').html(value.pay_schedule);
                $('#spanPayperiod').html(value.pay_period);              
                $('#spanPayperiod').attr('pay_period_from', value.pay_period2.split('-')[0]);
                $('#spanPayperiod').attr('pay_period_to', value.pay_period2.split('-')[1]);
                /*$('#txt_pay_date').val(value.pay_date); */              
            });           
            

            setTimeout(
                function () {
                   // Write here
                }, 500);           
        }
        else {
            var msg = "Sorry ! we could't find any data matching your criteria..";
            var link = "";
            $('#PayrollListBody_placeholder').html(nodata2(msg, link));
        }

        $('#spanPayrollTotal').attr('data-amt', total_net_pay);
        $('#spanPayrollTotal').html(total_net_pay.toLocaleString());
       
        if (sr_no < total_count)
            $('#loadmorepayroll').show();
        else
            $('#loadmorepayroll').hide();
    },
    ReviewPayroll: function () {  
        var ids = '';
        var idsVall = [];
        $('.chkExcludeParoll').each(function () {
            if (this.checked == false)            
               idsVall.push(this.id.replace("switch-", ''));
        });
        ids = idsVall.join(',');

        job_age = $('#txt_pay_date').val();
        if (job_age !== '') {
            job_age = job_age.split('-')[0].trim() + '-' + job_age.split('-')[1].trim();
        }      

        payrolltype = payrolltype== "agency" ? 'temp' : payrolltype;
     
        var param = '{"action":"review_payroll","section":"payroll","type":"' + payrolltype + '","ids":"' + ids + '","agency_id":"' + agency_id + '","cnd_id":"' + employee_id + '","job_age":"' + job_age + '"}';
        var params = { json: param }
        $('#ReviewPayroll_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {              
                //data = jQuery.parseJSON(data);

                var total_net_pay = 0, total_gross_pay = 0, total_taxes_and_deductions=0;
                if (data.Status == 'OK') {
                    $.each(data.Response[0].payroll_list, function (key, value) {
                        total_net_pay = parseFloat(total_net_pay) + parseFloat(value.net_pay2);
                        total_gross_pay = parseFloat(total_gross_pay) + parseFloat(value.gross_pay2);
                        total_taxes_and_deductions = parseFloat(total_taxes_and_deductions) + parseFloat(value.taxes_and_deductions);

                    });
                    $.each(data.Response[0].pay_period, function (key, value) {
                        $('#spanPayScheduleReview').html(value.pay_schedule);
                        $('#spanjobAge').html(value.job_age+' days');
                        $('#spanPayperiodReview').html(value.pay_period);
                        $('#spanPayperiodReview').attr('pay_period_from', value.pay_period2.split('-')[0]);
                        $('#spanPayperiodReview').attr('pay_period_to', value.pay_period2.split('-')[1]);

                        $('#txt_pay_date_review').val(value.pay_date);
                    });
                    if (data.Response[0].payroll_list.length > 0) {
                        call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#ReviewPayroll_Template', '#ReviewPayroll_Placeholder');
                    }
                    else {
                        var msg = "Not Available";
                        var link = "";
                        $('#ReviewPayroll_Placeholder').html(nodata2(msg, link));
                    }
                }
                else {
                    ShowAlertMessage("Message", data.Error, "center");                   
                    var msg = "Not Available";
                    var link = "";
                    $('#ReviewPayroll_Placeholder').html(nodata2(msg, link));
                }

                $('#spanGrossPay').html((total_gross_pay.toFixed(2)).toLocaleString());
                $('#spanTaxesDeductionsTotal').html((total_taxes_and_deductions.toFixed(2)).toLocaleString());
                $('#spanPayrollReviewTotal').html(((total_net_pay).toFixed(2)).toLocaleString());
            });
    },   
    GetPayrollEditDetails: function (cnd_id) {       
        var param = '{"action":"get_payroll_edit_details","section":"payroll","cnd_id":"' + cnd_id + '"}';
        var params = { json: param }
        $('#bonus_deduction_Placeholder').html('');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);             
                if (data.Status == 'OK') {                    
                    call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#bonus_deduction_Template', '#bonus_deduction_Placeholder');
                }              
            });
    },
    PaySlip: function (cnd_id, grossPay) {
        var param = '{"action":"get_payroll_edit_details","section":"payroll","cnd_id":"' + cnd_id + '"}';
        var params = { json: param }
        $('#bonus_deduction_Placeholder').html('');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {                        
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#PaySlip_Template', '#PaySlip_Placeholder');
                }
              
            });
        
        setTimeout(function () {
            $('#span_payslip_gross_pay').html(parseFloat(grossPay).toFixed(2));
        }, 1000);
    },
    createPayroll: function () {     
        var idsVall = [], ids = '';
        $('.chkExcludeParoll').each(function () {
            if (this.checked==false) {
                idsVall.push(this.id.replace("switch-", ''));      
            }
        });
        ids = idsVall.join(',');
        var pay_schedule  = $('#spanPayScheduleReview').html().trim();
        var pay_period_from = $('#spanPayperiodReview').attr('pay_period_from').trim(); 
        var pay_period_to = $('#spanPayperiodReview').attr('pay_period_to').trim();  
        var pay_date = $('#txt_pay_date_review').val().trim();
        //if (pay_schedule == '') {
        //    ShowAlertMessage("Message", 'Required pay schedule', 'A');
        //    $('#spanPayScheduleReview').focus();
        //    return false;
        //}    
        //else 
        if (pay_period_from == '' || pay_period_to == '') {
            ShowAlertMessage("Message", 'Required pay period ', 'A');
            $('#spanPayperiodReview').focus();
            return false;
        }           
       else  if (pay_date == '') {
            ShowAlertMessage("Message", 'Required pay date', 'A');
            $('#txt_pay_date_review').focus();
            return false;
        }                 
        else {
            if (confirm("Are you sure want to proceed?")) {
                var obj = {};
                obj.action = 'create';
                obj.section = 'payroll';
                obj.type = payrolltype;
                obj.pay_schedule = pay_schedule;
                obj.pay_period_from = pay_period_from;
                obj.pay_period_to = pay_period_to
                obj.pay_date = pay_date;
                obj.ids = ids;
                var params = "[" + JSON.stringify(obj) + "]";           
                ns_ajax.post(
                    urls.payrollApi,
                    params,
                    function (data) {
                        //var data = jQuery.parseJSON(response);
                        if (data.Status == "OK") {
                            ShowAlertMessage("Message", data.Response, 'C');
                            $('#REVIEWPAYROLL').modal('hide');
                            $(".modal-backdrop").css('display', 'none');                         
                            ns_payroll.getPayroll('');
                        }
                        else
                            ShowAlertMessage("Message", data, 'A');
                    });
            }
            else return false;
        }         
    },  

    updatePayroll: function (cnd_id) {       
        var pay_schedule = $('#spanPaySchedule').html().trim();
        var pay_period_from = $('#spanPayperiod').attr('pay_period_from').trim();
        var pay_period_to = $('#spanPayperiod').attr('pay_period_to').trim();
        var pay_date = jQuery('#txt_pay_date').val().trim();
      
        if (pay_schedule == '') {
            ShowAlertMessage("Message", 'Required pay schedule', 'A');           
            return false;
        }
        else if (pay_period_from == '' || pay_period_to == '') {
            ShowAlertMessage("Message", 'Required pay period ', 'A');           
            return false;
        }
        else if (pay_date == '') {
            ShowAlertMessage("Message", 'Required pay date', 'A');           
            return false;
        }
        else {
            var objBonusDeduction = [];
            $('.cls_bonus_deduction *').filter(':input').each(function () {

                var amount = $(this).val();
                var bonus_deduction_id = $(this).attr('data-id');
                var type = $(this).attr('data-type');
                
                var obj1 = {};
                obj1.cnd_id = cnd_id;
                obj1.type = type;
                obj1.bonus_deduction_id = bonus_deduction_id;
                obj1.amount = amount;
                obj1.pay_schedule = pay_schedule;
                obj1.pay_period_from = pay_period_from;
                obj1.pay_period_to = pay_period_to
                obj1.pay_date = pay_date;
                objBonusDeduction.push(obj1);
                
            });
            if (confirm("Are you sure want to proceed?")) {        
                var obj = {};
                obj.action = 'update_payroll';
                obj.section = 'payroll'; 
                obj.cnd_id = cnd_id;
                obj.bonus_deduction = objBonusDeduction;                
                var params = "[" + JSON.stringify(obj) + "]";       
                
                ns_ajax.post(
                    urls.payrollApi,
                    params,
                    function (data) {
                     
                         //data = jQuery.parseJSON(data);
                        if (data.Status == "OK") {
                            ShowAlertMessage("Message", data.Response, 'C');
                            $('#editPAYROLL').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_payroll.getPayroll('');
                        }
                        else
                            ShowAlertMessage("Message", data, 'A');
                    });
            }
            else return false;
        }
    },      

    getPayrollHisoty: function (cndid, is_overtime) {
        var param = '{"action":"shiftdetails","section":"payroll","type":"perm","cnd_id":"' + cndid + '","is_overtime":"' + is_overtime+'","search_key":"' + emp_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
     
        var params = { json: param }     
        $('#CndPayrollHistoryBody_placeholder').html('<tr><td colspan="10"><div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td></tr>');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {   
                var pay_cnd = 0, total_cost = 0, adminFeeTax=0;
                //data = jQuery.parseJSON(data);           
                if (data.Status == 'OK') {                    
                    call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#CndPayrollHistoryHead_Template', '#CndPayrollHistoryHead_placeholder');
                    call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#CndPayrollHistoryBody_Template', '#CndPayrollHistoryBody_placeholder');

                    $.each(data.Response[0].SeachResult, function (key, value) {                    
                        if (value.payroll_status == 0) {
                            adminFeeTax = parseFloat(adminFeeTax) + parseFloat(value.job_admin_fees) + parseFloat(value.vat_amount);
                            pay_cnd = parseFloat(pay_cnd) + parseFloat(value.total_cost);
                            total_cost = parseFloat(total_cost) + parseFloat(value.total_cost);
                        }
                    });

                    pay_cnd = parseFloat(pay_cnd) - parseFloat(adminFeeTax);
                     
                }
                else
                    $('#CndPayrollHistoryBody_placeholder').html('<tr><td colspan="10"><div style="padding:10px;text-align:center">Not Available</div></td></tr>');

                $('#spanPayrollShiftTotalPayWithoutAdminFeeTax').html(pay_cnd.toFixed(2));
                $('#spanPayrollShiftTotalCost').html(total_cost.toFixed(2));
                
            });
    },

    ExcludePayrollShift: function (action) {
       var cnd_id= $('.btn_exclude_jobs').attr('data-cnd-id');
        var idsVall = [], ids = '';     
        $('.chkshift:checked').each(function () {
            idsVall.push(this.id.replace("chkshift", ''));
        });
        job_Ids = idsVall.join(',');
        ids = idsVall.join(',');      
        if (ids == '') {
            ShowAlertMessage("Message", 'Please select shift', 'A');           
            return false;
        }      
        else {
            if (confirm("Are you sure want to proceed?")) {
                var obj = {};
                obj.action = action;
                obj.section = 'payroll';              
                obj.ids = ids;
                obj.cnd_id = cnd_id;
                var params = "[" + JSON.stringify(obj) + "]";   
               
                ns_ajax.post(
                    urls.payrollApi,
                    params,
                    function (response) {
                        var data = jQuery.parseJSON(response);
                        if (data.Status == "OK") {
                            ShowAlertMessage("Message", data.Response, 'C');
                            var total_cost = 0;
                            jQuery('.chkshift:checked').each(function () {
                                var id = this.id.replace("chkshift", '');
                                total_cost = total_cost + parseFloat($('#chkshift' + id).attr('data-total-cost'));
                                if (action=='exclude')
                                    jQuery('#tr-' + id).addClass('opacity');
                                if (action == 'include')
                                    jQuery('#tr-' + id).removeClass('opacity');

                                jQuery('#chkshift' + id).prop('checked', false);
                            });
                            if (action == 'exclude')
                                total_cost=(parseFloat($('#spanPayrollShiftTotalCost').html()) - total_cost);
                            if (action == 'include')
                                total_cost = (parseFloat($('#spanPayrollShiftTotalCost').html()) + total_cost);
                         
                            $('#spanPayrollShiftTotalCost').html(total_cost.toFixed(2));
                            ns_payroll.getPayroll('');
                        }
                        else {                             
                           
                            ShowAlertMessage("Message", response, 'A');
                        }
                    });
            }
            else return false;
        }
    },

    getPaymentsHisoty: function (action) {
        var sr_no = 0, total_count = 0;
        var type = $('#ddl_PayForPayrollHistory').val();
        var pay_schedule = '';// $('#ddl_PaySchedulePayrollHistory').val();
        var Ref_search = $('#txt_reference_payrollHistory').val().trim();
        var param = '{"action":"payment_history","section":"payroll","type":"' + type + '","pay_schedule":"' + pay_schedule + '","search_key":"' + Ref_search + '","offset":"' + page_number + '","next":"' + page_size + '"}';
    
        var params = { json: param }

        if (action == 'more') {         
            $('.loadmorePaymentsHistory').show();
            $('.loadmorePaymentsHistory').html('<td colspan="7"><div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td>');
        }
        else
            $('#PaymentsHistory_Placeholder').html('<td colspan="7"><div style="padding:10px; padding-top:100px;text-align:center">Loading...<img src="/images/spin.gif" /></div></td>');

        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);
                $('.loadmorePaymentsHistory').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (data.Response[0].payment_history.length > 0) {
                        if (action == 'more')
                            $('#PaymentsHistory_Template').tmpl(data.Response[0].payment_history).appendTo('#PaymentsHistory_Placeholder');
                        else
                            call_tmpl_binder(data.Response[0].payment_history, '/Template/payroll_tmpl.html', '#PaymentsHistory_Template', '#PaymentsHistory_Placeholder');
                    }
                    else {
                        var msg = "Sorry ! we could't find any data matching your criteria..";
                        var link = "";
                        $('#PaymentsHistory_Placeholder').html('<td colspan="7">' + nodata2(msg, link) + '</td>');
                    }
                    $.each(data.Response[0].payment_history, function (key, value) {
                        total_count = value.TotalRecord;
                        sr_no = value.RowNumber;
                    });

                }
                else {
                    var msg = "Sorry ! we could't find any data matching your criteria..";
                    var link = "";
                    $('#PaymentsHistory_Placeholder').html('<td colspan="7">'+nodata2(msg, link)+'</td>');
                }
                   

            
                if (sr_no < total_count)
                    $('#loadmorePaymentsHistory').show();
                else
                    $('#loadmorePaymentsHistory').hide();
            });


    },

    getPaymentsHisotyDetails: function (group_id) {
        var param = '{"action":"payment_history_details","section":"payroll","group_id":"' + group_id + '"}';
        
        var params = { json: param }
        $('#PaymentsHisotyDetails_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {             
                //data = jQuery.parseJSON(data);
                var total_net_pay = 0, total_gross_pay = 0, total_taxes_and_deductions = 0;
                if (data.Status == 'OK') {
                    $.each(data.Response[0].payroll_details, function (key, value) {
                        total_net_pay = parseFloat(total_net_pay) + parseFloat(value.net_pay2);
                        total_gross_pay = parseFloat(total_gross_pay) + parseFloat(value.gross_pay2);
                        total_taxes_and_deductions = parseFloat(total_taxes_and_deductions) + parseFloat(value.taxes);

                    });              
                    call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#ReviewPayrollDetails_Template', '#PaymentsHisotyDetails_Placeholder');
                }
                else {
                    ShowAlertMessage("Message", data.Error, "center");
                    $('#PaymentsHisotyDetails_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
                }

                $('#spanGrossPayPaymentDetails').html((total_gross_pay.toFixed(2)).toLocaleString());
                $('#spanTaxesDeductionsTotalPaymentDetails').html((total_taxes_and_deductions.toFixed(2)).toLocaleString());
                $('#spanPayrollReviewTotalPaymentDetails').html(((total_net_pay).toFixed(2)).toLocaleString());
            });
    },

    PayrollRemittanceView: function (group_id) {
        $('#PayrollRemittance_Placeholder').html('<div style="height:450px; padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"get_rementtance","section":"payroll","group_id":"' + group_id + '"}';
        var params = { json: param }     
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0].remittance_details[0], '/Template/payroll_tmpl.html', '#PayrollRemittance_Template', '#PayrollRemittance_Placeholder');
                }
                else {
                    var msg = "Sorry ! we could't find any data";
                    var link = "";
                    $('#PayrollRemittance_Placeholder').html(nodata2(msg, link));
                }
            });
    },

    SendRemittanceView: function (group_id) {

        var to = $('#txtto').val();
        var cc = $('#txtto').val();
        var comments = $('#txt_payroleComments').val();
        if (to == '') {
            ShowAlertMessage("Message", 'Enter email id', "A");
            $('#txtto').focus();
            return false;
        }
        var msg_body = $('#PayrollRemittance_Placeholder').html();
        msg_body = '<div>'+comments + '<div><br/>' + msg_body;

     /*   msg_body = '<div style="border:1px solid #ccc; margin:50px">' + msg_body + '</div>';*/
        var obj_send = {};      
        obj_send.to = to;
        obj_send.cc = cc;
        obj_send.subject = 'REMITTANCE ADVICE';
        obj_send.bodymsg = msg_body;    
        var params = "[" + JSON.stringify(obj_send) + "]";
       
        $('#btnsend_remittance').html('Loading...<img src="/images/spin.gif" />');
        ns_ajax.post(
            urls.messageApi + 'custommessage',
            params,
            function (response) {
                $('#btnsend_remittance').html('<i class="fa fa-envelope"></i> Send');
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", 'Message has been sent successfully', "S");
                    $('#tr_to, #tr_bcc, #tr_payroleComments, #btnsend_remittanceBack').hide('slow');
                    $('.downloadnowRemittance').show('slow');
                    $('#btnsend_remittance').attr('data-action', 'send_remittance_preview');
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },   
  
    //Payroll Master
    getBonusAllowenceMasterList: function (type,cnd_id) {
        type = '';
        var param = '{"action":"allowencess_master","section":"payroll_setting","type":"' + type + '","cnd_id":"' + cnd_id+'"}';
        var params = { json: param }
        $('#MasterList_payroll_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        ns_ajax.get(
            urls.payrollApi,
            params,
            function (data) {              
                //data = jQuery.parseJSON(data);                 
                if (data.Status == 'OK') {
                    if (data.Response[0].allowencess_master_list.length > 0) {                       
                        call_tmpl_binder(data.Response[0], '/Template/payroll_tmpl.html', '#MasterList_payroll_Template', '#MasterList_payroll_Placeholder');
                    }
                    else
                        $('#MasterList_payroll_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
                }
                else {
                    ShowAlertMessage("Message", data.Error, "center");
                    $('#MasterList_payroll_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
                }          
            });
    },    
    SaveAllowencessMaster: function () {
        var id = $('#btnsave_allowencess_master').attr('data-id');        
        var type = $('#txt_type_payrollhead').val().trim();
        var icon = $('#txt_icons_payrollhead').val().trim();
        var description = $('#txt_desc_payrollhead').val().trim();
        var status = $('#chkpayrollheadStatus').prop('checked')?'1':'0';
        if (type == '') {
            ShowAlertMessage("Message", 'Required type', 'A');
            $('#txt_type_payrollhead').focus();
            return false;
        }
        else if (icon == '') {
            ShowAlertMessage("Message", 'Required font awesome icon ', 'A');
            $('#txt_icons_payrollhead').focus();
            return false;
        }
        //else if (pay_date == '') {
        //    ShowAlertMessage("Message", 'Required pay date', 'A');
        //    $('#txt_pay_date_review').focus();
        //    return false;
        //}
        else {

            if (confirm("Are you sure want to proceed?")) {
                var obj = {};
                obj.action = 'save_allowencess_master';
                obj.section = 'payroll_setting';
                obj.type = type;
                obj.icon = icon;
                obj.description = description;
                obj.status = status
                obj.id = id;              
                var params = "[" + JSON.stringify(obj) + "]";
                ns_ajax.post(
                    urls.payrollApi,
                    params,
                    function (response) {
                        //var data = jQuery.parseJSON(response);
                        if (data.Status == "OK") {
                            ShowAlertMessage("Message", data.Response, 'C');
                            $('#MasterlistModal').modal('hide');
                            $(".modal-backdrop").css('display', 'none');
                            ns_payroll.getBonusAllowenceMasterList('','0');
                        }
                        else
                            ShowAlertMessage("Message", response, 'A');
                    });
            }
            else return false;
        }
    },  
    SaveCndAllowencessHeads: function (cnd_id) {
        var ids = '';
        var idsVall = [];
        $('.clsAllowenceHead').each(function () {
            if (this.checked)
                idsVall.push(this.id.replace("name-", ''));
        });
        ids = idsVall.join(',');
       
        if (ids == '') {
            ShowAlertMessage("Message", 'Select bonus or deductions heads', 'A');        
            return false;
        }     
        else {

            //if (confirm("Are you sure want to proceed?")) {
                var obj = {};
                obj.action = 'cnd_bonus_deduction_heads';
                obj.section = 'payroll_setting';     
                obj.cnd_id = cnd_id;
                obj.ids = ids;
                var params = "[" + JSON.stringify(obj) + "]";
                ns_ajax.post(
                    urls.payrollApi,
                    params,
                    function (data) {
                        //var data = jQuery.parseJSON(response);
                        if (data.Status == "OK") {
                            ShowAlertMessage("Message", data.Response, 'C');
                            $('#MasterlistModal').modal('hide');
                            $(".modal-backdrop").css('display', 'none');    
                            ns_payroll.GetPayrollEditDetails(cnd_id);
                        }
                        else
                            ShowAlertMessage("Message", data.Message, 'A');
                    });
            //}
            //else return false;
        }
    },      
}


/*************************************************
*      Message Center
* **********************************************/
$(document).ready(function () {  
   
    $(document).on('click', ".cls-message-center", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'get-list') {
            var block = $(this).attr('data-block');

            if (block == 'config')
                ns_message_center.getConfigCategories(0);
            else if (block == 'autotrigger') {
                ns_message_center.getConfigCategories(1);
            }
            else if (block == 'templates')
                ns_message_center.getTemplates();
            else if (block == 'actions')
                ns_message_center.getActions();
            else if (block == 'categories')
                ns_message_center.getCategory();
        }
        //Configuration
        if (action == 'get-action') {
            var cat_id = $(this).attr('id').split('-')[1];
            $('#spanmsgCategoryName').html($(this).attr('data-name'));
            $('#spanmsgCategoryDesc').html($(this).attr('data-desc'));
            $('#btnSaveMsgConfig').attr('data-cat_id', cat_id);
            ns_message_center.getConfig(cat_id);
        }
        if (action == 'get-trigger-action') {
            var cat_id = $(this).attr('id').split('-')[1];
            $('#spanmsgCategoryNameTrigger').html($(this).attr('data-name'));
            $('#spanmsgCategoryDescTrigger').html($(this).attr('data-desc'));
            $('#btnSaveMsgConfigTrigger').attr('data-cat_id', cat_id);
            ns_message_center.getTriggerSetting(cat_id);
        }

        if (action == 'save-msg-config') {
            var cat_id = $(this).attr('data-cat_id');
            var configJson = [];
            $('#MessageConfig_Placeholder li').each(function () {
                var action_id = $(this).attr('id').split('-')[1];
                var MsgJsonData = [];
                $('.config-sec-' + action_id).each(function () {
                    var group = $(this).attr('data-profile_group');

                    var send_to_userid = '0';
                    if (group == 'emp')
                        send_to_userid = $('#ddl' + action_id + 'msgGroup' + group).val();

                    var msg_id = $('#ddl' + action_id + 'msgTemplate' + group).val();
                    var email = $('#chk' + action_id + 'email' + group).prop('checked') ? 1 : 0;
                    var sms = $('#chk' + action_id + 'sms' + group).prop('checked') ? 1 : 0;
                    var notify = $('#chk' + action_id + 'notify' + group).prop('checked') ? 1 : 0;
                    var inbox = $('#chk' + action_id + 'inbox' + group).prop('checked') ? 1 : 0;

                    var obj = {};
                    obj.profile_group = group;
                    obj.send_to_userid = send_to_userid;
                    obj.msg_id = msg_id;
                    obj.EMAIL = email;
                    obj.SMS = sms;
                    obj.NOTIFY = notify;
                    obj.INBOX = inbox;
                    MsgJsonData.push(obj);
                });
                var Msg_configJson = JSON.stringify(MsgJsonData);

                var obj2 = {};
                obj2.action_id = action_id;
                obj2.configJson = MsgJsonData;
                configJson.push(obj2);
            });

            var obj = {};
            obj.section = 'msgconfig';
            obj.action = 'savemsgconfig';
            obj.configJson = configJson;
            var params = "[" + JSON.stringify(obj) + "]";

            ns_message_center.post(params, evt);
        }

        if (action == 'save-msg-trigger') {
            var cat_id = $(this).attr('data-cat_id');
            var configJson = [];
            $('#TriggerSetting_Placeholder .cls-trigger-events tr').each(function () {
                var action_id = $(this).attr('id').split('-')[1];
                var frequency = $('#ddlFrequency' + action_id).val();
                var duration = $('#txt_FrequencyDuration' + action_id).val();
                var time = $('#txt_triggerTime' + action_id).val();
                var msg_id = $('#ddlTriggerMsgTemplate' + action_id).val();
                var email = $('#chk' + action_id + 'email').prop('checked') ? 1 : 0;
                var sms = $('#chk' + action_id + 'sms').prop('checked') ? 1 : 0;
                var notify = $('#chk' + action_id + 'notify').prop('checked') ? 1 : 0;

                var obj = {};
                obj.frequency = frequency;
                obj.duration = duration;
                obj.time = time;
                obj.msg_id = msg_id;
                obj.EMAIL = email;
                obj.SMS = sms;
                obj.NOTIFY = notify;

                MsgJsonData = [],
                    MsgJsonData.push(obj);

                var obj2 = {};
                obj2.action_id = action_id;
                obj2.configJson = MsgJsonData;
                configJson.push(obj2);
            });

            var obj = {};
            obj.section = 'msgconfig';
            obj.action = 'savemsgtrigger';
            obj.triggerJson = configJson;
            var params = "[" + JSON.stringify(obj) + "]";

            ns_message_center.post(params, evt);
        }
        
        if (action == 'execute-trigger') {
            var action_id = $(this).attr('data-id');           
            var obj = {};
            obj.section = 'msgconfig';
            obj.action = 'executetrigger';
            obj.action_id = action_id;
            var params = "[" + JSON.stringify(obj) + "]";
         
            ns_message_center.post(params, evt);
        }
        //Templates
        if (action == 'get-templates') {
            var msgtype = $(this).attr('data-block');  
            ns_message_center.getTemplates();
        }
        if (action == 'template_refresh') {    
            $('#ddlmsgtype_search').val('');
            $('#ddlmsgCategories').val('0');
            $('#txttemplateSearch').val('');
            ns_message_center.getTemplates();
        }
        if (action == 'template_search') {         
            ns_message_center.getTemplates();
        }
        
        if (action == 'addtemplate') {
            $('#txt_msg_template_name').val('');
            $('#ddl_msg_type').val('');
            $('#ddlProfileGroup').val('');
            $('#ddlMsgCat').val(0);
            $('#txt_msg_subject').val('');
            $('#emailtemplateBody').val('');/* $('#emailtemplateBody').Editor("getText");*/
            $('#pemailPrev').html('');
            $('#txt_msg_sms').val('');
            $('#pSMSPrev').html('');
            $('#txt_msg_notification').val('');
            $('#pNotificationPrev').html('');

            $('#chkMsgTemplateStatus').prop('checked', true);
            
            $('#chk_emailnotify').prop('checked',false);
            //$('#chk_internal').prop('checked',false);
            //$('#chk_admin').prop('checked',false);
            $('#chk_custom').prop('checked', false);
            $('.divemail').hide();
            $('#divRecipient').hide();    

            $('#btnMsgTemplate').attr('data-id', 0);
            $('#btnMsgTemplate').html('Save');
            $('#btnMsgTemplate').show();
            $('#modalAddUpdateMsgTemplate').modal('show');
        }
        if (action == 'edittemplate') {
            var data = jQuery.parseJSON($(this).attr('data-json'));
            var obj = data[0];
            var msg_id =obj.msg_id;       
          
            $('#txt_msg_template_name').val(obj.temp_name);
            $('#ddl_msg_type').val(obj.msg_type);
            $('#ddlProfileGroup').val(obj.profile_group);
            $('#ddlMsgCat').val(obj.msg_cat_id);
            $('#txt_msg_subject').val(obj.email_subject);
            $('.Editor-editor').html(obj.email_body);
            $('#pemailPrev').html(obj.email_body);
            $('#txt_msg_sms').val(obj.sms_body);
            $('#pSMSPrev').html(obj.sms_body);                
            $('#txt_msg_notification').val(obj.notification_body);
            $('#pNotificationPrev').html(obj.notification_body);

            
            $('#chkMsgTemplateStatus').prop('checked', obj.status == '1' ? true : false);

            $('#chk_emailnotify').prop('checked', obj.notification_status == '1' ? true : false);
            //$('#chk_internal').prop('checked', obj.internal_recipient_status == '1' ? true : false);
            //$('#chk_admin').prop('checked', obj.admin_email_sms_status == '1' ? true : false);
            $('#chk_custom').prop('checked', obj.custom_message_status == '1' ? true : false);

            $('#btnMsgTemplate').attr('data-id', msg_id);
            $('#btnMsgTemplate').html('Update');
            if ($(this).attr('data-req') == 'edit') 
                $('#btnMsgTemplate').show();
            else
                $('#btnMsgTemplate').hide();

            $('#modalAddUpdateMsgTemplate').modal('show');


            $('#txt_custom_recipient').val(obj.custom_email_mobile);
            if (obj.notification_status == '1') {
                $('.divemail').show('slow');
            }
            else {
                $('#txt_custom_recipient').val('');              
                $('.divemail').hide();
                $('#divRecipient').hide();  
            }

            if (obj.custom_message_status == '1')
                $('#divRecipient').show();
            else {
                $('#divRecipient').hide();
            }           
        }
        if (action == 'savetemplate') {
            var msg_id = $(this).attr('data-id');      
            var name = $('#txt_msg_template_name').val();
            var msg_type = $('#ddl_msg_type option:selected').val();
            var profile_group = $('#ddlProfileGroup option:selected').val(); 
            var cat_id = $('#ddlMsgCat option:selected').val(); 
            var subject = $('#txt_msg_subject').val();
            var email_body = $('#emailtemplateBody').Editor("getText"); 
            var sms_body = $('#txt_msg_sms').val();
            var notification_body = $('#txt_msg_notification').val();         
            var status = $('#chkMsgTemplateStatus').prop('checked') ? 1 : 0; 

            var emailnotify_status = $('#chk_emailnotify').prop('checked') ? 1 : 0;
            var internal_status = 0;// $('#chk_internal').prop('checked') ? 1 : 0;
            var admin_status = 0;// $('#chk_admin').prop('checked') ? 1 : 0;
            var custom_status = $('#chk_custom').prop('checked') ? 1 : 0;
            var custom_recipient_email = $('#txt_custom_recipient').val();
          
            if (name == '') {
                ShowAlertMessage("Required", 'Enter template name', "A");
                $('#txt_msg_template_name').focus();
                return false;
            }
            else if (msg_type == '') {
                ShowAlertMessage("Required", 'select type', "A");
                $('#ddl_msg_type').focus();
                return false;
            }
            else if (profile_group == '') {
                ShowAlertMessage("Required", 'Select a profile group', "A");
                $('#ddlProfileGroup').focus();
                return false;
            }
            else if (cat_id == '0') {
                ShowAlertMessage("Required", 'Select a message category', "A");
                $('#ddlMsgCat').focus();
                return false;
            }
            else if (subject == '') {
                ShowAlertMessage("Required", 'Enter subject', "A");
                $('#txt_msg_subject').focus();
                return false;
            }
            else if (email_body.trim() == '') {
                ShowAlertMessage("Required", 'Enter email body', "A");
                $('#emailtemplateBody').focus();
                return false;
            }
            else {     
                var obj = {};
                obj.section = 'msgconfig';
                obj.action = action;
                obj.msg_id = msg_id;
                obj.temp_name = name;
                obj.msg_type = msg_type;
                obj.profile_group = profile_group;
                obj.msg_cat_id = cat_id;
                obj.email_subject = subject;
                obj.email_body = email_body;
                obj.sms_body = sms_body;
                obj.notification_body = notification_body;
                obj.status = status;
                obj.default_status = 0;
                obj.notification_status = emailnotify_status;
                obj.internal_recipient_status = internal_status;
                obj.admin_email_sms_status = admin_status;
                obj.custom_message_status = custom_status;
                obj.custom_email_mobile = custom_recipient_email;
                var params = "[" + JSON.stringify(obj) + "]";
                ns_message_center.post(params, evt);
            }
        }  
      
        //Category
        if (action == 'addcategory') {
            $('#txtMsgCat').val('');
            $('#txtMsgCatDesc').val('');
            $('#chkMsgCatStatus').prop('checked', true);
            $('#chkMsgTrigger_status').prop('checked', false);
            $('#txtMsgTrigger_cat_name').val('');
            $('#chkMsgCnd_pref_status').prop('checked', false); 
            $('#txtMsgCnd_pref_cat_name').val('');

            $('#divTriggerCat').hide('slow');       
            $('#divCnd_prefCat').hide('slow');

            $('#btnMessageCategory').attr('data-id','0');
            $('#btnMessageCategory').html('Save');          
        }
        if (action == 'editcategory') {
            $('#txtMsgCat').val($(this).attr('data-name'));
            $('#txtMsgCatDesc').val($(this).attr('data-desc'));            
            $('#chkMsgCatStatus').prop('checked', $(this).attr('data-status')=='1'?true:false);
            $('#btnMessageCategory').attr('data-id', $(this).attr('data-id'));

            $('#chkMsgTrigger_status').prop('checked', $(this).attr('data-trigger_status') == '1' ? true : false);
            $('#txtMsgTrigger_cat_name').val($(this).attr('data-trigger_cat_name'));
            $('#chkMsgCnd_pref_status').prop('checked', $(this).attr('data-cnd_pref_status') == '1' ? true : false);
            $('#txtMsgCnd_pref_cat_name').val($(this).attr('data-cnd_pref_cat_name'));

            if ($(this).attr('data-trigger_status')=='1')
                $('#divTriggerCat').show('slow');
            else
                $('#divTriggerCat').hide('slow');      

   
            if ($(this).attr('data-cnd_pref_status') == '1')
            $('#divCnd_prefCat').show('slow');
             else
            $('#divCnd_prefCat').hide('slow');



            $('#btnMessageCategory').html('Update');
            $('#ModalMessageCategory').modal('show');
        }
        if (action == 'savecategory') {
            var cat_id = $(this).attr('data-id');      
            var cat=$('#txtMsgCat').val();
            var desc = $('#txtMsgCatDesc').val();
         
            var triggerstatus = $('#chkMsgTrigger_status').prop('checked')? 1 : 0
           
            var trigger_cat_name = $('#txtMsgTrigger_cat_name').val();
            var cnd_prefstatus = ($('#chkMsgCnd_pref_status').prop('checked')? 1 : 0);
            var cnd_pref_cat_name = $('#txtMsgCnd_pref_cat_name').val();           
   
            var status = $('#chkMsgCatStatus').prop('checked') ? 1 : 0;

            if ($('#txtMsgCat').val().trim() == '') {
                ShowAlertMessage("Required", 'Enter category name', "A");
                $('#txtMsgCat').focus();
                return false;
            }
            if (triggerstatus==1 && $('#txtMsgTrigger_cat_name').val().trim() == '') {
                ShowAlertMessage("Required", 'Enter Trigger category name', "A");
                $('#txtMsgTrigger_cat_name').focus();
                return false;
            }

            if (cnd_prefstatus == 1 && $('#txtMsgCnd_pref_cat_name').val().trim() == '') {
                ShowAlertMessage("Required", 'Enter candidate preference category name', "A");
                $('#txtMsgCnd_pref_cat_name').focus();
                return false;
            }
          
            var obj = {};
            obj.section = 'msgconfig';
            obj.action = action;
            obj.name = cat;
            obj.description = desc;
            obj.status = status;
            obj.cat_id = cat_id;
            obj.trigger_status = triggerstatus;
            obj.trigger_cat_name = trigger_cat_name;
            obj.cnd_pref_status = cnd_prefstatus;
            obj.cnd_pref_cat_name = cnd_pref_cat_name;
            var params = "[" + JSON.stringify(obj) + "]";          
            ns_message_center.post(params, evt);
        }

        //Actions
        if (action == 'addaction') {
            $('#txtMsgAction').val('');
            $('#txtMsgActionKeyword').val('');
            $('#txtMsgActionKeyword').attr('disabled', false);
            $('#chkMsgActionTrigger_status').attr('disabled', false);
            $('#chkMsgActionCnd_pref_status').attr('disabled', false);
            $('#chkMsgActionMsg_config_status').attr('disabled', false);
            $('#ddl_msg_category').val(0);

            $('#txtMsgActionDesc').val('');

            $('#chkMsgActionStatus').prop('checked', true);
            $('#btnMessageAction').attr('data-id', '0');
            $('#btnMessageAction').html('Save');
        }
        if (action == 'editaction') {          
            $('#txtMsgAction').val($(this).attr('data-name'));
            $('#txtMsgActionKeyword').val($(this).attr('data-keyword'));
            $('#txtMsgActionKeyword').attr('disabled',true);
            $('#ddl_msg_category').val($(this).attr('data-cat_id'));
            $('#txtMsgActionDesc').val($(this).attr('data-desc'));
            $('#chkMsgActionStatus').prop('checked', $(this).attr('data-status') == '1' ? true : false);
            $('#chkMsgActionTrigger_status').prop('checked', $(this).attr('data-trigger_status') == '1' ? true : false);         
            $('#chkMsgActionCnd_pref_status').prop('checked', $(this).attr('data-cnd_pref_status') == '1' ? true : false);
            $('#chkMsgActionMsg_config_status').prop('checked', $(this).attr('data-msg_config_status') == '1' ? true : false);
            
            $('#btnMessageAction').attr('data-id', $(this).attr('data-id'));
            $('#btnMessageAction').html('Update');
            $('#ModalMessageActions').modal('show');
        }
        if (action == 'saveaction') {
            var action_id = $(this).attr('data-id');      
            var name = $('#txtMsgAction').val().trim();
            var keyword = $('#txtMsgActionKeyword').val().trim();
            var cat_id = $('#ddl_msg_category').val();
            var desc = $('#txtMsgActionDesc').val().trim();
            var status = $('#chkMsgActionStatus').prop('checked') ? 1 : 0;
            var trigger_status = $('#chkMsgActionTrigger_status').prop('checked') ? 1 : 0;
            var cnd_pref_status = $('#chkMsgActionCnd_pref_status').prop('checked') ? 1 : 0;
            var msg_config_status = $('#chkMsgActionMsg_config_status').prop('checked') ? 1 : 0;
            if (name == '') {
                ShowAlertMessage("Required", 'Enter action name', "A");
                $('#txtMsgAction').focus();
                return false;
            }
            else if (keyword == '') {
                ShowAlertMessage("Required", 'Enter action keyword', "A");
                $('#txtMsgActionKeyword').focus();
                return false;
            }
            else if (cat_id == '0') {
                ShowAlertMessage("Required", 'Select a category', "A");
                $('#ddl_msg_category').focus();
                return false;
            }

            var obj = {};
            obj.section = 'msgconfig';
            obj.action = action;
            obj.action_id = action_id;
            obj.name = name;
            obj.action_key = keyword;
            obj.description = desc;
            obj.status = status;
            obj.trigger_status = trigger_status;        
            obj.cnd_pref_status = cnd_pref_status;
            obj.msg_config_status = msg_config_status;
            obj.cat_id = cat_id;
            var params = "[" + JSON.stringify(obj) + "]";
            ns_message_center.post(params, evt);
        }      
    });
    $(document).on('change', ".cls-message-center-check", function () {
        var action = $(this).attr('data-action');        
        if (action == 'mail-notification') {
            if ($(this).prop('checked'))
                $('.divemail').show('slow');
            else {
                $('#txt_custom_recipient').val('');
                //$('#chk_internal, #chk_admin, #chk_custom').prop('checked', false);
                $('#chk_custom').prop('checked', false);
                $('.divemail').hide('slow');
                $('#divRecipient').hide('slow');       
            }
        }
        if (action == 'CustomEmail') {
            if ($(this).prop('checked'))
                $('#divRecipient').show('slow');
            else
                $('#divRecipient').hide('slow');           
        }

    });   

    $(document).on('click', '#btnCreateNewEmailtempKwds', function () {
        $('#divEmailtemplateKeywords').hide('slow');
        $('#txtEmailtemplateKeywords').show('slow').focus();
        $('#btnCancelEmailtempKwds').show('slow');
        $(this).html('Save').attr('id', 'btnSaveEmailTempKeywords');
    });
    $(document).on('click', '#btnCancelEmailtempKwds', function () {
        $(this).hide();
        $('#txtEmailtemplateKeywords').hide('slow').val('');
        $('#divEmailtemplateKeywords').show('slow');
        $('#btnSaveEmailTempKeywords').html('Add New Keywords').attr('id', 'btnCreateNewEmailtempKwds');
    });
    $(document).on('click', '#btnSaveEmailTempKeywords', function () {
        ns_Templates.addTemplateKeywords();
    });
    $(document).on('input change', ".Editor-editor", function () {
        $('#pemailPrev').html($(this).html());
    });
    $(document).on('input change', "#txt_msg_sms", function () {
        $('#pSMSPrev').html($(this).val());
    });
    $(document).on('input change', "#txt_msg_notification", function () {
        $('#pNotificationPrev').html($(this).val());
    });  

    $(document).on('change', "#ddlmsgtype_search", function () {
        ns_message_center.getTemplates();         
    });
    $(document).on('change', "#ddlmsgCategories", function () {
        ns_message_center.getTemplates();      
    });

    $(document).on('input change', "#txtMsgCat", function () {
        var cat = $(this).val().trim();
        var trigger=$('#txtMsgTrigger_cat_name').val().trim();
        var cndPref = $('#txtMsgCnd_pref_cat_name').val().trim();
    
       /* if (trigger == '' || trigger == cat)*/
            $('#txtMsgTrigger_cat_name').val(cat);

        /*if (cndPref == '' || cndPref == cat)*/
            $('#txtMsgCnd_pref_cat_name').val(cat);
    });

    $(document).on('change', "#chkMsgTrigger_status", function () {
        if ($(this).prop('checked'))
            $('#divTriggerCat').show('slow');
        else
            $('#divTriggerCat').hide('slow');
    });

    $(document).on('change', "#chkMsgCnd_pref_status", function () {
        if ($(this).prop('checked'))
            $('#divCnd_prefCat').show('slow');
        else
            $('#divCnd_prefCat').hide('slow');
    });

    $(document).on('click', ".cls-notifications-setting", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'save-msg-config-emp') {
            var configJson = [];
            $('#MessagePreferenceSetting_Placeholder table').each(function () {
                var cat_id = $(this).attr('id').replace('tblmsgcat-', '');

                $('#tblmsgcat-' + cat_id + ' .tbl-msg-pref-row tr').each(function () {
                    var action_id = $(this).attr('id').split('-')[1];
                    var email = $('#chk' + action_id + 'email').prop('checked') ? 1 : 0;
                    var sms = $('#chk' + action_id + 'sms').prop('checked') ? 1 : 0;
                    var notify = $('#chk' + action_id + 'notify').prop('checked') ? 1 : 0;
                    var obj = {};
                    obj.EMAIL = email;
                    obj.SMS = sms;
                    obj.NOTIFY = notify;

                    // alert(action_id+'    ['+email + '  ' + sms + ' ' + notify+']');
                    MsgJsonData = [],
                        MsgJsonData.push(obj);

                    var obj2 = {};
                    obj2.action_id = action_id;
                    obj2.configJson = MsgJsonData;
                    configJson.push(obj2);
                });
            });

            var obj = {};
            obj.section = 'msgconfig';
            obj.action = 'savemsgconfigemp';
            obj.emp_pref_json = configJson;
            var params = "[" + JSON.stringify(obj) + "]";
            ns_message_center.post(params, evt);
        }
       
    });
});

ns_message_center = {
    post: function (params, evt) {
        var action = getAttribute(evt, 'data-action');
        var id = getAttribute(evt, 'id');    
        if (action == 'execute-trigger') 
            $('#' + id).html('<img src="/images/spin.gif" /> Run').addClass('a-disabled');       
        else
           $('#' + id).html('Process...<img src="/images/spin.gif" />').addClass('a-disabled');
        ns_ajax.post(
            urls.MessageCenterApi,
            params,
            function(response) {
                if (action == 'execute-trigger')
                    $('#' + id).html('<i class="fa fa-caret-square-o-right">&nbsp;</i>Run').removeClass('a-disabled');
                else
                   $('#' + id).html('Save').removeClass('a-disabled');
                var data = jQuery.parseJSON(response);
                if (data.Status == 'OK') {
                    ShowAlertMessage("Message", data.Response, 'C');
                    if (action == 'savecategory')
                        ns_message_center.getCategory();
                    if (action == 'saveaction')
                        ns_message_center.getActions();
                    if (action == 'savetemplate')
                        ns_message_center.getTemplates();

                    ModalHide(getAttribute(evt, 'data-modal'));
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    getCategory: function () {
        $('#MessageCategory_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
       
        var serverResponse;
        var param = '{"action":"getcategory","section":"msgconfig"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {

                    var categories = '<option value="0">Select category...</option>';
                    $.each(data.Response[0].MsgCategory, function (index, value) {
                        categories += '<option value=' + value.msg_cat_id + '>' + value.name + '</option>';
                    });
                    $('.ddl_msg_category').html(categories);

                    call_tmpl_binder(data.Response[0].MsgCategory, '/Template/message_center_tmpl.html', '#MessageCategory_Template', '#MessageCategory_Placeholder');
                    call_tmpl_binder(data.Response[0].MsgCategory, '/Template/message_center_tmpl.html', '#MessageCategories_Template', '#MessageCategories_Placeholder');

                }
                else
                    $('#MessageCategory_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    getConfigCategories: function (req_status) {
        if (req_status == 1) {
            $('#MessageTriggerCategory_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
            $('#spanmsgCategoryNameTrigger').html('');
            $('#spanmsgCategoryDescTrigger').html('');
            $('#TriggerSetting_Placeholder').html('<div style="padding:10px;text-align:center;"><i class="fa fa-hand-o-left"></i> Click on Navigation to access trigger settings.</div>');
        }
        else {
            $('#MessageCategory_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
            $('#spanmsgCategoryName').html('');
            $('#spanmsgCategoryDesc').html('');
            $('#MessageConfig_Placeholder').html('<div style="padding:10px;text-align:center;"><i class="fa fa-hand-o-left"></i> Click on Navigation to access configuration settings.</div>');
        }
        var serverResponse;
        var param = '{"action":"getconfigcategory","section":"msgconfig","req_status":"'+req_status+'"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    if (req_status == 1)
                        call_tmpl_binder(data.Response[0].MsgCategory, '/Template/message_center_tmpl.html', '#MessageTriggerCategory_Template', '#MessageTriggerCategory_Placeholder');
                    else
                        call_tmpl_binder(data.Response[0].MsgCategory, '/Template/message_center_tmpl.html', '#MessageCategory_Template', '#MessageCategory_Placeholder');
                }
                else
                    $('#MessageCategory_Placeholder, #MessageTriggerCategory_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    getActions: function () {
        $('#MessageCategoriesAction_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"getactions","section":"msgconfig"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0].MsgActions, '/Template/message_center_tmpl.html', '#MessageCategoriesAction_Template', '#MessageCategoriesAction_Placeholder');
                }
                else
                    $('#MessageCategoriesAction_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    getTemplates: function () {
        var msg_type = $('#ddlmsgtype_search').val();
        var cat_id = $('#ddlmsgCategories').val();
        var search = $('#txttemplateSearch').val();
        $('#MessageTemplates_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"gettemplates","section":"msgconfig","msg_type":"' + msg_type + '","cat_id":"' + cat_id + '","search":"' + search + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0].MsgTemplates, '/Template/message_center_tmpl.html', '#MessageTemplates_Template', '#MessageTemplates_Placeholder');
                }
                else
                    $('#MessageTemplates_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    getConfig: function (cat_id) {
        $('#MessageConfig_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"getconfig","section":"msgconfig","cat_id":"' + cat_id + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/message_center_tmpl.html', '#MessageConfig_Template', '#MessageConfig_Placeholder');
                }
                else
                    $('#MessageConfig_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    getTriggerSetting: function (cat_id) {
        $('#TriggerSetting_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"gettrigger","section":"msgconfig","cat_id":"' + cat_id + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/message_center_tmpl.html', '#TriggerSetting_Template', '#TriggerSetting_Placeholder');
                }
                else
                    $('#TriggerSetting_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
    // Compose and manage messages
    SendMail: function (param) {
        $('#btncomposemsg').html('Sending...<img src="/images/spin.gif" />');
        ns_ajax.post(
            urls.messageApi + 'custommessage',
            param,
            function (response) {
                $('#btncomposemsg').html('Send');                         
                if (response.split('|')[0] == 'OK') {
                    ShowAlertMessage("Message", 'Message has been sent successfully', "S");
                    $('.compose').hide(0);
                    $('.all-email-area').show(0);
                    ns_message_center.getInboxOutbox();
                }
                else
                    ShowAlertMessage("Message", response, "A");
            });
    },
    ComposeRequest: function () {
        $('#divMsgComposeForm_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"gettemplates","section":"msgrequest"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {  
                console.log(data);
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/message_center_tmpl.html', '#divMsgComposeForm_Template', '#divMsgComposeForm_Placeholder');
                }
                else
                    $('#divMsgComposeForm_Placeholder').html('<div style="padding:10px;text-align:center"></div>');
            });
    },
    getInboxOutbox: function (act) {
        var msgCounter = 0, totalmsg = 0;
        var cat_id = '0';
        var action_id = '0';      
        var search = $('#txtmessageSearch').val();
       
        if (act == 'more')
          $('#loadmoreMessage').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#InOutMessageList_Placeholder').html(wait());

        var param = '{"action":"getinboxoutbox","section":"msgrequest","msg_bond":"' + msg_bond + '","msg_type":"' + msg_type + '","archive":"' + archive + '","deleted":"' + deleted + '","cat_id":"' + cat_id + '","action_id":"' + action_id + '","search":"' + search + '","offset":"' + pagenumber + '","next":"' + pagesize + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {              
                $('#loadmoreMessage').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#InOutMessageList_Template').tmpl(data.Response[0].message_list).appendTo('#InOutMessageList_Placeholder');
                    }
                    else {
                        if (data.Response[0].message_list.length > 0) {
                            call_tmpl_binder(data.Response[0].message_list, '/Template/message_center_tmpl.html', '#InOutMessageList_Template', '#InOutMessageList_Placeholder');
                        }
                        else {
                            var msg = "Message not found.";
                            var link = 'Send message by click on <a class="col-green bold compose-btn cls-send-message" data-action="compose_request" ><i class="ti ti-plus"></i> Compose</a>';
                            $('#InOutMessageList_Placeholder').html(nodata2(msg, link));
                        }
                    }
                    $.each(data.Response[0].message_list, function (key, value) {
                        msgCounter = value.srno;
                        totalmsg = value.TotalRecord;
                    });



                    $.each(data.Response[0].total_message[0].InboxQty, function (key, value) {
                        var msg = value.message;
                        var text = value.text;
                        var noti = value.notification;
                        $('#inboxall').html(msg + text + noti);
                        $('#inboxArchive').html(value.archive);
                        $('#inboxTrash').html(value.trash);
                    
                    });
                    $.each(data.Response[0].total_message[1].OutboxQty, function (key, value) {
                        var internal = value.internal;
                        var msg = value.message;
                        var text = value.text;
                        var noti = value.notification;
                        var task = value.task;
                        $('#outboxinternal').html(internal);
                        $('#outboxmessage').html(msg);
                        $('#outboxtext').html(text);
                        $('#outboxnotifications').html(noti);
                        $('#outboxTask').html(task);
                        
                        $('#outboxall').html(internal+msg + text + noti + task);
                    });

                    $('#spanInboxTotalCurrentMsg').html(msgCounter);
                    $('#spanInboxTotalMsg').html(totalmsg);
                  
                }
                else {
                    $('#loadmoreMessage').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                    var msg = "Message not found.";
                    var link = 'Send message by click on <a class="col-green bold compose-btn cls-send-message" data-action="compose_request" ><i class="ti ti-plus"></i> Compose</a>';
                    $('#InOutMessageList_Placeholder').html(nodata2(msg, link));  
                }

                if (msgCounter < totalmsg)
                    $('#loadmoreMessage').show();
                else
                    $('#loadmoreMessage').hide();
            });

    },
    action: function (params) {        
        ns_ajax.post(
            urls.MessageCenterApi,
            params,
            function (response) {             
                var data = jQuery.parseJSON(response);
                if (data.Status == 'OK') {
                    var ReqData = jQuery.parseJSON(params);
                    var action = ReqData[0].action;
                    if (action == 'read_unread') {
                        $('#chk-AllMsg, .ClkMsg').prop('checked', false);
                      
                        for (var i = 0, l = ReqData[0].msg_id.length; i < l; i++) {
                            var id = ReqData[0].msg_id[i];
                            $('.clsmsgid-' + id).removeClass('font-bold');
                            $('.clsmsgid-' + id).addClass('font-weight-normal col-black');
                        }
                    }
                    else {
                        ShowAlertMessage("Message", data.Response, 'C');
                        $('#chk-AllMsg, .ClkMsg').prop('checked', false);
                    }
                }
                else {
                    ShowAlertMessage("Message", response, "A");
                }
            });
    },
    getNotifications: function (msg_ids) {
        var totalUnreadmsg = 0;
        msg_ids = msg_ids == '' ? '0' : msg_ids;
        $('#TopNotifications_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"getnotifications","section":"msgrequest","msg_ids":"' + msg_ids+'"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
               
                data = jQuery.parseJSON(data);
               
                if (data.Status == 'OK') {
                    if (data.Response[0].message_list.length > 0) {
                        call_tmpl_binder(data.Response[0].message_list, '/Template/message_center_tmpl.html', '#TopNotifications_Template', '#TopNotifications_Placeholder');
                    }
                    else {
                        $('#TopNotifications_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread messages</small></p></li>');
                    }

                    $.each(data.Response[0].message_list, function (key, value) {                        
                        totalUnreadmsg = value.TotalRecord;
                    });
                }
                else {                   
                    $('#TopNotifications_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread messages</small></p></li>');
                }
                localStorage.setItem('totalunreadmsg', totalUnreadmsg);
                $('.spanTotalNofificationUnread').html(localStorage.getItem('totalunreadmsg'));
            });
    },
   
    GetMessagePreferenceSetting: function () {
        $('#MessagePreferenceSetting_Placeholder').html('<div style="padding:10px;text-align:center"><b> Notifications Setting Loading...<br></b>Please wait..<img src="/images/spin.gif" /></div>');
        var serverResponse;
        var param = '{"action":"getemppref","section":"msgconfig"}';
        var params = { json: param }
        ns_ajax.get(
            urls.MessageCenterApi,
            params,
            function (data) {
                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/message_center_tmpl.html', '#MessagePreferenceSetting_Template', '#MessagePreferenceSetting_Placeholder');
                }
                else
                    $('#MessagePreferenceSetting_Placeholder').html('<div style="padding:10px;text-align:center">Not Available</div>');
            });
    },
}


/*************************************************
*      Send  Message
* **********************************************/
$(document).ready(function () {
    $('.spanTotalNofificationUnread').html(localStorage.getItem('totalunreadmsg'));
    $(document).on('click', ".cls-send-message", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'getmessage') {
            msg_bond = $(this).attr('data-msg_bond');
            msg_type = $(this).attr('data-msg-type');
            deleted = '0';
            archive = '0';
            $('#txtmessageSearch').val('');
            $('#chk-AllMsg').prop('checked', false);
            pagesize = 10;
            ns_message_center.getInboxOutbox();
        }
       
        if (action == 'get_archive') {
            msg_bond = $(this).attr('data-msg_bond');
            msg_type = $(this).attr('data-msg-type');
            deleted = '0';
            archive = '1';
            $('#txtmessageSearch').val('');
            $('#chk-AllMsg').prop('checked', false);
            pagesize = 10;
            ns_message_center.getInboxOutbox();
        }
        if (action == 'get_deleted') {
            msg_bond = $(this).attr('data-msg_bond');
            msg_type = $(this).attr('data-msg-type');
            deleted = '1';          
            archive = '0';
            $('#txtmessageSearch').val('');
            $('#chk-AllMsg').prop('checked', false);
            pagesize = 10;
            ns_message_center.getInboxOutbox();
        }
        if (action == 'search') {
            if ($('#txtmessageSearch').val().trim() == '') {
                ShowAlertMessage("Message", "Enter search keyword", "A");
                $('#txtmessageSearch').focus();
                return false;
            }
            else {
                pagesize = 10;
                ns_message_center.getInboxOutbox();
            }
        }
        if (action == 'refresh') {
            pagesize = 10;
            $('#txtmessageSearch').val('');
            $('#chk-AllMsg').prop('checked', false);
            ns_message_center.getInboxOutbox();
        }
        if (action == 'read_unread') {
            var strArray = [];
            $(".ClkMsg:checked").each(function () {
                var id = $(this).attr('data-id');              
                strArray.push(id);
            });
            var msg_id = strArray;
            var obj_send = {};
            obj_send.action = action;
            obj_send.msg_id = msg_id;
            var params = "[" + JSON.stringify(obj_send) + "]";
            ns_message_center.action(params);
        }
        if (action == 'archive') {
            var strArray = [];
            $(".ClkMsg:checked").each(function () {
                var id = $(this).attr('data-id');             
                strArray.push(id);
            });           
            var msg_id = strArray;
            var obj_send = {};
            obj_send.action = action;      
            obj_send.msg_id = msg_id;
            var params = "[" + JSON.stringify(obj_send) + "]";
            ns_message_center.action(params);
        }
        if (action == 'delete') {
            var strArray = [];
            $(".ClkMsg:checked").each(function () {
                var id = $(this).attr('data-id');
                strArray.push(id);
            });
            var msg_id = strArray;
            var obj_send = {};
            obj_send.action = action;
            obj_send.msg_id = msg_id;
            var params = "[" + JSON.stringify(obj_send) + "]";
            ns_message_center.action(params);
        }
        if (action == 'compose_request') {
            ns_message_center.ComposeRequest();
        }         
        if (action == 'discard') {
            $('.compose').hide(0);
            $('.all-email-area').show(0);
        } 
        if (action == 'compose-msg') {
            var cnd_type, cnd_role = 0, other_recipient = '', msg_cat_id = 0,  msg_action_id = 0,msg_id = 0, msg_channel='',msg_subject='',msg_body='';
        
            cnd_type = $('#ddlCndTypeCompose').val();
            if (cnd_type!=='O')
                cnd_role = $('#ddlCndJobRoleCompose').val();

            other_recipient = $('#txt_msg_other_recipient').val().trim();
            msg_id = $('#ddl_msg_categoryTemplates').val();

            msg_cat_id = $("#ddl_msg_categoryTemplates option:selected").attr("data-msg_cat_id");
            msg_action_id = $("#ddl_msg_categoryTemplates option:selected").attr("data-msg_action_id");


            msg_channel = $("input[name='messagetype']:checked").val().replace('check_', '').toLowerCase();

            var task_status=$('#chk_taskreminder').prop('checked') ? 1 : 0;
            var taskdeadlineDate = $('#txt_taskdeadlineDate').val();

            if (msg_channel == 'internal') {
                msg_body = $('#txtInternalMessageBody').Editor("getText");
            }
            if (msg_channel == 'email') {
                msg_subject = $('#txt_subject_compose').val().trim();
                msg_body = $('#txtEmailBody').Editor("getText");              
            }
            if (msg_channel == 'sms') {
                msg_body = $('#txtSMSCompose').val().trim();
            }
            if (msg_channel == 'notifications') {
                msg_body = $('#txtNotificationsCompose').val().trim();
            }    
            
            //Validation
            if (cnd_type == '') {
                ShowAlertMessage("Required", 'Select candidate type', "A");
                $('#ddlCndTypeCompose').focus();
                return false;
            }
           else if (cnd_type !== 'O' && cnd_role == '') {
                ShowAlertMessage("Required", 'Select candidate role', "A");
                $('#ddlCndJobRoleCompose').focus();
                return false;
            }
            else if (cnd_type == 'O' && other_recipient == '') {
                ShowAlertMessage("Required", 'Enter recipient email id', "A");
                $('#txt_msg_other_recipient').focus();
                return false;
            }
            else if (cnd_type == 'O' && other_recipient !== '' && IsvalidEmails(other_recipient)==false) {
                ShowAlertMessage("Required", 'Enter valid email id of recipient eamil', "A");
                $('#txt_msg_other_recipient').focus();
                return false;
            }           

            else if (msg_channel == 'email' && msg_subject == '') {
                ShowAlertMessage("Required", 'Enter subject', "A");
                $('#txt_subject_compose').focus();
                return false;
            }
            //else if (msg_id == '0') {
            //    ShowAlertMessage("Required", 'Select message template', "A");
            //    $('#ddl_msg_categoryTemplates').focus();
            //    return false;
            //}
            else if (msg_body.trim() == '') {
                ShowAlertMessage("Required", 'Enter ' + msg_channel+' body message', "A");
                $('#emailtemplateBody').focus();
                return false;
            }
            else if (task_status == 1 && taskdeadlineDate=='') {
                ShowAlertMessage("Required", 'Enter task deadline date', "A");
                $('#txt_taskdeadlineDate').focus();
                return false;
            }
             
            else {               
                var obj_send = {};
                obj_send.action = action;
                obj_send.pro_type = cnd_type;
                obj_send.pro_role_id = cnd_role;
               /* obj_send.msg_action_id = msg_action_id;*/
                obj_send.msg_cat_id = msg_cat_id;
                obj_send.chanell = msg_channel;
                obj_send.msg_id = msg_id;
                obj_send.to = other_recipient;
                obj_send.subject = msg_subject;
                obj_send.bodymsg = msg_body;
                obj_send.task_status = task_status;
                obj_send.task_deadline_datetime = taskdeadlineDate;
            
                var params = "[" + JSON.stringify(obj_send) + "]";             
                ns_message_center.SendMail(params);
            }
        }      
        if (action == 'send-msg') {            
            var To = $('#txtToEmail').val();
            var Cc = $('#txtCcEmail').val();
            var Bcc = $('#txtBccEmail').val();
            var msg_subject = $('#txt_email_subject').val();  
          
            var email_body = $('#MessageEmailtemplateBody').Editor("getText");
            //var sms_body = $('#txt_msg_sms').val();
            //var notification_body = $('#txt_msg_notification').val();
            if (To == '') {
                ShowAlertMessage("Required", 'Enter recipient email', "A");
                $('#txtToEmail').focus();
                return false;
            }
            else if (msg_subject == '') {
                ShowAlertMessage("Required", 'Enter subject', "A");
                $('#txt_email_subject').focus();
                return false;
            }
            else if (email_body.trim() == '') {
                ShowAlertMessage("Required", 'Enter email body message', "A");
                $('#emailtemplateBody').focus();
                return false;
            }
            else {
                var obj_send = {};
                obj_send.to = To;
                obj_send.cc = Cc;
                obj_send.bcc =Bcc;
                obj_send.subject = msg_subject;
                obj_send.bodymsg = email_body
                var params = "[" + JSON.stringify(obj_send) + "]";
                ns_message_center.SendMail(params);               
            }
        }       
        if (action == 'custom-msg') {
            $('#txtToEmail, #txtCcEmail, #txtBccEmail, #txt_msg_subject').val('');   
            $('.cc_input, .bcc_input').hide();
            $('.cc, .bcc').show();
            $("#MessageEmailtemplateBody .Editor-editor").html("");
            $("#ModalSendCustomMessage").modal();
        } 
        if (action == 'cc') {
            $('#txtCcEmail').val('');
            $('.cc_input').show('slow');
        }
        if (action == 'bcc') {           
            $('#txtBccEmail').val('');
            $('.bcc_input').show('slow');
        }
        
    });
    $(document).on('change', ".cls-send-message-task", function (evt) {
        var action = $(this).attr('data-action');
        DatePairFuction();
        if (action == 'task') {
            if ($(this).prop('checked')) {
                $('#txt_taskdeadlineDate').val('');
                $('.divtaskdeadline').show('slow');
            }
            else {
                $('#txt_taskdeadlineDate').val('');
                $('.divtaskdeadline').hide('slow');
            }
        }
    });
  
    $(document).on('change', "#ddlCndTypeCompose", function () {
        var type = $(this).val();        
        $('#txt_msg_other_recipient').val('');
        $('#CndJobRoleCompose').val('0');
        if (type == 'O') {
            $('#CndJobRoleCompose').hide();
            $('#div_other_recipient').show('slow');
            $('#check_Internal, #check_SMS, #check_Notifications').attr('disabled',true);
            $('#check_Email').prop('checked', true);
            $(".hide_all").hide();
            $(".check_Email").toggle();
        }
        else {
            $('#div_other_recipient').hide();
            $('#check_Internal, #check_SMS, #check_Notifications').attr('disabled',false);
            $('#CndJobRoleCompose').show('slow');
        }
    });   
    $(document).on('change', "#ddl_msg_categoryTemplates", function () {
     
        var email_subject = $(this).find(':selected').attr('data-email_subject');
        var email_body = $(this).find(':selected').attr('data-email_body');  
        var sms_body = $(this).find(':selected').attr('data-sms_body');  
        var notify_body = $(this).find(':selected').attr('data-notify_body'); 
       
        $('#txt_subject_compose').val(email_subject);        
        $(".Editor-editor").html(email_body); 
        $(".Editor-editor").html(email_body);       
        $('#txt_subject_compose').val(sms_body);
        $('#txt_subject_compose').val(notify_body);        
    });         
    $(document).on('change', "input[name$='messagetype']", function () {
        var inputValue = $(this).attr("value");     
        $(".hide_all").hide();
        $(this).show('slow');
        $("." + inputValue).toggle();       
    });
    $(document).on('click', ".cls-vw-msg", function () {      
        var obj = {};
        obj.msg_id = $(this).attr('data-msg_id');
        obj.msg_date = $(this).attr('data-msg_date');
        obj.subject = $(this).attr('data-subject');
        obj.message = $(this).attr('data-message');
        obj.task_status = $(this).attr('data-task_status');
        obj.task_deadline_datetime = $(this).attr('data-task_deadline_datetime');
        obj.reply_message = jQuery.parseJSON($(this).attr('data-reply_message'));
       
        call_tmpl_binder(obj, '/Template/message_center_tmpl.html', '#ViewMessage_Template', '#ViewMessage_Placeholder');
        $('.single-email').show(0);
        $('.all-email-area').hide(0);
        $('.compose').hide(0);
        var strArray = [];
        strArray.push(obj.msg_id);
        var msg_id = strArray;
        var obj_send = {};
        obj_send.action = 'read_unread';
        obj_send.msg_id = msg_id;
        var params = "[" + JSON.stringify(obj_send) + "]";
        ns_message_center.action(params);
    });

    $(document).on('click', ".cls-vw-msg-top", function () {
        var msgids = '0';
        var action = $(this).attr('data-action');
        if (action == 'readall') {            
            var strArray = [];
            $("#TopNotifications_Placeholder li").each(function () {
                var id = $(this).attr('id').replace('notify-','');
                strArray.push(id);
            });
            msgids = strArray;        
        
        }
        else if (action == 'read') {
            msgids = $(this).attr('data-msg_id');
        }
        else if (action == 'view'){
            var obj = {};
            obj.msg_id = $(this).attr('data-msg_id');
            obj.msg_date = $(this).attr('data-msg_date');
            obj.subject = $(this).attr('data-subject');
            obj.message = $(this).attr('data-message');
            $('#ViewTopMessage_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
            call_tmpl_binder(obj, '/Template/message_center_tmpl.html', '#ViewTopMessage_Template', '#ViewTopMessage_Placeholder');
            $('#ModalViewMessage').modal();
            msgids = $(this).attr('data-msg_id');
        }      
        ns_message_center.getNotifications(msgids);
    });
    

    $(document).on('click', ".compose-btn", function () {
        $('.compose').show(0);
        $('.all-email-area').hide(0);
        $('.single-email').hide(0);
    });
   $(document).on('click', ".sing-btn", function () {
        $('.all-email-area').show(0);
        $('.single-email').hide(0);
        $('.compose').hide(0);
    });
    $(document).on('click', ".back-send", function () {
        $('.compose').hide(0);
        $('.all-email-area').show(0);
    });
   $(document).on('click', ".back-btn", function () {
        $('.single-email').hide(0);
        $('.all-email-area').show(0);
   });

    $(document).on('click', ".all_slct, .ClkMsg", function () {
        if ($(this).is(":checked")) {
            $(".dvlabel").show();
        } else {
            $(".dvlabel").hide();
        }
    });
    $(document).on('click', ".all_slct", function () {
        $('.ClkMsg').prop('checked', this.checked);
    });
    $(document).on('click', ".loadmoreMessage", function () {
        pagesize = pagesize + 10;
        ns_message_center.getInboxOutbox('more');
    });
    $(document).on('click', ".all_slct", function () {
        $('.ClkMsg').prop('checked', this.checked);
    });
    $(document).on('click', ".cls-get-notification", function () {      
        ns_message_center.getNotifications('0');
    });

    $(document).on('click', ".cls-get-conversation", function () {
        ns_Conversation.getConversations('0');
    });

    $(document).on('click', ".cls-get-CriticalActivity", function () {
        ns_ActivitiesLog.getCriticalActivityLogs('0');
    });
    
});



/*************************************************
*      ROTA SETTINGS
* **********************************************/
$(document).ready(function () {
    $(document).on('click', ".cls-rota-settings", function () {
        var action = $(this).data('action');
        if (action == 'refresh') {           
            ns_rotaSettings.get();
        }        
    });

    $(document).on('change', ".cls-rota_setting_chk", function () {
        var key = $(this).attr('data-key');
        var val = $(this).prop('checked')==true?1:0;
        if (key !== undefined && key !== '' && val !== '') {
            var obj = {};
            obj.key = key;
            obj.value = val;
            var params = "[" + JSON.stringify(obj) + "]";           
            ns_rotaSettings.update(params);
        }
    });

    $(document).on('change', ".cls-rota_setting_ddl", function () {
        var key = $(this).attr('data-key');
        var val = $(this).val();      
        if (key !== undefined && key !== '' && val!=='') {
            var obj = {};
            obj.key = key;
            obj.value = val;
            var params = "[" + JSON.stringify(obj) + "]";           
            ns_rotaSettings.update(params);
        }
    }); 

});
ns_rotaSettings = {
    get: function () {
        var param = {}
        ns_ajax.get(
            urls.rotaSettingsGet,
            param,
            function (data) {
                if (data.Status == 'OK') {                  
                    $.each(data.Response[0].settings, function (key, value) {                      
                        if (value.key == "show_employee_avatars_on_rota" && value.value ==1) {                           
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "employees_can_view_the_rotas_of_locations_they_are_not_assigned_to" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "employees_only_see_themselves_on_the_rota" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "enable_shift_acknowledgement" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "breaks_are_paid" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "show_shifts_from_other_locations_on_each_rota" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "show_open_shifts_from_other_locations_on_each_rota" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "include_unpublished_shifts_on_the_dashboard" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "employees_can_request_shift_swaps" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "admin_or_manager_must_approve_all_shift_swaps" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "employees_can_swap_shift_with_people_from_different_locations" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "employees_claim_open_shifts" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }
                        if (value.key == "send_employees_shift_reminders" && value.value == 1) {
                            $('#chk_' + value.key).prop("checked", "checked");
                        }

                        //Select options
                        if (value.key == "shift_swap_minimum_notice_in_hrs" && value.value !== '') {
                            $('#ddl_' + value.key).val(value.value);
                        }
                        if (value.key == "week_starts" && value.value !== '') {
                            $('#ddl_' + value.key).val(value.value);
                        }
                        if (value.key == "time_format" && value.value !== 0) {
                            $('#ddl_' + value.key).val(value.value);
                        }
                        if (value.key == "shift_notes" && value.value !== '') {
                            $('#ddl_' + value.key).val(value.value);
                        }
                        if (value.key == "remind_employees_about_their_shifts_in_min" && value.value !== '') {
                            $('#ddl_' + value.key).val(value.value);
                        }

                    });                 
                }
                else {
                    ShowAlertMessage("Message", data.Error, "A");
                }
            });
    },
    update: function (param) {      
        ns_ajax.post(
            urls.rotaSettingsUpdate,
            param,
            function (data) {              
                if (data.Status == 'OK') {
                    ShowAlertMessage("Message", data.Response, "C");
                }
                else {
                    ShowAlertMessage("Message", data.Error, "A");                
                }
            });
    },
}




function toggle2fa() {
    if (state) {
        document.getElementById("txt_security_code").setAttribute("type", "password");
        state = false;
    } else {
        document.getElementById("txt_security_code").setAttribute("type", "text")
        state = true;
    }
}

function myFunction2fa(show) {
    show.classList.toggle("fa-eye-slash");
}

/*************************************************
*      Booked Jobs News(Aug 2022)
* **********************************************/
$(document).ready(function () {
    $(document).on('click', ".cls-myjobs", function (evt) {
        var action = $(this).data('action');
        var modal = $(this).data('modal');
        if (action == 'search') {
            $('.searchTags').html('');
            var job_id = $('#txt_job_id');
            var role = $('#ddl_job_role');
            var employee = $('#txt_employee');
            var shift_secured_datetime = $('#txt_shift_secured_datetime');
            var job_start_datetime = $('#txt_job_start_datetime');
            var location = $('#txt_location');
            if (job_id.val() == '' && role.val() == '' && employee.val() == '' && shift_secured_datetime.val() == '' && job_start_datetime.val() == '' && location.val() == '') {
                ShowAlertMessage("Message", 'Enter search criteria', 'A');
                job_id.focus();
                return false;
            }
            if (job_id.val() !== '') {
                var activity = job_id.data('activity');
                var ctrl_id = job_id.attr('id');;
                var fieldName = job_id.data('filterfield');
                var filterfield = job_id.data('filterfield');
                var fieldlabel = job_id.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (role.val() !== '') {
                var activity = role.data('activity');
                var ctrl_id = role.attr('id');;
                var fieldName = role.data('filterfield');
                var filterfield = role.data('filterfield');
                var fieldlabel = role.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (shift_secured_datetime.val() !== '') {
                var activity = shift_secured_datetime.data('activity');
                var ctrl_id = shift_secured_datetime.attr('id');;
                var fieldName = shift_secured_datetime.data('filterfield');
                var filterfield = shift_secured_datetime.data('filterfield');
                var fieldlabel = shift_secured_datetime.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (job_start_datetime.val() !== '') {
                var activity = job_start_datetime.data('activity');
                var ctrl_id = job_start_datetime.attr('id');;
                var fieldName = job_start_datetime.data('filterfield');
                var filterfield = job_start_datetime.data('filterfield');
                var fieldlabel = job_start_datetime.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (employee.val() !== '') {
                var activity = employee.data('activity');
                var ctrl_id = employee.attr('id');;
                var fieldName = employee.data('filterfield');
                var filterfield = employee.data('filterfield');
                var fieldlabel = employee.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (location.val() !== '') {
                var activity = location.data('activity');
                var ctrl_id = location.attr('id');;
                var fieldName = location.data('filterfield');
                var filterfield = location.data('filterfield');
                var fieldlabel = location.data('fieldlabel');
                ns_BookedJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            ModalHide(modal);
        }
        if (action == 'discard_search') {
            ModalHide(modal);

            ns_BookedJobs.resetControl();
            if ($('.searchTags').html() !== '')
                ns_BookedJobs.search();
            $('.searchTags').html('');
            $('.filterlabel').hide();
        }
        if (action == 'refresh') {
            pagenumber = 0;
            $('.searchTags').html('');
            $('.filterlabel').hide();
            ns_BookedJobs.search();
            ns_BookedJobs.resetControl();
        }
        if (action == 'showfilter') {
            fn_autocomplete('txt_employee', 'cnd', 'filterAutocomplete');
            fn_autocompleteLocation('txt_location', 'joblocation', 'filterAutocomplete');
        }

    });
    $(document).on('click', ".loadmore-myjobs", function () {
        pagenumber = pagenumber + 10;
        ns_BookedJobs.search('more');
    });
    $(document).on('click', ".ul-myjobs-tabs li a", function () {
        pagenumber = 0;      
        JobStatus = jQuery(this).attr('data-status');    
        ns_BookedJobs.search();
    });
    $(document).on('click', ".ul-main-tabs-new li a", function () {
        JobType = jQuery(this).attr('data-job-type');
        if (JobType == 'P')
            $('#divInnerTabs').addClass('dd_none');
        else
            $('#divInnerTabs').removeClass('dd_none');     
        pagenumber = 0;
        JobStatus = '';
        ns_BookedJobs.search();
    });
    $(document).on("change", ".chkAllJobs", function () {
        $("#my_jobs_loadmore_placeholder input:checkbox").prop('checked', $(this).prop("checked"));
    });

    $(document).on('click', '.btn-job-action-new', function (evt) {        
        var action = jQuery(this).attr('data-action');
        var jobid = jQuery(this).attr('data-id');     
        if (action == 'view') {            
            ns_BookedJobs.viewJobDetail(jobid, action);
        }
        //if (jobAction == 'timesheet' || jobAction == 'jobfile') {
        //    var fileDeleteStatus = 0;
        //    $('.filetab').attr({ 'data-job-id': jobid, 'data-action': jobAction });
        //    $('#actiontitle').html((jobAction == 'timesheet' ? 'Timesheet' : 'Upload Job File') + ' ( JOB#: ' + jobid + ' )');
        //    $('#btnSubmitUploadJobFile').attr({ 'data-job-id': jobid, 'data-action': jobAction });
        //    $('#btnSubmitUploadJobFileInv').attr({ 'data-job-id': jobid, 'data-action': jobAction });

        //    $('#tabManualTimesheet').attr('data-id', jobid);
        //    $('#tabSysGenTimesheet').attr('data-id', jobid);

        //    ns_jobs.getTimesheet(jobid);
        //    ns_jobs.GetUploadedJobFiles(jobAction, jobid, fileDeleteStatus);
        //}
        //if (jobAction == 'computer-generated-timesheet') {
        //    ns_Accounts.getTimesheet(jobid);
        //}
        //else if (jobAction == 'trackhistory') {
        //    $('#spanTrackJobId').html(jobid);
        //    var activity_code = 'JOB';
        //    ns_jobs.GetAllTrackingHistory(jobid, activity_code, ".tbodyTrackingHistory");
        //}
        else if (action == 'jobhistory') {           
            ns_jobs.GetJobHistory(action, jobid);
        }       
        //else if (jobAction == 'feedback') {
        //    $('#btnSubmitUserFeedback').attr('data-id', jobid);
        //    $('#spnjobid').html(jobid);
        //    $('.btnSub, .fdr_place, .req_commnt').hide();
        //    $('.btnfeed_req').show();
        //    ns_feedback.GetProfileFeedQueList();
        //}
        //else if (jobAction == 'applications') {
        //    $('#jobhistoryid').html(jobid);
        //    ns_jobs.getJobApplications();
        //}
        else if (action == 'cancel_relocated_job') {
            actionJobType = ""; actionJobData = "";

            actionJobType = {
                "Action": "Actions",
                "send_email_to_employer": 1,
                "send_email_to_candidate": 1,
                "Job_Type": "",
            }

            actionJobData = {
                "Job_Id": jobid,
                "Action": 'Cancel',
                "comment":"Relocated job cancelled"
            }
            var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
            ns_jobs.cancelRelocatedJob(strFinal);
            

        }
        else if (action == 'edit_reference') {
          
            $('#payrollRefView-' + jobid).hide();
            $('#payrollRef-' + jobid).show();

        }
        else if (action == 'update_reference') {
            actionJobType = ""; actionJobData = "";
            var refNo = $('#txt_payroll_reference-' + jobid).val();
            if (refNo == '') {
                ShowAlertMessage("Message", 'Required reference no.', "A");
                $('#txt_payroll_reference-' + jobid).focus();
                return false;
            }
            else {
                actionJobType = {
                    "Action": "Actions",
                    "send_email_to_employer": 0,
                    "send_email_to_candidate": 0,
                    "Job_Type": "",
                }

                actionJobData = {
                    "Job_Id": jobid,
                    "referenec_no": refNo,
                    "Action": 'update_reference',
                    "comment": "Update payroll reference no='"+refNo+"' of job id" + jobid
                }
                var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
              /*  if(confirm('Are you sure you want to update reference?'))*/
                    ns_jobs.UpdatePayrollReference(strFinal, jobid, refNo);
               
            }

        }

        $(document).on('click', ".btn-job-apps", function () {
            actionJobType = ""; actionJobData = "";
            actionJobType = {
                "Action": "Actions",
                "send_email_to_employer": 1,
                "send_email_to_candidate": 1,
                "Job_Type": tabStatus,
            }
            var btnAction = $(this).attr('data-action');
            var jobid = $(this).attr('data-val');
            var cndid = $(this).attr('data-cnd-id');
            if (btnAction === 'appoint') {
                actionJobData = {
                    "Job_Id": jobid,
                    "Action": "Appoint",
                    "Candidate_id": cndid
                }
            }
            if (btnAction === 'progress') {
                var subject = $("#txtJobAppsInProgressSubject").val();
                var message = $("#txtJobAppsInProgressBody").Editor("getText");
                actionJobData = {
                    "Job_Id": jobid,
                    "Action": "Progress",
                    "Candidate_id": cndid,
                    "subject": subject,
                    "message": message
                }
            }
            else if (btnAction === 'decline') {
                actionJobData = {
                    "Job_Id": jobid,
                    "Action": "Decline",
                    "Candidate_id": cndid
                }
            }
            var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";

            //ns_jobs.jobs_actions(strFinal);
            ns_OpenJobs.jobsActions(strFinal);
        });

        
    });

    $(document).on('click', '.btn-job-action', function () {
        tabStatus = ($(this).attr('job-type') == "L" ? "T" : "P");
        var jobAction = jQuery(this).attr('data-action');
        var jobid = jQuery(this).attr('data-id');
        if (jobAction == 'assign' || jobAction == 'swap') {
            //$('#job_apps').modal('hide');
            ModalHide('#job_apps');
            var orgid = jQuery(this).attr('data-org-id');
            $('#txtNewCandidate').attr('org-id', orgid);
        }

        if (jobAction == 'timesheet' || jobAction == 'upload' || jobAction == 'jobfile') {
            var fileDeleteStatus = 0;
            $('.filetab').attr({ 'data-job-id': jobid, 'data-action': jobAction });
            $('#actiontitle').html((jobAction == 'timesheet' ? 'Upload Timesheet' : 'Upload Job File') + ' for JOB#: ' + jobid);
            $('#btnSubmitUploadJobFile').attr({ 'data-job-id': jobid, 'data-action': jobAction });
            $('#btnSubmitUploadJobFileInv').attr({ 'data-job-id': jobid, 'data-action': jobAction });
            $('#ddlFileType').val(jobAction == 'timesheet' ? 'T' : 'J');

            ns_jobs.GetUploadedJobFiles(jobAction, jobid, fileDeleteStatus);
        }
        if (jobAction == 'computer-generated-timesheet') {
            ns_Accounts.getTimesheet(jobid);
        }
        else if (jobAction == 'trackhistory') {           
            $('#spanTrackJobId').html(jobid);
            var activity_code = 'JOB';
            $('#txt_po_number').hide();
            $('#btnInvApproved').hide();
            $('#btnInvCancel').hide();
            request_action = 'JOB';
            LoadMoreCount = 0;
            $('.tbodyTrackingHistory').html('');
            ns_jobs.GetAllTrackingHistory();
        }
        else if (jobAction == 'jobhistory') {
            $('#jobhistoryid').html(jobid);
            var activity_code = 'JOB';
            ns_jobs.GetJobHistory(jobAction, jobid);
        }
        else if (jobAction == 'jobapps') {
            ns_jobs.getJobApplications(jobid);
        }
        else if (jobAction == 'notes') {
            $('#ModalNotes').modal('show');
            var ProfileType = $(this).attr('data-profile-type');
            var Name = $(this).attr('data-name');
            var Role = $(this).attr('data-role');
            $('#spnNotesProfileId').html(jobid);
            $('#spnProfileType').html(ProfileType);
            $('#spnNotesProfileName').html(Name + ' / JOB# :' + jobid + '');
            $('#spnNotesTimeAndRole').html(GetCurrentTime() + '&nbsp;<b class="col-green">' + Role + ' </b>');
            ns_Notes.Clear();
            ns_Notes.DisableControl();
            ns_Notes.GetNotes(jobid, ProfileType, 0, 0, 'POP');
        }
        else {
            ns_jobs.getJobDetails(jobid, jobAction);
        }
    });
});
ns_BookedJobs = {
    search: function (act) {
        var param = '', jobsCounter = 0, totalJobs = 0;
        if (act == 'more')
            $('.loadmore-myjobs').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#my_jobs_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');

        param = ns_BookedJobs.getSearchParam();
        param = { json: param }
        ns_ajax.get(
            urls.bookedjobs,
            param,
            function (data) {
                $('.loadmore-myjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#my_jobs_loadmore_template').tmpl(data.Response[0].jobs).appendTo('#my_jobs_loadmore_placeholder');
                    }
                    else {
                        if (data.Response[0].jobs.length > 0) {                          
                            call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#my_jobs_template', '#my_jobs_placeholder');
                            ns_BookedJobs.TotalQty(data.Response[0].TotalCount);
                        }
                        else {
                            var msg = "Sorry ! we could't find any jobs matching your criteria..";
                            var link = "Try some different filters and search.";
                            $('#my_jobs_placeholder').html(nodata2(msg, link));
                            $('.loadmore-myjobs').hide();
                            $('#jobs_found').html(jobsCounter);
                            $('#total_jobs').html(totalJobs);
                            ns_BookedJobs.TotalQty(null);
                        }
                    }
                    $.each(data.Response[0].jobs, function (key, value) {
                        jobsCounter = value.srno;
                        totalJobs = value.TotalRecord;
                    });
                    $('#jobs_found').html(jobsCounter);
                    $('#total_jobs').html(totalJobs);
                }
                else {
                    $('.loadmore-myjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                    var msg = "Sorry ! we could't find any jobs matching your criteria..";
                    var link = "Try some different filters and search.";
                    $('#job_search_template').html(nodata2(msg, link));
                    ns_BookedJobs.TotalQty(null);
                }
                
                if (jobsCounter < totalJobs)
                    $('.loadmore-myjobs').show();
                else
                    $('.loadmore-myjobs').hide();
            });

    },
    GetRoles: function (ctrl) {
        var params = "dro=der-dl";
        $(ctrl).html('<option value="">Select Role</option>');
        ns_ajax.get(
            urls.employeesApi,
            params,
            function (data) {
                if (data.Status === 'OK') {
                    var obj = data.Response;                 
                    $.each(obj.eroles, function (key, value) {                      
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;                       
                        $(ctrl).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    })
                }
            }
        );
    },
    addSearch_tag: function (activity, ctrl_id, fieldName, filterfield, fieldlabel) {
        var ctrlValues = '', ctrlText = '';
        if (activity == 'filldropdown') {
            ctrlValues = $('#' + ctrl_id).val();
            ctrlText = $('#' + ctrl_id + " option:selected").text();
        }
        else if (activity == 'autocomplete') {
            ctrlValues = $('#' + ctrl_id).attr('data-item-id');
            ctrlText = $('#' + ctrl_id).val();
        }
        else {
            ctrlValues = ctrlText = $('#' + ctrl_id).val();
        }

        if (ctrlValues == '') {
            $('#' + ctrl_id).focus();
            return false;
        }
        else {
            var searchKey = fieldlabel;
            var searchValue = ctrlValues;
            var tag = '<span id="stag' + fieldName + '" class="btn btn-outline-info tmlabel opacity_8 stag  tagjobdate"> ' + fieldlabel + ' : <b data-field="' + searchKey + '" data-field-name="' + filterfield + '" data-searchtagval="' + searchValue + '" data-searchtagtext="' + ctrlText + '">' + ctrlText + '</b> <a id="stagCancel' + fieldName + '" class="cls_cross clsCancelTag">x</a></span>';

            $('.searchTags').append(tag);
            $('.filterlabel').show();
        }
        ns_BookedJobs.search();

        $('.clsCancelTag').on("click", function () {
            var id = $(this).attr('id').replace('stagCancel', '');

            $('#stag' + id).remove();
            ns_BookedJobs.search();
            if (id == 'job_id')
                $('#txt_job_id').val('');
            if (id == 'role_id')
                $('#ddl_job_role').val('');
            if (id == 'job_date')
                $('#txt_job_start_datetime').val('');
            if (id == 'shift_secured')
                $('#txt_shift_secured_datetime').val('');
            if (id == 'employee') {
                $('#txt_employee').val('');
                $('#txt_employee').attr('data-item-id', '');
            }
            if (id == 'location') {
                $('#txt_location').val('');
                $('#txt_location').attr('data-item-id', '');
            }
            if ($('.searchTags').html() == '') {
                $('.filterlabel').hide();
            }

        });
    },
    getSearchParam: function () {
        var param = '';
        JobType = JobType == 'N-L' ? 'A' : JobType;
        param = 'action:"bookedjobs","job_type":"' + JobType + '","job_status":"' + JobStatus + '","offset": "' + pagenumber + '", "next": "' + pagesize + '",';
        $("div.searchTags span.stag b").each(function () {
            var key = $(this).attr('data-field-name');
            var val = $(this).attr('data-searchtagval');
            param += key + ':"' + val + '",';
        });
        param = param == '' ? param : param.slice(0, -1);
        if (param !== '') {
            param = '{' + param + '}';
        }
        return param;
    },
    resetControl: function () {
        $('#txt_job_id').val('');
        $('#ddl_job_role').val('');
        $('#txt_job_start_datetime, #txt_shift_secured_datetime').val('');
        $('#txt_employee').val('');
        $('#txt_employee').attr('data-item-id', '');
        $('#txt_location').val('');
        $('#txt_location').attr('data-item-id', '');
    },
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == null && $('.searchTags').html() !== '') {
            $('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED, .cls-CANCELLED').html('0');
        }
        else {
            if (obj.length == 1) {
                if ($('.searchTags').html() !== '') {
                    flag = true;
                    $('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED, .cls-CANCELLED').html('0');
                }
                else
                    flag = false;

            }
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);

                if (value.status == 'BOOKED' || value.status == 'UNCOMPLETED' || value.status == 'WAITING' || value.status == 'COMPLETED' || value.status == 'NOTACCEPTED' || value.status == 'CANCELLED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }
    },
    viewJobDetail: function (jobid, action) {      
        $('#job_details_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsdetails,
            param,
            function (data) {
                if (data.Status == 'OK') {                  
                    call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#job_details_template', '#job_details_placeholder');
                }
                else {               
                    var msg = "Sorry ! we could't find jobs deatils";
                    var link = "Try after some time.";
                    $('#job_details_placeholder').html(nodata2(msg, link));
                }
            }
        );
    },

    getJobDetails: function (jobid, action) {        
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsApi + "Get",
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var tblHistory = "", totalCost, vatamt;
                    if (action == 'jobHistory')
                        ns_jobs.GetJobHistory('jobhistory', jobid);
                    else if (action == 'auditHistory') {
                        $("#tblJobHistoryHead").empty();
                        $("#tblJobHistoryBody").empty();
                        $("#tblJobHistoryHead").append(ns_table_template.heading_row(obj.Table));
                        if (obj.Table1.length === 0) {
                            tblHistory += '<tr><td colspan="3" style="text-align:center;">No history available</td></tr>';
                            $("#tblJobHistoryBody").append(tblHistory);
                            tblHistory = "";
                        }
                        else {
                            $.each(obj.Table1, function (key, value) {
                                tblHistory += "<tr>";
                                tblHistory += '<td >' + value.RowNumber + '</td>';
                                tblHistory += '<td >' + value.job_audit_comments + '</td>';
                                tblHistory += '<td >' + value.job_audit_date + " / " + value.job_audit_by_user_name + '</td>';
                                tblHistory += "</tr>";
                                $("#tblJobHistoryBody").append(tblHistory);
                                tblHistory = "";
                            });
                        }
                    }
                    else {
                        $.each(obj, function (key, value) {
                            if (action == "edit") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Update")
                            }
                            if (action == "createinvoice") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Submit")
                            }

                            else if (action == "complete" || action == "recomplete") {
                                if (action == "complete")
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Complete")
                                else
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Recomplete")
                            }
                            else if (action == "audit") {
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Audit")
                            }

                            else if (action == "cancel") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Cancel");
                            }
                            else if (action == "swap") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Swap");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "assign") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Assign");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "delete") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Delete")
                            }
                            else if (action == "restore") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Restore")
                            }
                            else if (action == 'view') {
                                $('#spanDetailJobId').html(jobid);
                                $('#tabjobhistoryDetailsView').attr('data-id', jobid);
                                ns_jobs.JobFullDetail(obj, tabStatus);
                            }
                        });
                    }
                }
                else {
                    //ShowAlertMessage("Error !", response, "A");
                    $('.tbodyJobHistory').html("<tr><td colspan='14'><center>Not Available !</center></td></tr>");
                }
            });
    },   
}


/*************************************************
*      Open Jobs News(Aug 2022)
* **********************************************/
$(document).ready(function () {
    $(document).on('click', ".cls-myopenjobs", function (evt) {
        var action = $(this).data('action');
        var modal = $(this).data('modal');
        if (action == 'search') {
            $('.searchTags').html('');
            var job_id = $('#txt_job_id');
            var role = $('#ddl_job_role');

            var shift_secured_datetime = $('#txt_shift_secured_datetime');
            var job_start_datetime = $('#txt_job_start_datetime');
            var location = $('#txt_location');
            if (job_id.val() == '' && role.val() == '' && shift_secured_datetime.val() == '' && job_start_datetime.val() == '' && location.val() == '') {
                ShowAlertMessage("Message", 'Enter search criteria', 'A');
                job_id.focus();
                return false;
            }
            if (job_id.val() !== '') {
                var activity = job_id.data('activity');
                var ctrl_id = job_id.attr('id');;
                var fieldName = job_id.data('filterfield');
                var filterfield = job_id.data('filterfield');
                var fieldlabel = job_id.data('fieldlabel');
                ns_OpenJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (role.val() !== '') {
                var activity = role.data('activity');
                var ctrl_id = role.attr('id');;
                var fieldName = role.data('filterfield');
                var filterfield = role.data('filterfield');
                var fieldlabel = role.data('fieldlabel');
                ns_OpenJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (shift_secured_datetime.val() !== '') {
                var activity = shift_secured_datetime.data('activity');
                var ctrl_id = shift_secured_datetime.attr('id');;
                var fieldName = shift_secured_datetime.data('filterfield');
                var filterfield = shift_secured_datetime.data('filterfield');
                var fieldlabel = shift_secured_datetime.data('fieldlabel');
                ns_OpenJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (job_start_datetime.val() !== '') {
                var activity = job_start_datetime.data('activity');
                var ctrl_id = job_start_datetime.attr('id');;
                var fieldName = job_start_datetime.data('filterfield');
                var filterfield = job_start_datetime.data('filterfield');
                var fieldlabel = job_start_datetime.data('fieldlabel');
                ns_OpenJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            if (location.val() !== '') {
                var activity = location.data('activity');
                var ctrl_id = location.attr('id');;
                var fieldName = location.data('filterfield');
                var filterfield = location.data('filterfield');
                var fieldlabel = location.data('fieldlabel');
                ns_OpenJobs.addSearch_tag(activity, ctrl_id, fieldName, filterfield, fieldlabel);
            }
            ModalHide(modal);
        }
        if (action == 'discard_search') {
            ModalHide(modal);

            ns_OpenJobs.resetControl();
            if ($('.searchTags').html() !== '')
                ns_OpenJobs.search();
            $('.searchTags').html('');
            $('.filterlabel').hide();
        }
        if (action == 'refresh') {
            pagenumber = 0;
            $('.searchTags').html('');
            $('.filterlabel').hide();
            ns_OpenJobs.search();
            ns_OpenJobs.resetControl();
        }
        if (action == 'showfilter') {
            fn_autocompleteLocation('txt_location', 'joblocation', 'filterAutocomplete');
        }
        if (action == 'delete' || action =='restore') {
            if ($(this).attr("data-text") == "Yes") {
                actionJobType = "";
                actionJobData = "";
                actionJobType = {
                    "Action": "Actions",
                    "Job_Type": tabStatus
                }
                actionJobData = {
                    "Action": ($(this).attr('data-action') == "delete" ? 'Delete' : 'Restore'),
                    "job_Id": $(this).attr('data-val'),
                };

                var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
                ns_OpenJobs.jobsActions(strFinal);
            }
            else {
                $('.modeldelete').modal('hide');
                $(".modal-backdrop").css('display', 'none');
            }
        }
    });   

    $(document).on('click', ".loadmore-myopenjobs", function () {
        pagenumber = pagenumber + 10;
        ns_OpenJobs.search('more');
    });
    $(document).on('click', ".ul-myopenjobs-tabs li a", function () {
        pagenumber = 0;
        JobStatus = jQuery(this).attr('data-status');
        ns_OpenJobs.search();
    });

    $(document).on("change", ".chkAllOpenJobs", function () {
        $("#my_openjobs_loadmore_placeholder input:checkbox").prop('checked', $(this).prop("checked"));
    });

    $(document).on('click', '.btn-openjob-action', function (evt) {
        var action = jQuery(this).attr('data-action');
        var jobid = jQuery(this).attr('data-id');
        if (action == 'view') {
            ns_OpenJobs.viewJobDetail(jobid, action);
        }
        if (action == 'jobapps') {
            ns_OpenJobs.viewJobApplications(jobid, action);
        }
        if (action == "delete" || action=="restore") {
            $("#lblJobId").html("Do you want to " + action + " the following job(s)?<br><br><span class='col-black'>JOB#:  " + jobid + "</span>");
            $("#popupDeleteHeading").html("Confirmation Message!")
            $("#btnPopYes").attr('data-val', jobid).attr('data-action', action);
            $(".modeldelete").modal("show");
        }
    });

    $(document).on('click', ".btn-job-apps", function () {
        actionJobType = ""; actionJobData = "";
        actionJobType = {
            "Action": "Actions",
            "send_email_to_employer": 1,
            "send_email_to_candidate": 1,
            "Job_Type": tabStatus,
        }
        var btnAction = $(this).attr('data-action');
        var jobid = $(this).attr('data-val');
        var cndid = $(this).attr('data-cnd-id');
        if (btnAction === 'appoint') {
            actionJobData = {
                "Job_Id": jobid,
                "Action": "Appoint",
                "Candidate_id": cndid
            }
        }
        if (btnAction === 'progress') {
            var subject = $("#txtJobAppsInProgressSubject").val();
            var message = $("#txtJobAppsInProgressBody").Editor("getText");
            actionJobData = {
                "Job_Id": jobid,
                "Action": "Progress",
                "Candidate_id": cndid,
                "subject": subject,
                "message": message
            }
        }
        else if (btnAction === 'decline') {
            actionJobData = {
                "Job_Id": jobid,
                "Action": "Decline",
                "Candidate_id": cndid
            }
        }
        var strFinal = "[" + JSON.stringify(actionJobData) + "," + JSON.stringify(actionJobType) + "]";
       
        //ns_jobs.jobs_actions(strFinal);
        ns_OpenJobs.jobsActions(strFinal);
    });
});
ns_OpenJobs = {
    jobsActions: function (params) {
        ns_ajax.post(
            urls.jobsApi + "post",
            params,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    ShowAlertMessage("Message", response.split('|')[1], "C");
                    $('.modeledit, .modelcomments, .modeldelete').modal('hide');                                          
                    $(".modal-backdrop").css('display', 'none');
                    var ParamData = JSON.parse(params);
                    var action = ParamData[0]['Action'];
                    var jobid = ParamData[0]['job_Id'];

                    if (action == 'Delete' || action =='Restore') {
                        $('#openjobrow-' + jobid).remove();                        
                    }

                    if (action == 'Complete') {
                        $('#ModalSysGenerateTimesheet').modal('show');
                        $(".modal-backdrop").css('display', 'block');
                        ns_Accounts.getTimesheet(jobid);
                    }
                }
            });
    },

    search: function (act) {
        var param = '', jobsCounter = 0, totalJobs = 0;

        if (act == 'more')
            $('.loadmore-myopenjobs').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#my_openjobs_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');

        param = ns_OpenJobs.getSearchParam();
        param = { json: param }
        ns_ajax.get(
            urls.bookedjobs,
            param,
            function (data) {
                $('.loadmore-myopenjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#my_openjobs_loadmore_template').tmpl(data.Response[0].jobs).appendTo('#my_openjobs_loadmore_placeholder');
                    }
                    else {
                        if (data.Response[0].jobs.length > 0) {
                            call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#my_openjobs_template', '#my_openjobs_placeholder');
                            ns_OpenJobs.TotalQty(data.Response[0].TotalCount);
                        }
                        else {
                            var msg = "Sorry ! we could't find any jobs matching your criteria..";
                            var link = "Try some different filters and search.";
                            $('#my_openjobs_placeholder').html(nodata2(msg, link));
                            $('.loadmore-myopenjobs').hide();
                            $('#jobs_found').html(jobsCounter);
                            $('#total_jobs').html(totalJobs);
                            ns_OpenJobs.TotalQty(null);
                        }
                    }
                    $.each(data.Response[0].jobs, function (key, value) {
                        jobsCounter = value.srno;
                        totalJobs = value.TotalRecord;
                    });
                    $('#jobs_found').html(jobsCounter);
                    $('#total_jobs').html(totalJobs);
                }
                else {
                    $('.loadmore-myopenjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                    var msg = "Sorry ! we could't find any jobs matching your criteria..";
                    var link = "Try some different filters and search.";
                    $('#my_openjobs_placeholder').html(nodata2(msg, link));
                    ns_OpenJobs.TotalQty(null);
                }

                if (jobsCounter < totalJobs)
                    $('.loadmore-myopenjobs').show();
                else
                    $('.loadmore-myopenjobs').hide();
            });

    },
    GetRoles: function (ctrl) {
        var params = "dro=der-dl";
        $(ctrl).html('<option value="">Select Role</option>');
        ns_ajax.get(
            urls.employeesApi,
            params,
            function (data) {
                if (data.Status === 'OK') {
                    var obj = data.Response;
                    $.each(obj.eroles, function (key, value) {
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        $(ctrl).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    })
                }
            }
        );
    },
    addSearch_tag: function (activity, ctrl_id, fieldName, filterfield, fieldlabel) {
        var ctrlValues = '', ctrlText = '';
        if (activity == 'filldropdown') {
            ctrlValues = $('#' + ctrl_id).val();
            ctrlText = $('#' + ctrl_id + " option:selected").text();
        }
        else if (activity == 'autocomplete') {
            ctrlValues = $('#' + ctrl_id).attr('data-item-id');
            ctrlText = $('#' + ctrl_id).val();
        }
        else {
            ctrlValues = ctrlText = $('#' + ctrl_id).val();
        }

        if (ctrlValues == '') {
            $('#' + ctrl_id).focus();
            return false;
        }
        else {
            var searchKey = fieldlabel;
            var searchValue = ctrlValues;
            var tag = '<span id="stag' + fieldName + '" class="btn btn-outline-info tmlabel opacity_8 stag  tagjobdate"> ' + fieldlabel + ' : <b data-field="' + searchKey + '" data-field-name="' + filterfield + '" data-searchtagval="' + searchValue + '" data-searchtagtext="' + ctrlText + '">' + ctrlText + '</b> <a id="stagCancel' + fieldName + '" class="cls_cross clsCancelTagOpenJob">x</a></span>';

            $('.searchTags').append(tag);
            $('.filterlabel').show();
        }
        ns_OpenJobs.search();

        $('.clsCancelTagOpenJob').on("click", function () {
            var id = $(this).attr('id').replace('stagCancel', '');
          
            $('#stag' + id).remove();
             ns_OpenJobs.search();
            if (id == 'job_id')
                $('#txt_job_id').val('');
            if (id == 'role_id')
                $('#ddl_job_role').val('');
            if (id == 'job_date')
                $('#txt_job_start_datetime').val('');
            if (id == 'shift_secured')
                $('#txt_shift_secured_datetime').val('');           
            if (id == 'location') {
                $('#txt_location').val('');
                $('#txt_location').attr('data-item-id', '');
            }
            if ($('.searchTags').html() == '') {
                $('.filterlabel').hide();
            }
        });
    },
    getSearchParam: function () {
        var param = '';
        JobType = JobType == 'N-L' ? 'A' : JobType;
        param = 'action:"openjobs","job_status":"' + JobStatus + '","offset": "' + pagenumber + '", "next": "' + pagesize + '",';
        $("div.searchTags span.stag b").each(function () {
            var key = $(this).attr('data-field-name');
            var val = $(this).attr('data-searchtagval');
            param += key + ':"' + val + '",';
        });
        param = param == '' ? param : param.slice(0, -1);
        if (param !== '') {
            param = '{' + param + '}';
        }
        return param;
    },
    resetControl: function () {
        $('#txt_job_id').val('');
        $('#ddl_job_role').val('');
        $('#txt_job_start_datetime, #txt_shift_secured_datetime').val('');       
        $('#txt_location').val('');
        $('#txt_location').attr('data-item-id', '');
    },

    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == null && $('.searchTags').html() !== '') {
            $('.cls-All, .cls-OFFLINE, .cls-LIVE, .cls-APPLIED, .cls-EXPIRED, .cls-DELETED').html('0');
        }
        else {
          
            if (obj.length == 1) {
                if ($('.searchTags').html() !== '') {
                    flag = true;
                    $('.cls-All, .cls-OFFLINE, .cls-LIVE, .cls-APPLIED, .cls-EXPIRED, .cls-DELETED').html('0');
                }
                else
                    flag = false;
            }
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);
                if (value.status == 'OFFLINE' || value.status == 'LIVE' || value.status == 'APPLIED' || value.status == 'EXPIRED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }
    },
    viewJobDetail: function (jobid, action) {
        $('#job_details_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsdetails,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#job_details_template', '#job_details_placeholder');
                }
                else {
                    var msg = "Sorry ! we could't find jobs deatils";
                    var link = "Try after some time.";
                    $('#job_details_placeholder').html(nodata2(msg, link));
                }
            }
        );
    },
    viewJobApplications: function (jobid, action) {
        $('#Job_Applications_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsdetails,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response, '/Template/jobs_tmpl.html', '#Job_Applications_Template', '#Job_Applications_Placeholder');
                }
                else {
                    var msg = "Sorry ! we could't find jobs application(s)";
                    var link = "Try after some time.";
                    $('#Job_Applications_Placeholder').html(nodata2(msg, link));
                }                 
            });
    },

}


/*************************************************
*     Conversation
* **********************************************/
$(document).ready(function () {
    $('.spanTotalConversationUnread').html(localStorage.getItem('totalunreadConversation'));
    $(document).on('click', '.cls-conversation-action', function (evt) {     
        var action = jQuery(this).attr('data-action');       
        if (action == 'view') {
            var job_id = jQuery(this).attr('data-id');          
            $('#spanjobid').html(job_id);
            $('#spanjobid').attr('job_id', job_id);       
            $('#message_placeholder, #divCurrentMember').html('');
            var param = '{"action":"members","job_id":"' + job_id + '"}';
            ns_Conversation.Members(param);
        }       
        if (action == 'get') {
            $('.cls-conversation-action').removeClass('active');
            $(this).addClass('active');
            var sender_id = $(this).attr('data-member_id');
            var sender_type = $(this).attr('data-member_type');
            $('#spanjobid').attr('reciever_id', sender_id);
            $('#spanjobid').attr('reciever_type', sender_type);
            var job_id = $('#spanjobid').attr('job_id');
            var name = $(this).attr('data-member_name');        

            var selectedUserHtml = '<div class="chat-header"><div class="user d-flex align-items-center"><img src="/images/profile.jpg" alt="avatar"/>' +
                '<div class="chat-about"><div class="chat-with">' + name+'</div><div id="divtotalChatMsg" class="chat-num-messages"></div></div></div></div>';
            $('#divCurrentMember').html(selectedUserHtml);

            var param = '{"action":"get","job_id":"' + job_id + '","sender_id":"' + sender_id + '","sender_type":"' + sender_type + '"}';
            ns_Conversation.Get(param);
        }
        if (action == 'post') {
            ns_Conversation.Comment();
        }
        if (action == "delete") {
            var id = $(this).attr('data-id');
            ns_Conversation.Delete(id);
        }
        
    });

    $(document).on('keydown', '#txt_conversation_comments', function (e) { 
        // Get the code of pressed key
        const keyCode = e.which || e.keyCode;       
        if (keyCode === 13 && !e.shiftKey) {
            e.preventDefault();
            ns_Conversation.Comment();
        }      
    });
    $(document).on('click', '.cls-add-tag', function () {
        $('#txt_conversation_comments').val($(this).html());
        $('#txt_conversation_comments').focus();
    });
   

});

ns_Conversation = {
    Comment: function () {      
        var job_id = $('#spanjobid').attr('job_id');
        var reciever_id = $('#spanjobid').attr('reciever_id');
        var reciever_type = $('#spanjobid').attr('reciever_type');
        var message = $('#txt_conversation_comments').val();
        if (message == '') {
            $('#txt_conversation_comments').focus();
            return false;
        }
        else if (reciever_id == '' || reciever_id == undefined) {
            ShowAlertMessage("Message", 'Please select member first', "");
            return false;
        }
        else {
            var obj = {};
            obj.action = 'create';
            obj.job_id = job_id;
            obj.reciever_id = reciever_id;
            obj.reciever_type = reciever_type;
            obj.message = message.replace("\n", "<br />", "g");
            var params = "[" + JSON.stringify(obj) + "]";            
            ns_Conversation.Post(params);
        }
    },
    Post: function (params) {
        ns_ajax.post(
            urls.conversation + "post",
            params,
            function (data) {
                if (data.Status=='OK') {
                  /*  ShowAlertMessage("Message",'Sent successfully', "C");*/
                    $('#txt_conversation_comments').val('');
                    if (data.Response[0].conversation.length > 0) {
                        jQuery('#message_template').tmpl(data.Response[0].conversation).appendTo('#message_placeholder');
                        ns_Conversation.scrollDown();
                    }
                }
            });
    },
    Delete: function (id) {
        var job_id = $('#spanjobid').attr('job_id');              
        if (id == '' || id == undefined) {
            ShowAlertMessage("Message", 'Error in deletion', "");
            return false;
        }
        else {
            var obj = {};
            obj.action = 'delete';
            obj.job_id = job_id;          
            obj.id = id;
            var params = "[" + JSON.stringify(obj) + "]";
            ns_ajax.post(
            urls.conversation + "post",
            params,
            function (data) {
                if (data.Status == 'OK') {
                    $('#liChat'+id).remove();
                    info('Deleted successfully.');
                }
            });
        }
    },
    Get: function (param) {
        var totalChatMsg = 0;
        $('#message_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/loading1.gif" /></div>');
        param = { json: param }
        ns_ajax.get(
            urls.conversation,
            param,
            function (data) {               
                if (data.Status == 'OK') {               
                    if (data.Response[0].conversation.length > 0) {
                        call_tmpl_binder(data.Response[0].conversation, '/Template/jobs_tmpl.html', '#message_template', '#message_placeholder');
                        setTimeout(
                            function () {
                                ns_Conversation.scrollDown();
                            }, 300);
                     
                    }
                    else {
                        //var msg = "No message found";
                        //var link = "";
                        //$('#message_placeholder').html(nodata2(msg, link));
                      $('#message_placeholder').html('');
                    }
                  
                    $.each(data.Response[0].conversation, function (key, value) {
                       if(value.name!=='You')
                           totalChatMsg = totalChatMsg+1;
                    });                   
                }
                else {                   
                    $('#message_placeholder').html('');
                    $('#divtotalChatMsg').html('');
                }
                $('#divtotalChatMsg').html(totalChatMsg + ' messages');
            });

    },
    Members: function (param) {
        var placeholder = '#members_placeholder';
        $(placeholder).html(ns_Conversation.loader());      
        param = { json: param }
        ns_ajax.get(
            urls.conversation,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    if (data.Response[0].members.length > 0) {
                        call_tmpl_binder(data.Response[0].members, '/Template/jobs_tmpl.html', '#members_template', placeholder);
                    }
                    else {
                        var msg = "Memmbers not available";
                        var link = "";
                        $(placeholder).html(nodata2(msg, link));
                    }                 
                }
                else {
                    var msg = "Memmbers not available";
                    var link = "";
                    $(placeholder).html(nodata2(msg, link));
                }               
            });

    },
    loader: function () {
        var str = '<div class="w-bg d-flex justify-content-start w-100" >'+
                        '<div>' +
                        '<span class="content-placeholder" style="width:30px; float:left; height:30px; margin-right:2px;border-radius:32px"></span>'+
                        '</div>'+
                        '<div style="width:190px">' +
                        '<span class="content-placeholder mb-1" style="width:100%; float:left; height:14px;"></span>' +
                        '<span class="content-placeholder" style="width:50%; float: left; height: 12px"></span>' +
                        '</div>'+
            '</div>';
        var html = '';
        for (var i = 1; i <= 9; i++) {
            html = html + str;
        }
        return html;
    },
    scrollDown: function () {
        $(".chat-history").stop().animate({ scrollTop: $(".chat-history")[0].scrollHeight }, 1000);
    },

    //Header Conversation notifications

    getConversations: function (msg_ids) {
        var totalUnreadmsg = 0;
        msg_ids = msg_ids == '' ? '0' : msg_ids;
        $('#TopConversation_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"notifications","section":"msgrequest","msg_ids":"' + msg_ids + '"}';
        var params = { json: param }         
        ns_ajax.get(
            urls.conversation,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    if (data.Response[0].conversation.length > 0) {
                        call_tmpl_binder(data.Response[0].conversation, '/Template/jobs_tmpl.html', '#TopConversationNotifications_Template', '#TopConversation_Placeholder');
                    }
                    else {
                        $('#TopConversation_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread messages</small></p></li>');
                    }

                    $.each(data.Response[0].conversation, function (key, value) {
                        totalUnreadmsg = totalUnreadmsg+1;
                    });
                }
                else {
                    $('#TopConversation_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread messages</small></p></li>');
                }
                localStorage.setItem('totalunreadConversation', totalUnreadmsg);
                $('.spanTotalConversationUnread').html(localStorage.getItem('totalunreadConversation'));
            });
    },

}
function copyToClipboard(element) {
    var $temp = $("<input>");
    $("body").append($temp);
    $temp.val($(element).text()).select();
    document.execCommand("copy");
    $temp.remove();
    info('Copied');
}



/*************************************************
*     Feedback
* **********************************************/

$(document).ready(function () {
    $(document).on("click", ".cls-feedback", function () {
        $('#FeedbackModal').modal('show');
        $('#txt_feed_name').val(readCookie('pname'));
        $('#txt_feed_email').val(readCookie('pemail'));
        $("#ddl_feed_feature").val('');
        $('input[name="rdo_feed_experience"][value="Very Good"]').prop('checked', true);
        $("#txt_feed_comments").val('');
        $('.FeedbackSection').show();
        $('.msgSection').hide();
        $('#btnSendfeedback').show();       
    });
    $(document).on("click", "#btnSendfeedback", function () {
        SystemFeedback.Post(this);
    });
});

SystemFeedback = {
    Post: function (evt) {
        var msg = "", flag = 0;
        var feed_name = $('#txt_feed_name').val();
        var feed_email = $('#txt_feed_email').val();
        var feed_feature = $('#ddl_feed_feature').find(":selected").val(); 
        var feed_experience = $('input[name="rdo_feed_experience"]:checked').val();
        var feed_comments = $("#txt_feed_comments").val();
      
        if (feed_name == "") {
            $("#txt_feed_name").focus();
            flag = 1;
            msg = "Enter name id";
        }
        else if (feed_email == "") {
            $("#txt_feed_email").focus();
            flag = 1;
            msg = "Enter email Id";
        }
        else if (!IsEmail(feed_email)) {
            $("#txt_feed_email").focus();
            flag = 1;
            msg = "Enter valid email id";
        }
        else if (feed_feature == '') {
            $("#ddl_feed_feature").focus();
            flag = 1;
            msg = "Select feedback feature";
        }
        else if (feed_feature == '') {
            $("#rdo_feed_experience").focus();
            flag = 1;
            msg = "Select feedback feature";
        }
        if (flag == 0) {                 
            var obj = {};
            obj.action = 'send';
            obj.sender_name = feed_name;
            obj.sender_email = feed_email;
            obj.feedback_feature = feed_feature;
            obj.sender_experience = feed_experience;
            obj.comment = feed_comments.replace(/(['"])/g, "\\$1");
            var params = "[" + JSON.stringify(obj) + "]";
          
            $(evt).html('Please wait...');
            $(evt).attr("disabled", true);

            ns_ajax.post(
                urls.feedback_v2 + "send",
                params,
                function (data) {
                    $(evt).attr("disabled", false);
                    $(evt).html('Send Feedback <b>&#8594;</b>');
                    if (data.Status == 'OK') {
                        ShowAlertMessage("Message", "feedback has been sent successfully", 'C');
                        $('.FeedbackSection').hide();
                        $('.msgSection').show();
                        $('#btnSendfeedback').hide();

                        $('#txt_feed_name').val('');
                        $('#txt_feed_email').val('');
                        $("#ddl_feed_feature").val('');
                        $('input[name="rdo_feed_experience"][value="Very Good"]').prop('checked', true);
                        $("#txt_feed_comments").val('');
                    }
                    else {                     
                        ShowAlertMessage("Required", msg, 'A');
                    }
                });
        }
        else {
            $(evt).attr("disabled", false);
            $(evt).html('Send Feedback <b>&#8594;</b>');
            ShowAlertMessage("Message",msg, 'A');
        }
    }, 
};



/*************************************************
*     Activities Logs
* **********************************************/

$(document).ready(function () {
    $('.spanTotalCriticalActivityUnread').html(localStorage.getItem('totalunreadLogs'));
    $(document).on("change", "#ddl_event_modules", function () {
        ns_ActivitiesLog.getEventLogs();
    });
    $(document).on("change", "#ddl_event_priority", function () {
        ns_ActivitiesLog.getEventLogs();
    });
    $(document).on('click', ".loadmoreEvents", function () {
        pagenumber = pagenumber + 10;
        ns_ActivitiesLog.getEventLogs('more');
    });

    $(document).on('click', ".cls-event-logs", function (evt) {
        var action = $(this).data('action');
        if (action == 'search') {
            pagenumber = 0;
            ns_ActivitiesLog.getEventLogs();
        }
        if (action == 'refresh') {
            pagenumber = 0;
            $('#ddl_event_priority,#ddl_event_modules, #txt_event_date').val('');
            ns_ActivitiesLog.getEventLogs();
        }
    });

    
});

ns_ActivitiesLog = {
    getCriticalActivityLogs: function (msg_ids) {
      
        var totalUnreadmsg = 0;
        msg_ids = msg_ids == '' ? '' : msg_ids;
        $('#TopCriticalActivity_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = '{"action":"critical_activities","priority":"0","msg_ids":"' + msg_ids + '"}';       
        var params = { json: param }
        ns_ajax.get(
            urls.activitylog,
            params,
            function (data) {
                //data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    if (data.Response[0].message_list.length > 0) {
                        call_tmpl_binder(data.Response[0].message_list, '/Template/activity_tmpl.html', '#TopCriticalActivityNotifications_Template', '#TopCriticalActivity_Placeholder');
                    }
                    else {
                        $('#TopCriticalActivity_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread activities</small></p></li>');
                    }

                    $.each(data.Response[0].message_list, function (key, value) {
                        totalUnreadmsg = value.TotalRecord;
                    });
                }
                else {
                    $('#TopCriticalActivity_Placeholder').html('<li class="header font-16 font-bold text-center p-2 "><img src="/images/sentemail.png" /> <br><p class="col-blue"><small>You have no unread activities</small></p></li>');
                }
                localStorage.setItem('totalunreadLogs', totalUnreadmsg);
                $('.spanTotalCriticalActivityUnread').html(localStorage.getItem('totalunreadLogs'));
            });
    },
    getEventMaster: function (ctrl) {
        $(ctrl).html('<option value="">All Modules</option>');
        var param = '{"action":"events_master"}';
        var params = { json: param }
        ns_ajax.get(
            urls.activitylog,
            params,
            function (data) {
                if (data.Status == 'OK') {
                    $.each(data.Response[0].masters, function (key, value) {
                        $(ctrl).append('<option value=' + value.code + '>' + value.title + '</option>');
                    })
                }
            });
    },
    getEventLogs: function (act) {
        var LogCounter=0,totalLog = 0,log_priority = '', log_code = '', log_date='';
        log_code = $('#ddl_event_modules option:selected').val();
        log_priority = $('#ddl_event_priority option:selected').val();
        log_date = $('#txt_event_date').val();
        if (act == 'more')    
            $('.loadmoreEvents').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#EventLogs_Placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
     
        var param = '{"action":"search","log_priority":"' + log_priority + '","log_code":"' + log_code + '" ,"log_date":"' + log_date + '","offset": "' + pagenumber + '", "next": "' + pagesize + '"}';
        var params = { json: param }
        ns_ajax.get(
            urls.activitylog,
            params,
            function (data) {
                $('.loadmoreEvents').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#EventLogsMore_Template').tmpl(data.Response[0].message_list).appendTo('#EventLogs_Placeholder');
                    }
                    else {
                        if (data.Response[0].message_list.length > 0) {
                            call_tmpl_binder(data.Response[0], '/Template/activity_tmpl.html', '#EventLogs_Template', '#EventLogs_Placeholder');
                        }
                        else {
                            var msg = "Sorry ! we could't find any event logs matching your criteria..";
                            var link = "Try some different filters and search.";
                            $('#EventLogs_Placeholder').html(nodata2(msg, link));
                        }
                    }

                    $.each(data.Response[0].message_list, function (key, value) {
                        LogCounter = value.srno;
                        totalLog = value.TotalRecord;
                    });
                    $('#eventlogs_found').html(LogCounter);
                    $('#total_eventlogs').html(totalLog);

                    setTimeout(
                        function () {
                            $(document).on('click', ".viewmore_log_data", function (evt) {
                                var dataid = $(this).data('id');
                                jQuery('#' + dataid).toggle();
                                var data_json = $(this).attr('data-json');
                                jQuery('#' + dataid).html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
                                jQuery('#' + dataid).html(data_json);
                                var datalogjson = JSON.parse(data_json);                                
                                call_tmpl_binder(datalogjson, '/Template/activity_tmpl.html', '#viewLogdata_Template', '#' + dataid);
                                                              
                            });

                            toolTIP();
                        }, 300);
                   
                }
                else {
                    $('.loadmoreEvents').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                    var msg = "Sorry ! we could't find any event logs matching your criteria..";
                    var link = "Try some different filters and search.";
                    $('#EventLogs_Placeholder').html(nodata2(msg, link));                   
                }

                if (LogCounter < totalLog)
                    $('.loadmoreEvents').show();
                else
                    $('.loadmoreEvents').hide();
               
            });
    },    
};




/*************************************************
*      subscription
* **********************************************/

$(document).ready(function () {
    var url = window.location.pathname;   
    if (url !== '/Settings/Subscription')
        ns_subscription.NotifySubscriptionExpiry();
     
    $(document).on('click', ".cls-subscription-plan", function (evt) {
        var action = $(this).attr('data-action');
        if (action == 'gotoplanlist') {
            $('#divSubscriptionDetails').hide();
            $('#divPlanList').show();
            $('.step__1').show();
            $('.step__2').hide();
            $('.step__3').hide();
            ns_subscription.GetPlans();
        }
        if (action == 'back') {
            $('#divPlanList').hide();
            $('#divSubscriptionDetails').show();
        }
        if (action == 'switch' || action == 'renewnow') {
            var planJson = $(this).attr('data-plan-json');
            var objData = $.parseJSON(planJson);
            var plan_uid = $(this).attr('data-id');
            var subscription_type = $('input[name="rdo_subs_type"]:checked').val();         
            var total_users = $("#ddl_total_user"+ plan_uid+" option:selected").val();           
            if (subscription_type =='') {
                $('input[name="rdo_subs_type"]').focus();
                ShowAlertMessage("Message", "Select any one subscription plan Monthly or Yearly", "A");
                return false;
            }
            else if (total_users == 0 || total_users == undefined) {
                $('#ddl_total_user' + plan_uid).focus();
                ShowAlertMessage("Message", "How many users do you have?", "A");
                return false;
            }
            else {

                var param = '{"action":"CHECK_CURRENT_EMPLOYEES","request_subscription_units":"' + total_users + '"}';
                param = { json: param }
                ns_ajax.get(
                    urls.subscription,
                    param,
                    function (data) {
                        if (data.Status == 'OK') {
                            $('#btn_make_payment').attr('plan', plan_uid);
                            $('#btn_make_payment').attr('subs_type', subscription_type);
                            $('#btn_make_payment').attr('total_users', total_users);

                            objData[0].total_users = total_users;
                            objData[0].subs_type = subscription_type == 'm' ? 'Monthly' : subscription_type == 'y' ? 'Yearly' : "NA";
                            objData[0].plan_validity_in_days = subscription_type == 'y' ? 365 : objData[0].plan_validity_in_days;

                            call_tmpl_binder(objData[0], '/Template/subscription_tmpl.html', '#SelectedPlanDetails_Template', '#SelectedPlanDetails_Placeholder');
                            ns_subscription.GetBillingAddress();
                            $('.step__1').hide();
                            $('.step__2').show();
                        }
                        else {
                            ShowAlertMessage("", data.Error, "center");
                        }
                    });              
            }
        }      
        if (action == 'step3') {
            var billing_uid = $('#btneditbillAddr').attr('data-billing_uid');   
            if (billing_uid == '0') {
                ShowAlertMessage("Message", 'Required billing details', "A");
                $("#txt_billing_first_name").focus();
                $('.billing_view, .btb__edit').hide();
                $('.billing_edit, .cross').show('slow');               
            }
            else {
                $('.step__1').hide();
                $('.step__2').hide();
                $('.step__3').show();              
            }
        }        
        if (action == 'cancel') {
            $('#divPaymentdetails').hide();
            $('.step__1').hide();
            $('.step__2').hide();
            $('.step__3').hide();
            $('#divSubscriptionDetails').show();
        }
        if (action == 'makepayment') {
            var plan_id = $(this).attr('plan');
            var subs_type=$(this).attr('subs_type');
            var total_users=$(this).attr('total_users');
            
            var method = $("#ddl_payment_methods").val();
            var provider = $('input[name="rdo_provider"]:checked').val();           
            var term = $("#payment_terms").prop('checked') ? 1 : 0;     
                       
            if (plan_id == '') {
                ShowAlertMessage("Message", "Please first select the subscription plan", "A");
                return false;
            }
            else if (method == '') {
                $("#ddl_payment_methods").focus();
                ShowAlertMessage("Message", "Select payment method", "A");
                return false;
            }
            else if (provider == '') {
                $('input[name="rdo_provider"]').focus();
                ShowAlertMessage("Message", "Select the provider", "A");
                return false;
            }
            else if (term == 0) {
                $("#payment_terms").focus();
                ShowAlertMessage("Message", "Are you agree with payment terms and conditions?", "A");
                return false;
            }
            else {
                var obj = {};
                obj.action = 'makepayment';
                obj.plan_id = plan_id;
                obj.subs_type = subs_type;
                obj.total_users = total_users;             
                obj.method = method;
                obj.provider = provider;             
                var param = "[" + JSON.stringify(obj) + "]";          
                ns_subscription.makepayment(param,evt);
            }
        }

        

        if (action == 'subs_cancel_request') {
            var subscription_id = $(this).attr('data-id');
            $('#btncalcelesubs').attr('data-id', subscription_id);
            $('.spansubsid').html($(this).data('id'));
            $('.spansubsPlan').html($(this).data('plan_name'));
            $('.spansubsType').html($(this).data('subscription_type'));
            $('.spanCancellationEffectiveDate').html($(this).data('cancellation_effective_date'));
            $('#cancelSubscription').modal();
        }

        if (action == 'subscription_cancellation_reason') {
            var reason = $('input[name="rdo_subs_cancel_reason"]:checked').val();           
            if (reason == '' || reason ==undefined) {
                ShowAlertMessage("Message", "Select a reason, please tell us why you're cancel.", "A");
                return false;
            }
            else {       

                $('#divsubscription_cancel_reason').html(reason);
                var evt_hide = $(this).data('hide');
                var evt_show = $(this).data('show');
                if (evt_hide != "") { $(evt_hide).hide(); }
                if (evt_show != "") { $(evt_show).show('slow'); }            
            }
        }
        

        if (action == 'cancel_subscription') {
            var subscription_id = $(this).attr('data-id');        
            var reason = $('input[name="rdo_subs_cancel_reason"]:checked').val();
            var term = $("#chk_cancelation_subs_terms").prop('checked') ? 1 : 0;

            if (subscription_id == '') {
                ShowAlertMessage("Message", "Required subscription id", "A");
                return false;
            }
          
            if (reason == '' || reason == undefined) {
                ShowAlertMessage("Message", "Go to previous step and select reason,", "A");
                return false;
            }
            else if (term == 0) {
                $("#chk_cancelation_subs_terms").focus();
                ShowAlertMessage("Message", "please tick the terms and conditions?", "A");
                return false;
            }
            else {
                var obj = {};
                obj.action = 'cancelsubscription';
                obj.subscription_id = subscription_id;
                obj.reason = reason;             
                var param = "[" + JSON.stringify(obj) + "]";
                ns_subscription.CancelSubscription(param, evt);
            }
        }        

        if (action == 'invoices') {
            page_number = 0;
            $('.loadmoreSubsInvoices').hide();
            ns_subscription.GetInvoices();
        }
        if (action == 'orders') {
            page_number = 0;
            $('.loadmoreSubsOrders').hide();
            ns_subscription.GetOrders();
        }
        if (action == 'billinginfo') {
            ns_subscription.GetBillingAddress();
        }
        if (action == 'view_invoice') {
            var ord_uid = $(this).attr('data-ord-uid');            
            ns_subscription.ViewInvoice(ord_uid);
        }
        if (action == 'view_plan_details') {
            var plan_uid = $(this).attr('data-plan-uid');
            ns_subscription.ViewPlanDetails(plan_uid);
        }       
        
    });
    
    $(document).on('click', ".clsRenewAccount", function () {
        var action = $(this).attr('data-action');
        if (action == 'next') {
            window.location.href = "/Settings/Subscription#renew";
            $('#divRenewalAlert').hide();           
        }
        if (action == 'renew') {
            ns_subscription.GetAccountRenewInfo();
            $('#divRenewalAlert').hide();
            $('#CndRenewalPlanDetals_Placeholder').show();
        }
        if (action == 'ordernow') {
            ns_subscription.GeneratePaymentOrder();
        }
        if (action == 'getplan') {
            ns_subscription.GetsubscriptionPlans();
        }
        if (action == 'changemembership') {
            ns_subscription.ChangeMembership();
        }
        if (action == 'back') {
            $('#subscriptionPlans_placeholder').hide();
            $('#divCancelMembershipBlock').hide();
            $('#divCancelMembershipSuccessMessage').hide();

            $('#divSubsPlan').show('slow');
        }
        if (action == 'cancelsubscrition') {
            $('#divSubsPlan').hide();
            $('#divCancelMembershipBlock').show('slow');
        }
        if (action == 'cancelnow') {
            if ($("input[name='rdoCancelReason']").is(":checked") == false) {
                ShowAlertMessage('Required', 'Please Select Reason for leaving', 'A');
                $("input[name='rdoCancelReason']:checked").focus();
                return false;
            }
            else {
                var reason = $("input[name='rdoCancelReason']:checked").val();
                if (reason == 'Other' && $('#txtsubsCancelReason').val().trim() == '') {
                    ShowAlertMessage('Required', 'Write other reason', 'A');
                    $('#txtsubsCancelReason').focus();
                    return false;
                }
                else {
                    ns_subscription.CancelMembership(reason, $('#txtsubsCancelReason').val().trim());
                }
            }
        }
    });

    $(document).on('change', "#ddl_subscription_plan", function () {
        var JsonData = this.selectedOptions[0].getAttribute('data-plan_details');
        $('#PlanDetails_Placeholder').html('Loading...<img src="/images/spin.gif" />');       
        if (JsonData == '' || JsonData == null)
            $('#PlanDetails_Placeholder').html('');
        else
           call_tmpl_binder(jQuery.parseJSON(JsonData), '/Template/subscription_tmpl.html', '#PlanDetails_Template', '#PlanDetails_Placeholder');

    });

    $(document).on("click", ".ClsBillingDetails", function (evt) {
        var action = $(this).attr('data-action');    
        if (action == 'update') {
            var billing_uid = $(this).attr('data-billing_uid').trim();
            var first_name = $("#txt_billing_first_name").val().trim();
            var last_name = $("#txt_billing_last_name").val().trim();
            var company = $("#txt_billing_company").val().trim();
            var Email = $("#txt_billing_email").val().trim();
            var Mobile = $("#txt_billing_mobile").val().trim();
            var LocationName = '';//$("#txt_billing_location").val().trim();
            var Postcode = $("#txt_billing_postcode").val().trim();
            var ddlAddres = $("#selectBillingAddrList2").val();
            var Address = $("#txt_billing_address1").val().trim();
            var vat = $("#txt_billing_vat").val().trim();
            

            if (first_name == '') {
                $("#txt_billing_first_name").focus();
                ShowAlertMessage("Message", "Enter first name !", "A");
                return false;
            }
            if (first_name !== '' && first_name.length<3) {
                $("#txt_billing_first_name").focus();
                ShowAlertMessage("Message", "First name should be minimum 3 chars long!", "A");
                return false;
            }
            if (last_name == '') {
                $("#txt_billing_last_name").focus();
                ShowAlertMessage("Message", "Enter last name !", "A");
                return false;
            }

            //if (company == '') {
            //    $("#txt_billing_company").focus();
            //    ShowAlertMessage("Message", "Enter company name !", "A");
            //    return false;
            //}
            if (Email == '') {
                ShowAlertMessage("Message", "Enter biling email Id", "A");
                $("#txt_billing_email").focus();
                return false;
            }
            if (Email != '' && IsEmail(Email) == false) {
                ShowAlertMessage("Message", "Enter correct email.", "A");
                $("#txt_billing_email").focus();
                return false;
            }
            //if (Mobile !== '' && (Mobile.length < 10 || Mobile.length > 11)) {
            //    ShowAlertMessage("Message", "Enter correct mobile number.", "A");
            //    $("#txt_billing_mobile").focus();
            //    return false;
            //}
            //if (LocatinName == '') {
            //    $("#txt_billing_location").focus();
            //    ShowAlertMessage("Message", "Enter location name !", "A");
            //    return false;
            //}
            if (Postcode == '') {
                $("#txt_billing_postcode").focus();
                ShowAlertMessage("Message", "Enter Postcode !", "A");
                return false;
            }
           
            if (ddlAddres == '') {
                $("#selectBillingAddrList2").focus();
                ShowAlertMessage("Message", "Select address !", "A");
                return false;
            }
            var obj = {};
            obj.action = 'billing_details';
            obj.location_id = billing_uid;
            obj.first_name = first_name;
            obj.last_name = last_name;
            obj.company = company;            
            obj.email = Email;
            obj.mobile = Mobile;            
            obj.location_name = LocationName;
            obj.postcode = Postcode;
            obj.address1 = Address;
            obj.city = $("#txt_billing_city").val().trim();
            obj.country = $("#txt_billing_county").val().trim();
            obj.vat = vat;
            var param = "[" + JSON.stringify(obj) + "]";
            ns_subscription.InsertUpdateBillingDetails(param,evt);
        }
        if (action == 'update_tab') {
            var billing_uid = $(this).attr('data-billing_uid').trim();
            var first_name = $("#tab_txt_billing_first_name").val().trim();
            var last_name = $("#tab_txt_billing_last_name").val().trim();
            var company = $("#tab_txt_billing_company").val().trim();
            var Email = $("#tab_txt_billing_email").val().trim();
            var Mobile = $("#tab_txt_billing_mobile").val().trim();
            var LocationName = '';//$("#tab_txt_billing_location").val().trim();
            var Postcode = $("#tab_txt_billing_postcode").val().trim();
            var ddlAddres = $("#tab_selectBillingAddrList2").val();
            var Address = $("#tab_txt_billing_address1").val().trim();
            var vat = $("#tab_txt_billing_vat").val().trim();


            if (first_name == '') {
                $("#tab_txt_billing_first_name").focus();
                ShowAlertMessage("Message", "Enter first name !", "A");
                return false;
            }
            if (first_name !== '' && first_name.length < 3) {
                $("#tab_txt_billing_first_name").focus();
                ShowAlertMessage("Message", "First name should be minimum 3 chars long!", "A");
                return false;
            }
            if (last_name == '') {
                $("#tab_txt_billing_last_name").focus();
                ShowAlertMessage("Message", "Enter last name !", "A");
                return false;
            }

            //if (company == '') {
            //    $("#tab_txt_billing_company").focus();
            //    ShowAlertMessage("Message", "Enter company name !", "A");
            //    return false;
            //}
            if (Email == '') {
                ShowAlertMessage("Message", "Enter biling email Id", "A");
                $("#tab_txt_billing_email").focus();
                return false;
            }
            if (Email != '' && IsEmail(Email) == false) {
                ShowAlertMessage("Message", "Enter correct email.", "A");
                $("#tab_txt_billing_email").focus();
                return false;
            }
            //if (Mobile !== '' && (Mobile.length < 10 || Mobile.length > 11)) {
            //    ShowAlertMessage("Message", "Enter correct mobile number.", "A");
            //    $("#tab_txt_billing_mobile").focus();
            //    return false;
            //}
            //if (LocatinName == '') {
            //    $("#tab_txt_billing_location").focus();
            //    ShowAlertMessage("Message", "Enter location name !", "A");
            //    return false;
            //}
            if (Postcode == '') {
                $("#tab_txt_billing_postcode").focus();
                ShowAlertMessage("Message", "Enter Postcode !", "A");
                return false;
            }

            if (ddlAddres == '') {
                $("#tab_selectBillingAddrList2").focus();
                ShowAlertMessage("Message", "Select address !", "A");
                return false;
            }
            var obj = {};
            obj.action = 'billing_details';
            obj.location_id = billing_uid;
            obj.first_name = first_name;
            obj.last_name = last_name;
            obj.company = company;
            obj.email = Email;
            obj.mobile = Mobile;
            obj.location_name = LocationName;
            obj.postcode = Postcode;
            obj.address1 = Address;
            obj.city = $("#tab_txt_billing_city").val().trim();
            obj.country = $("#tab_txt_billing_county").val().trim();
            obj.vat = vat;
            var param = "[" + JSON.stringify(obj) + "]";
            ns_subscription.InsertUpdateBillingDetails(param, evt);
        }
        
    });
    
    $(document).on('click', '#btnFindBillingAddress', function () {
        var postcode = $("#txt_billing_postcode").val();
        var townid = $('#txt_billing_city');
        var countyid = $('#txt_billing_county');
        var ddladdress = $("#selectBillingAddrList2");
        if (postcode == '') {
            $(".txtPostcode").focus()
            ShowAlertMessage("Message", "Enter Postcode", "A");
            return false;
        }
        else
            AddressFinder.Finder(postcode, townid, countyid, ddladdress);
    });

    $(document).on('click', '#tab_btnFindBillingAddress', function () {
        var postcode = $("#tab_txt_billing_postcode").val();
        var townid = $('#tab_txt_billing_city');
        var countyid = $('#tab_txt_billing_county');
        var ddladdress = $("#tab_selectBillingAddrList2");
        if (postcode == '') {
            $(".txtPostcode").focus()
            ShowAlertMessage("Message", "Enter Postcode", "A");
            return false;
        }
        else
            AddressFinder.Finder(postcode, townid, countyid, ddladdress);
    });
    

    $(document).on('change', '#selectBillingAddrList2', function () {
        var address = $(this).val();
        if (address == "") {
            $(".divaddress2").hide();
            $("#txt_billing_address1").val('');         
        }
        else if (address == "other") {
            $(".divaddress2").show();
            $("#txt_billing_address1").val('');        
        }
        else {
            $(".divaddress2").show();
            $("#txt_billing_address1").val(address);          
        }
    });

    $(document).on('change', '#tab_selectBillingAddrList2', function () {
        var address = $(this).val();
        if (address == "") {
            $(".divaddress2").hide();         
            $("#tab_txt_billing_address1").val('');
        }
        else if (address == "other") {
            $(".divaddress2").show();        
            $("#tab_txt_billing_address1").val('');
        }
        else {
            $(".divaddress2").show();         
            $("#tab_txt_billing_address1").val(address);
        }
    });
    $(document).on('change', '#ddl_payment_methods', function () {
        var method = $(this).val();
        ns_subscription.getPaymentMethods('#payment_method_list', method);
    });
    $(document).on('change', '#payment_terms', function () {    
        if (this.checked) {
            $('#btn_make_payment').removeClass('disabled');
        }
        else {
            $('#btn_make_payment').addClass('disabled');
        }      
    });

    $(document).on('click', ".loadmoreSubsInvoices", function () {
        page_number = page_number + 10;     
        ns_subscription.GetInvoices('more');
    });

    $(document).on('change', "input[name=rdo_subs_type]", function () {
        ns_subscription.calculater();
    });

    $(document).on('change', ".ddl_total_user", function () {
      
        ns_subscription.calculater();
    });

    //Orders
    $(document).on('click', ".loadmoreSubsOrders", function () {
        page_number = page_number + 10;
        ns_subscription.GetOrders('more');
    });  
});


ns_subscription = {
    calculater: function () {
        var value = $('input[name=rdo_subs_type]:checked').val();
        $('.plan_cost_per_employee').each(function () {
            var plan_uid = $(this).attr('data-planuid');
            var cost_per_employee = $(this).attr('data-cost_per_employee');
            var offer_discount_percent = $(this).attr('data-offer_discount_percent');
            var total_users = $("#ddl_total_user" + plan_uid).val();
            cost_per_employee = (cost_per_employee * total_users);
            var amount_discount = ((cost_per_employee * offer_discount_percent) / 100.0);
            var cost_per_employee_after_discount = (cost_per_employee - amount_discount);
            if (value == 'y') {
                $('#span_cost_per_employee_' + plan_uid).html(cost_per_employee_after_discount*12);
                $('#span_subs_type' + plan_uid).html('/ year');               

                $('#lbl_offer_discount' + plan_uid).html('<del class="col-red font-14"><b class="col-grey">£' + (cost_per_employee*12) + '</b></del>  Save up to ' + offer_discount_percent + ' %');
                $('#lbl_billed' + plan_uid).html('Billed yearly');
            }
            else {
                $('#span_cost_per_employee_' + plan_uid).html(cost_per_employee);
                $('#span_subs_type' + plan_uid).html('/ month');
                $('#lbl_offer_discount' + plan_uid).html('');
                $('#lbl_billed' + plan_uid).html('Billed monthly');
            }          
        });
    },

    // Subscription
    GetDetails: function (order_uid) {
        order_uid = order_uid == undefined ? '' : order_uid;
        $('#empSubsDetails_placeholder').html(waitcal());
        var param = '{"action":"details","order_uid":"' + order_uid + '"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {             
                if (data.Status == 'OK') {

                    call_tmpl_binder(data.Response[0], '/Template/subscription_tmpl.html', '#empSubsDetails_Template', '#empSubsDetails_placeholder');
                    var account_left_days_of_expiry =data.Response[0].subscription_details[0].account_left_days_of_expiry;
                    setTimeout(
                        function () {
                            $('.nav-tabs > li a').click(function () {
                                $('.nav-tabs > li').removeClass('active');
                                $(this).parent().addClass('active');
                                $('.nav-tabs').toggleClass('open');
                            });
                            if (data.Response[0].subscription_details.length == 0) {
                                $('#divSubscriptionDetails').show();
                                $('#divPlanList').hide();
                                ns_subscription.GetPlans();                    
                            }

                            //Renew Option
                            var renew_now = $(location).attr('hash');
                            if (renew_now == '#renew') {
                                //$('#divSubscriptionDetails').hide();
                                //$('#divPlanList').show();
                                $('#divSubscriptionDetails').show();
                                $('#divPlanList').hide();
                                ns_subscription.GetPlans();
                            }


                            if (account_left_days_of_expiry < 0) {
                                $("#leftsidebar, #ulSettingNav_Placeholder").addClass('blur');
                            }
                            else {
                                $("#leftsidebar, #ulSettingNav_Placeholder").removeClass('blur');
                            }
                            
                        }, 300);
                }
                else {
                    $('#empSubsDetails_placeholder').html('<div colspan="10" style="text-align:center;"><span>' + data.Error + '</span></div>');
                }
            });
    },

    // Plan List
    GetPlans: function () {
        $('#PlanList_Placeholder').html('<div style="text-align:center; width:100%;">Loading plans...<img src="/images/spin.gif" />');
        var param = '{"action":"fillddl"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/subscription_tmpl.html', '#PlanList_Template', '#PlanList_Placeholder');
                }
                else {
                    $('#PlanList_Placeholder').html('<div style="text-align:center;"><span>' + data.Error + '</span></div>');
                }
            });
    },

    ViewPlanDetails: function (plan_uid) {
        $('#SubsPlanDetails_placeholder').html('Loading...');
        var param = '{"action":"plan_details","plan_uid":"' + plan_uid + '"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    if (data.Response[0].plan_details.length > 0)
                        call_tmpl_binder(data.Response[0].plan_details[0], '/Template/subscription_tmpl.html', '#PlanDetails_Template', '#SubsPlanDetails_placeholder');
                    else
                        $('#SubsPlanDetails_placeholder').html('<div colspan="10" style="text-align:center;"><span>' + data.Error + '</span></div>');

                }
                else {
                    $('#SubsPlanDetails_placeholder').html('<div colspan="10" style="text-align:center;"><span>' + data.Error + '</span></div>');
                }
            });
    },

    Actions: function (Param, evt) {
        var objReq = jQuery.parseJSON(Param)[0];
        var action = objReq.action.toLowerCase();
        var btnid = evt.target.getAttribute("id");
        var modal_id = evt.target.getAttribute("data-modal_id");

        if (action == "order")
            $('#' + btnid).html('Process...<img src="/images/spin.gif" />');

        ns_ajax.post(
            urls.settings,
            Param,
            function (data) {
                if (action == "order")
                    $('#' + btnid).html('Submit');

                data = jQuery.parseJSON(data);
                if (data.Status == 'OK') {
                    var msg = action + ' has been processed successfully.';
                    ShowAlertMessage("Message", msg, "C");
                    ModalHide('#' + modal_id);

                    if (action == 'order') ns_employer.GetEmployers();
                }
                else
                    ShowAlertMessage("Message", data.Error, "A");
            });
    },

    // invoices
    GetOrders: function (act) {
        var sr_no = 0, total_recods = 0;
        if (act == 'more')
            $('.loadmoreSubsOrders').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#OrdersList_Placeholder').html('<div style="text-align:center; width:100%;">Loading Orders...<img src="/images/spin.gif" />');
        var param = '{"action":"get_orders","offset":"' + page_number + '","next":"' + page_size + '"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                $('.loadmoreSubsOrders').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {                     
                        jQuery('#OrdersListMore_Template').tmpl(data.Response[0]).appendTo('#OrdersListMore_Placeholder');
                    }
                    else
                        call_tmpl_binder(data.Response[0], '/Template/subscription_tmpl.html', '#OrdersList_Template', '#OrdersList_Placeholder');


                    $.each(data.Response[0].orders, function (key, value) {
                        total_recods = value.total_recods;
                        sr_no = value.srno;
                    });
                }
                else {
                    var msg = "Order(s) not found.";
                    var link = "";
                    $('#OrdersList_Placeholder').html(nodata2(msg, link));
                }             

                if (sr_no < total_recods)
                    $('#loadmoreSubsOrders').show();
                else
                    $('#loadmoreSubsOrders').hide();
            });
    },

    // invoices
    GetInvoices: function (act) {
        var sr_no = 0, total_recods = 0;
        if (act == 'more')
            $('.loadmoreSubsInvoices').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#InvoicesList_Placeholder').html('<div style="text-align:center; width:100%;">Loading Invoices...<img src="/images/spin.gif" />');
        var param = '{"action":"invoice","offset":"' + page_number + '","next":"' + page_size + '"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                $('.loadmoreSubsInvoices').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#InvoicesListMore_Template').tmpl(data.Response[0]).appendTo('#InvoicesListMore_Placeholder');
                    }
                    else
                       call_tmpl_binder(data.Response[0], '/Template/subscription_tmpl.html', '#InvoicesList_Template', '#InvoicesList_Placeholder');


                    $.each(data.Response[0].invoices, function (key, value) {
                        total_recods = value.total_recods;
                        sr_no = value.srno;
                    });
                }
                else {
                    var msg = "Invoice(s) not found.";
                    var link = "";
                    $('#InvoicesList_Placeholder').html(nodata2(msg, link));                    
                }
              
                if (sr_no < total_recods)
                    $('#loadmoreSubsInvoices').show();
                else
                    $('#loadmoreSubsInvoices').hide();


            });
    },

    ViewInvoice: function (order_uid)
    {
        $('#SusbscriptionInvoice_placeholder').html('Loading...');          
        var param = '{"action":"invoice_details","order_uid":"' + order_uid + '"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {               
                if (data.Status == 'OK') {
                   
                    if (data.Response[0].invoice_details.length>0)
                        call_tmpl_binder(data.Response[0].invoice_details[0], '/Template/subscription_tmpl.html', '#SusbscriptionInvoice_Template', '#SusbscriptionInvoice_placeholder');
                    else 
                        $('#SusbscriptionInvoice_placeholder').html('<div colspan="10" style="text-align:center;"><span>' + data.Error + '</span></div>');
                   
                }
                else {
                    $('#SusbscriptionInvoice_placeholder').html('<div colspan="10" style="text-align:center;"><span>' + data.Error + '</span></div>');
                }
            });
    },
    /******************Payments******************/
    //Account Subscription Expiry (Subscription Renewal)
    NotifySubscriptionExpiry: function () {
        var param = '{"action":"get_renewal_notification"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {              
                if (data.Status == 'OK') {
                    var objData = data.Response[0];
                    //Cancelled                    
                    if (objData.subscription_cancelled_notification.length > 0) {
                        $.each(objData.subscription_cancelled_notification, function (key, value) {
                            var btn = '<a id="btnsubsRenewal" class="clsRenewAccount" data-action="next" style="font-size: 15px;text-decoration:underline;">clicking here</a>'
                            $('#spanAccountRenewalTitle').html(value.subject);
                            $('#divAccountRenewalMessageStripContent').html('<i class="fa fa-exclamation-triangle col-red"></i> '+value.template_structure.replace("{link}", btn));
                            $('#divAccountRenewalMessageStrip').show();
                            var account_left_days_of_expiry = value.account_left_days_of_expiry;
                            //if (account_left_days_of_expiry < 0)
                            //    window.location = "/Settings/Subscription";

                        });
                    }
                    else {
                        $('#divAccountRenewalMessageStripContent').html('');
                        $('#divAccountRenewalMessageStrip').hide();
                    }

                    //Expired/ Expiring
                    if (objData.subscription_expiring_notification.length > 0) {
                        $.each(objData.subscription_expiring_notification, function (key, value) {

                            var account_left_days_of_expiry = value.account_left_days_of_expiry;
                            if (account_left_days_of_expiry < 0) {                              
                                window.location = "/Settings/Subscription";
                            
                                //setTimeout(function () {
                                //    $("#leftsidebar").addClass("disable-div");
                                //}, 1100);

                               
                            }

                            var template_structure = value.template_structure;
                            $('#spanAccountRenewalTitle').html(value.subject);
                            $('#divAccountRenewalMessage').html(template_structure.replace('{account_expiry_date}', value.account_expiry_date));
                            $("#ModalSubcription").modal('show');
                        });
                    }
                    else {
                        $("#ModalSubcription").modal('hide');
                    }
                }
                else {
                    alert(data.Error);
                }
            });
    },
 
    GetBillingAddress: function () {
        var param = '{"action":"billing_address"}';
        $('#RenewalBillingDetails_Placeholder, #RenewalBillingDetails_PlaceholderTab').html('<div style="text-align:center; width:100%;">Process...<img src="/images/spin.gif" />');
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    if (data.Response[0].billing_address.length > 0) {
                        call_tmpl_binder(data.Response[0].billing_address[0], '/Template/subscription_tmpl.html', '#RenewalBillingDetails_Template', '#RenewalBillingDetails_Placeholder');
                        call_tmpl_binder(data.Response[0].billing_address[0], '/Template/subscription_tmpl.html', '#RenewalBillingDetailsTab_Template', '#RenewalBillingDetails_PlaceholderTab');
                        call_tmpl_binder(data.Response[0].billing_address[0], '/Template/subscription_tmpl.html', '#billingAddress_Template', '#billingAddress_Placeholder');
                        $('#btn_nextonthirdstep').removeClass('disabled');
                    }
                    else {
                        call_tmpl_binder(null, '/Template/subscription_tmpl.html', '#RenewalBillingAdrAdd_Template', '#RenewalBillingDetails_Placeholder');
                        call_tmpl_binder(null, '/Template/subscription_tmpl.html', '#RenewalBillingAdrAdd_Template', '#RenewalBillingDetails_PlaceholderTab');
                        $('#btn_nextonthirdstep').addClass('disabled');
                    }
                }
                else {
                    call_tmpl_binder(null, '/Template/subscription_tmpl.html', '#RenewalBillingAdrAdd_Template', '#RenewalBillingDetails_Placeholder');
                    call_tmpl_binder(null, '/Template/subscription_tmpl.html', '#RenewalBillingAdrAdd_Template', '#RenewalBillingDetails_PlaceholderTab');
                    $('#btn_nextonthirdstep').addClass('disabled');
                }
            });
    },

    GetAccountRenewInfo: function () {
        var param = '{"action":"renew_info"}';
        param = { json: param }
        ns_ajax.get(
            urls.subscription,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/subscription_tmpl.html', '#CndRenewalPlanDetals_Template', '#CndRenewalPlanDetals_Placeholder');

                    setTimeout(
                        function () {
                            $.each(data.Response[0].plans, function (key, value) {
                         
                                if (value.is_current_plan == 'YES') {
                                    var planDetails = value.plan_details;                                   ;
                                    if (planDetails == '' || planDetails == null)
                                        $('#PlanDetails_Placeholder').html('');
                                    else
                                        call_tmpl_binder(planDetails, '/Template/subscription_tmpl.html', '#PlanDetails_Template', '#PlanDetails_Placeholder');
                                }
                            });
                        }, 300);
                }
                else {
                    alert(data.Error);
                }
            });
    },

    InsertUpdateBillingDetails: function (param, evt) {         
        var btnid = evt.target.getAttribute("id");
        $('#' + btnid).html('Process...<img src="/images/spin.gif" />');

        ns_ajax.post(
            urls.subscription,
            param,
            function (data) {
                $('#' + btnid).html('Submit');
                if (data.Status == 'OK') {               
                    ShowAlertMessage("Message", data.Response, "C");
                    ns_subscription.GetBillingAddress();                 
                    $('.billing_edit, .cross').hide();
                    $('.billing_view, .btb__edit').show('slow');
                }
                else
                    ShowAlertMessage("Message", data.Error, "A");
            });
    },

    getPaymentMethods: function (ctrl, method) {
        $('#btn_make_payment').addClass('disabled');
        $(ctrl).html('<div style="text-align:center; width:100%;">Process...<img src="/images/spin.gif" />');
        var param = '{"action":"payment_methods","method":"' + method+'"}';
        var params = { json: param }
        ns_ajax.get(
            urls.subscription,
            params,
            function (data) {
                $(ctrl).html('');
                if (data.Status == 'OK') {
                    if (data.Response[0].payment_methods.length > 0) {
                        $.each(data.Response[0].payment_methods, function (key, value) {
                            $(ctrl).append("<input name='rdo_provider' id='" + value.payment_method_id + "' class='radio rdo_provider' type='radio' value='" + value.payment_method_id + "'checked='checked' />" +
                                "<label for='" + value.payment_method_id + "' style='padding-left:10px'>" + value.provider_name + "<br>" + value.description + "</label><br />");

                            if ($("#payment_terms").prop('checked') == true) {
                                $('#btn_make_payment').removeClass('disabled');
                            }
                        });
                    }
                    else {
                        $(ctrl).html('Not Available');                      
                    }
                }
                else {
                    $(ctrl).html('Not Available');
                }
            });
    },

    makepayment: function (param, evt) {
        var btnid = evt.target.getAttribute("id");
        $('#' + btnid).html('Process...<img src="/images/spin.gif" />');

        ns_ajax.post(
            urls.makepayment,
            param,
            function (data) {
                $('#' + btnid).html('Make Payment');
                if (data.Status == 'OK') {
                    var redirect_url = data.Response;                 
                    if (redirect_url !== '') {
                        if (IsURL(redirect_url))
                            window.location = redirect_url;
                        else {
                            ShowAlertMessage("Message","You request has been proccessed successfully.", "A");
                            window.location = "/Settings/Subscription";                          
                        }
                    }                      
                    else
                        ShowAlertMessage("Message", data.Error, "A");
                }
                else
                    ShowAlertMessage("Message", data.Error, "A");
            });
    },

    CompleteRedirectFlow: function (redirect_flow_id) {      
        $('#divDirectDebitSetup').html('<p  style="text-align: center; margin: auto 0; padding: 50px 15px; background-color:#fff;border-radius:10px;color:gray"><img src="/images/spin.gif" /> Please Wait....<p>');
        var obj = {};
        obj.action = 'crf';
        obj.redirect_flow_id = redirect_flow_id;      
        var param = "[" + JSON.stringify(obj) + "]";       
        ns_ajax.post(
            urls.CompleteRedirectFlow,
            param,           
            function (data) {              
                if (data.Status == "OK") {
                    var res = '<div style="text-align: center; margin: auto 0; padding: 50px 15px; background-color:#fff;border-radius:10px;">' +
                        '<h3 style="color: #000000; font-size: 18px;"><i class="fa fa-check-circle fa-lg" style="color: green">&nbsp;</i>Direct Debit set up successfully</h3>' +
                        '<p>GoCardless Ltd will appear on your bank statement when payments are taken against this Direct Debit.</p>' +
                        '<p><a href="/Settings/Subscription" class="btn btn-primary btn-sm">View Account Subscription >> </a></p>' +

                        '</div>';
                    $('#divDirectDebitSetup').html(res);

                    setTimeout(
                        function () {
                            window.location = "/Settings/Subscription";
                        }, 10000);
                }
                else {                 
                    $('#divDirectDebitSetup').html('<p style="text-align: center; margin: auto 0; padding: 50px 15px; background-color:#fff;border-radius:10px;color:red!important;"><i class="fa fa-info-circle font-18"> </i> ' + data.Error + '.<p>');
                }
            });
    },

    CancelSubscription: function (param, evt) {
        var btnid = evt.target.getAttribute("id");
        $('#' + btnid).html('Process...<img src="/images/spin.gif" />');

        ns_ajax.post(
            urls.makepayment,
            param,
            function (data) {
                $('#' + btnid).html('Cancel Subscription');
                if (data.Status == 'OK') {
                    ShowAlertMessage("Message", data.Response, "S");
                    ns_subscription.GetDetails();
                    ModalHide('#cancelSubscription');
                }
                 else
                        ShowAlertMessage("Message", data.Error, "A");
              
            });
    },
}


/****************************************************************************************** 
                                               Reports 
 ******************************************************************************************/
ns_BookedJobs = {
    search: function (act) {
        var param = '', jobsCounter = 0, totalJobs = 0;
        if (act == 'more')
            $('.loadmore-myjobs').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        else
            $('#my_jobs_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');

        param = ns_BookedJobs.getSearchParam();
        param = { json: param }
        ns_ajax.get(
            urls.bookedjobs,
            param,
            function (data) {
                $('.loadmore-myjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                if (data.Status == 'OK') {
                    if (act == 'more') {
                        jQuery('#my_jobs_loadmore_template').tmpl(data.Response[0].jobs).appendTo('#my_jobs_loadmore_placeholder');
                    }
                    else {
                        if (data.Response[0].jobs.length > 0) {
                            call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#my_jobs_template', '#my_jobs_placeholder');
                            ns_BookedJobs.TotalQty(data.Response[0].TotalCount);
                        }
                        else {
                            var msg = "Sorry ! we could't find any jobs matching your criteria..";
                            var link = "Try some different filters and search.";
                            $('#my_jobs_placeholder').html(nodata2(msg, link));
                            $('.loadmore-myjobs').hide();
                            $('#jobs_found').html(jobsCounter);
                            $('#total_jobs').html(totalJobs);
                            ns_BookedJobs.TotalQty(null);
                        }
                    }
                    $.each(data.Response[0].jobs, function (key, value) {
                        jobsCounter = value.srno;
                        totalJobs = value.TotalRecord;
                    });
                    $('#jobs_found').html(jobsCounter);
                    $('#total_jobs').html(totalJobs);
                }
                else {
                    $('.loadmore-myjobs').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                    var msg = "Sorry ! we could't find any jobs matching your criteria..";
                    var link = "Try some different filters and search.";
                    $('#job_search_template').html(nodata2(msg, link));
                    ns_BookedJobs.TotalQty(null);
                }

                if (jobsCounter < totalJobs)
                    $('.loadmore-myjobs').show();
                else
                    $('.loadmore-myjobs').hide();
            });

    },
    GetRoles: function (ctrl) {
        var params = "dro=der-dl";
        $(ctrl).html('<option value="">Select Role</option>');
        ns_ajax.get(
            urls.employeesApi,
            params,
            function (data) {
                if (data.Status === 'OK') {
                    var obj = data.Response;
                    $.each(obj.eroles, function (key, value) {
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        $(ctrl).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    })
                }
            }
        );
    },
    addSearch_tag: function (activity, ctrl_id, fieldName, filterfield, fieldlabel) {
        var ctrlValues = '', ctrlText = '';
        if (activity == 'filldropdown') {
            ctrlValues = $('#' + ctrl_id).val();
            ctrlText = $('#' + ctrl_id + " option:selected").text();
        }
        else if (activity == 'autocomplete') {
            ctrlValues = $('#' + ctrl_id).attr('data-item-id');
            ctrlText = $('#' + ctrl_id).val();
        }
        else {
            ctrlValues = ctrlText = $('#' + ctrl_id).val();
        }

        if (ctrlValues == '') {
            $('#' + ctrl_id).focus();
            return false;
        }
        else {
            var searchKey = fieldlabel;
            var searchValue = ctrlValues;
            var tag = '<span id="stag' + fieldName + '" class="btn btn-outline-info tmlabel opacity_8 stag  tagjobdate"> ' + fieldlabel + ' : <b data-field="' + searchKey + '" data-field-name="' + filterfield + '" data-searchtagval="' + searchValue + '" data-searchtagtext="' + ctrlText + '">' + ctrlText + '</b> <a id="stagCancel' + fieldName + '" class="cls_cross clsCancelTag">x</a></span>';

            $('.searchTags').append(tag);
            $('.filterlabel').show();
        }
        ns_BookedJobs.search();

        $('.clsCancelTag').on("click", function () {
            var id = $(this).attr('id').replace('stagCancel', '');

            $('#stag' + id).remove();
            ns_BookedJobs.search();
            if (id == 'job_id')
                $('#txt_job_id').val('');
            if (id == 'role_id')
                $('#ddl_job_role').val('');
            if (id == 'job_date')
                $('#txt_job_start_datetime').val('');
            if (id == 'shift_secured')
                $('#txt_shift_secured_datetime').val('');
            if (id == 'employee') {
                $('#txt_employee').val('');
                $('#txt_employee').attr('data-item-id', '');
            }
            if (id == 'location') {
                $('#txt_location').val('');
                $('#txt_location').attr('data-item-id', '');
            }
            if ($('.searchTags').html() == '') {
                $('.filterlabel').hide();
            }

        });
    },
    getSearchParam: function () {
        var param = '';
        JobType = JobType == 'N-L' ? 'A' : JobType;
        param = 'action:"bookedjobs","job_type":"' + JobType + '","job_status":"' + JobStatus + '","offset": "' + pagenumber + '", "next": "' + pagesize + '",';
        $("div.searchTags span.stag b").each(function () {
            var key = $(this).attr('data-field-name');
            var val = $(this).attr('data-searchtagval');
            param += key + ':"' + val + '",';
        });
        param = param == '' ? param : param.slice(0, -1);
        if (param !== '') {
            param = '{' + param + '}';
        }
        return param;
    },
    resetControl: function () {
        $('#txt_job_id').val('');
        $('#ddl_job_role').val('');
        $('#txt_job_start_datetime, #txt_shift_secured_datetime').val('');
        $('#txt_employee').val('');
        $('#txt_employee').attr('data-item-id', '');
        $('#txt_location').val('');
        $('#txt_location').attr('data-item-id', '');
    },
    TotalQty: function (obj) {
        var totaljobs = 0, flag = true;
        if (obj == null && $('.searchTags').html() !== '') {
            $('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED, .cls-CANCELLED').html('0');
        }
        else {
            if (obj.length == 1) {
                if ($('.searchTags').html() !== '') {
                    flag = true;
                    $('.cls-All, .cls-BOOKED, .cls-UNCOMPLETED, .cls-WAITING, .cls-COMPLETED, .cls-NOTACCEPTED, .cls-CANCELLED').html('0');
                }
                else
                    flag = false;

            }
            $.each(obj, function (key, value) {
                $('.cls-' + value.status).html(value.total);

                if (value.status == 'BOOKED' || value.status == 'UNCOMPLETED' || value.status == 'WAITING' || value.status == 'COMPLETED' || value.status == 'NOTACCEPTED' || value.status == 'CANCELLED') {
                    totaljobs = parseInt(totaljobs) + parseInt(value.total);
                }
            });
            if (flag)
                $('.cls-All').html(totaljobs);
        }
    },
    viewJobDetail: function (jobid, action) {
        $('#job_details_placeholder').html('<div style="padding:10px;text-align:center">Loading...<img src="/images/spin.gif" /></div>');
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsdetails,
            param,
            function (data) {
                if (data.Status == 'OK') {
                    call_tmpl_binder(data.Response[0], '/Template/jobs_tmpl.html', '#job_details_template', '#job_details_placeholder');
                }
                else {
                    var msg = "Sorry ! we could't find jobs deatils";
                    var link = "Try after some time.";
                    $('#job_details_placeholder').html(nodata2(msg, link));
                }
            }
        );
    },

    getJobDetails: function (jobid, action) {
        var param = { jobid: jobid, action: action };
        ns_ajax.get(
            urls.jobsApi + "Get",
            param,
            function (response) {
                if (response.split('|')[0] === 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var tblHistory = "", totalCost, vatamt;
                    if (action == 'jobHistory')
                        ns_jobs.GetJobHistory('jobhistory', jobid);
                    else if (action == 'auditHistory') {
                        $("#tblJobHistoryHead").empty();
                        $("#tblJobHistoryBody").empty();
                        $("#tblJobHistoryHead").append(ns_table_template.heading_row(obj.Table));
                        if (obj.Table1.length === 0) {
                            tblHistory += '<tr><td colspan="3" style="text-align:center;">No history available</td></tr>';
                            $("#tblJobHistoryBody").append(tblHistory);
                            tblHistory = "";
                        }
                        else {
                            $.each(obj.Table1, function (key, value) {
                                tblHistory += "<tr>";
                                tblHistory += '<td >' + value.RowNumber + '</td>';
                                tblHistory += '<td >' + value.job_audit_comments + '</td>';
                                tblHistory += '<td >' + value.job_audit_date + " / " + value.job_audit_by_user_name + '</td>';
                                tblHistory += "</tr>";
                                $("#tblJobHistoryBody").append(tblHistory);
                                tblHistory = "";
                            });
                        }
                    }
                    else {
                        $.each(obj, function (key, value) {
                            if (action == "edit") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Update")
                            }
                            if (action == "createinvoice") {
                                editJobDetail = value; //store value in global variable to get extra fields values
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Submit")
                            }

                            else if (action == "complete" || action == "recomplete") {
                                if (action == "complete")
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Complete")
                                else
                                    ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Recomplete")
                            }
                            else if (action == "audit") {
                                ns_jobs.fn_Edit_Complete_ReComplete_Audit_Detail(value, action, "Audit")
                            }

                            else if (action == "cancel") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Cancel");
                            }
                            else if (action == "swap") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Swap");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "assign") {
                                ns_jobs.fn_Cancel_Swap_Assign_Detail(value, action, "Assign");
                                //Autocomplete Candidate(Required Global Auto function)
                                $('#txtNewCandidate').autocomplete({
                                    source: function (request, response) {
                                        $.getJSON(urls2.autocompleteApi + "?type=cnd&term=" + request.term,
                                            function (data) {
                                                response($.map(data, function (item) {
                                                    return {
                                                        label: item.split(',')[0],
                                                        val: item.split(',')[1],
                                                        category: item.split(',')[2]
                                                    };
                                                }));
                                            }
                                        );
                                    },
                                    minLength: 2,
                                    delay: 100,
                                    select: function (e, i) {
                                        var selectedItemValue = i.item.val.split('/')[2];
                                        $("#txtNewCandidate").attr('data-val', selectedItemValue);
                                    }
                                });
                            }
                            else if (action == "delete") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Delete")
                            }
                            else if (action == "restore") {
                                ns_jobs.fn_Delete_Restore_Detail(value, action, "Restore")
                            }
                            else if (action == 'view') {
                                $('#spanDetailJobId').html(jobid);
                                $('#tabjobhistoryDetailsView').attr('data-id', jobid);
                                ns_jobs.JobFullDetail(obj, tabStatus);
                            }
                        });
                    }
                }
                else {
                    //ShowAlertMessage("Error !", response, "A");
                    $('.tbodyJobHistory').html("<tr><td colspan='14'><center>Not Available !</center></td></tr>");
                }
            });
    },
}

$(document).ready(function () {
    $(document).on('change', "#ddlCndRole", function () {
        page_number = 0;
        ns_rpt.GetCompliant('');
    });
    $(document).on('change', "#ddlAgenciesRpt", function () {     
        agency_id = $('#ddlAgenciesRpt').val();
        page_number = 0; page_size = 10;
        ns_rpt.GetReport('');
    });
    $(document).on('change', "#ddlcompliance_type", function () {
        page_number = 0; page_size = 10;
        ns_rpt.GetCompliant('');
    });
    $(document).on('change', "#ddldoc_status", function () {
        page_number = 0; page_size = 10;
        ns_rpt.GetCompliant('');
    });
    $(document).on('click', ".cls-compliant-rpt", function () {
        var action = $(this).attr('data-action');
        if (action == 'more') {
            page_number = page_number + 10;
            ns_rpt.GetCompliant('more');
        }
        else if (action == 'export') {
            alert('coming soon');
        }
        else {
            $('#ddlCndRole').val('0');
            $('#ddlcompliance_type').val('');
            $('#ddldoc_status').val('');
            $("#hfcndid").val('0');
            $("#rptFilterCNDNameCompliance").val('');
            employee_id = 0;
            page_number = 0; page_size = 10;
            ns_rpt.GetCompliant('');
        }
    });

    $(document).on('change', ".btn-refresh-report", function () {
        page_number = 0; page_size = 10;
        ns_rpt.GetReport('');
    });

    $(document).on('click', ".clstopTabsRpt li a", function () {  
        page_number = 0; page_size = 10;      
        ProfileType = $(this).attr('data-type');
        if (ProfileType == 'agency') {
            $('#divcndRpt').hide();
            $('#divAgencyList').show();
        }
        else {
            $('#divAgencyList').hide();
            $('#divcndRpt').show();
            
        }

        ns_rpt.GetReport('');
    });

    $(document).on('change', '#ddlRotaLocationsRpt', function () {
        location_id = $(this).val();
        ns_rpt.GetReport('');
    });

    $(document).on('change', '#ddlRotaRolesRpt', function () {
        Role_id = $(this).val();
        ns_rpt.GetReport('');
    });

    $(document).on('change', "#rptFilterCNDNameCompliance", function () {
        employee_id = $("#hfcndid").val();
        page_number = 0; page_size = 10;
        ns_rpt.GetCompliant('');
    });

    $(document).on("change", ".chkAllMsg", function () {
        $("#CndPayrollHistoryBody_placeholder input:checkbox").prop('checked', $(this).prop("checked"));
    });
    $(document).on("change", "#ddlCndRoleRpt", function () {
        page_number = 0; page_size = 10;
        ns_rpt.GetReport();
    });
    
    
});


ns_rpt = {
    GetCompliant: function (act) {
        var action = "";
        var from_datetime = '', to_datetime = '';
        var cnd_role = $('#ddlCndRole').val();
        /*var cnd_id = $('#rptFilterCNDNameCompliance').attr('data-item-id');*/
        var compliance_type = $('#ddlcompliance_type').val();
        var doc_status = $('#ddldoc_status').val();
        var filter = $('#txtfilter').val();
        //if ($('#txtReportDateRange').val() !== '') {
        //    from_datetime = $('#txtReportDateRange').val().split('-')[0];
        //    from_datetime = ConvertDateFormate(from_datetime.trim());
        //    to_datetime = $('#txtReportDateRange').val().split('-')[1];
        //    to_datetime = ConvertDateFormate(to_datetime.trim());
        //}

      
        var counter = 0, total_reports = 0;

        var param = '{ "action":"' + action + '","cnd_id":"' + employee_id + '","role_id":"' + cnd_role + '","compliance_status":"' + compliance_type + '","doc_status":"' + doc_status + '","filter":"' + filter + '", "from_datetime":"' + from_datetime + '", "to_datetime":"' + to_datetime + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param, type: "compliance_rpt" };


        $('#placeholder_ComplianceList').addClass('a-disabled');
        $('#loadmorereports').hide();
        $('#loadmorereports').html('Loading...<img src="/images/spin.gif" />');

        ns_ajax.get(
            urls.reports + "GetReports",
            params,
            function (data) {
                $('#rptFilterCNDNameCompliance').val('');
                $('#rptFilterCNDNameCompliance').attr('data-item-id', '0');
                //var data = jQuery.parseJSON(response);
                if (data.Status == 'OK') {
                    $('#placeholder_ComplianceList').removeClass('a-disabled');
                    $('#loadmorereports').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');
                   
                    if (act !== 'more') {
                        call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#tmpl_ComplianceListHead', '#placeholder_ComplianceListHead');
                    }

                    if (act == 'more') {
                        $.get("/Template/reports_tmpl.html", null, function (temp) {
                            $(temp).appendTo("body");
                            $('#tmpl_ComplianceList').tmpl(data.Response[0]).appendTo('#placeholder_ComplianceList');
                        });
                    }
                    else {                    
                        if (data.Response[0].reports.length > 0) {
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#tmpl_ComplianceList', '#placeholder_ComplianceList');
                        }
                        else {
                            var msg = "Not Available !";
                            var link = "Result :[<b>0</b>]";
                            $('#placeholder_ComplianceList').html(nodata2(msg, link));
                         
                        }
                    }



                    $.each(data.Response[0].reports, function (key, value) {
                        total_reports = value.total_records;
                        counter = counter + 1;
                    });
                    $('#divtotal_count').html(total_reports);
                    $('#TotalCount').html(counter);

                }
                else {
                  
                 
                }
            });

        if (counter < total_reports)
            $('#loadmorereports').show();
        else
            $('#loadmorereports').hide();

    },
    GetReport: function (act) {       
        var action = $('#Reports_placeholder').attr('data-report-type');
        var from_datetime = '', to_datetime = '';
        var cnd_role = $('#ddlCndRoleRpt').val();
      
        var cnd_id = 0;//$('#rptFilterCNDNameCompliance').attr('data-item-id');
        //var compliance_type = $('#ddlcompliance_type').val();
        //var doc_status = $('#ddldoc_status').val();
        //var filter = $('#txtfilter').val();
        //if ($('#txtReportDateRange').val() !== '') {
        //    from_datetime = $('#txtReportDateRange').val().split('-')[0];
        //    from_datetime = ConvertDateFormate(from_datetime.trim());
        //    to_datetime = $('#txtReportDateRange').val().split('-')[1];
        //    to_datetime = ConvertDateFormate(to_datetime.trim());
        //}
        var counter = 0, total_reports = 0;
      
        var param = '{ "action":"' + action + '","cnd_role":"' + cnd_role + '","type":"' + ProfileType + '","cnd_id":"' + cnd_id + '","location":"' + location_id + '","role_id":"' + Role_id + '","org_id":"' + agency_id + '","from_datetime":"' + from_datetime + '", "to_datetime":"' + to_datetime + '","offset":"' + page_number + '","next":"' + page_size + '"}';
        var params = { json: param, type: "all_rpt" };

      
            $('#Reports_placeholder').html('<center style="margin:50px">Loading...<img src="/images/spin.gif" /></center>');         
       
/*        $('#reports_template').addClass('a-disabled');*/
        //$('#loadmoreReports').html('Loading...<img src="/images/spin.gif" />');

        ns_ajax.get(
            urls.reports + "GetReports",
            params,
            function (data) {
                $('#rptFilterCNDNameCompliance').val('');
                $('#rptFilterCNDNameCompliance').attr('data-item-id', '0');
            
                if (data.Status == 'OK') {
               /*     $('#reports_template').removeClass('a-disabled');*/
                    $('#loadmoreReports').html('Load more..&nbsp; <i class="fa fa-plus">&nbsp;</i>');

                    //if (act !== 'more') {
                    //    call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#tmpl_ComplianceListHead', '#placeholder_ComplianceListHead');
                    //}

                    //if (act == 'more') {
                    //    $.get("/Template/reports_tmpl.html", null, function (temp) {
                    //        $(temp).appendTo("body");
                    //        $('#tmpl_ComplianceList').tmpl(data.Response[0]).appendTo('#placeholder_ComplianceList');
                    //    });
                    //}
                    //else

                    if (data.Response[0].SeachResult.length > 0) {
                        if (action == 'costreport')
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#Costreports_template', '#Reports_placeholder');
                        else if (action == 'overtime')
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#Overtimereports_template', '#Reports_placeholder');
                        else if (action == 'jobs')
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#Jobsreports_template', '#Reports_placeholder');
                        else if (action == 'leaves')
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#Leavereports_template', '#Reports_placeholder');
                        else
                            call_tmpl_binder(data.Response[0], '/Template/reports_tmpl.html', '#reports_template', '#Reports_placeholder');

                    }
                    else {
                        var msg = "Not Available !";
                        var link = "Result :[<b>0</b>]";
                        $('#Reports_placeholder').html(nodata2(msg, link));
                    }                  

                  
                    //$.each(data.Response[0].reports, function (key, value) {
                    //    total_reports = value.total_records;
                    //    counter = counter + 1;
                    //});
                    //$('#divtotal_count').html(total_reports);
                    //$('#TotalCount').html(counter);

                }
                else {

                }
            });
    },
    getAllActiveRoles: function (Id) {
        $('#' + Id).empty();
        $('#' + Id).append($("<option />").val(0).text('All Roles'));
        var param = { category: 'cndallrole' };
        ns_ajax.get(
            urls.masterApi,// 'MasterSettings/FillDropdown',
            param,
            function (response) {
                if (response.split('|')[0] == 'OK') {
                    var obj = jQuery.parseJSON(response.split('|')[1]);
                    var currentparent = "", previousparent = "";
                    $.each(obj, function (key, value) {
                        currentparent = value.parent_id;
                        var color = (value.color_code == '' || value.color_code == null) ? '#ccc' : value.color_code;
                        if (previousparent == "" || currentparent != previousparent) {
                            jQuery('#' + Id).append($("<optgroup style='font-weight:bold;background-color:#ccc;' label='" + value.parent_name + "' id='" + value.parent_id + "'></optgroup>"));
                            previousparent = value.parent_id;
                        }
                        if (value.role_id != value.parent_id)
                            jQuery('#' + Id).append($("<option style='color:" + color + ";'></option>").val(value.role_id).html(value.role_name));
                    });
                }
            }
        );
    },

    Get_JobRole_Location_masters: function (CtrlLocation, CtrlRole, role_id, location_id) {
        if (role_id == null || role_id == '')
            role_id = '0';
        var param = { id: role_id };
        ns_ajax.get(
            urls.rotaApi + "location",
            param,
            function (data) {
                if (data.Status == 'OK') {
                    var obj = data.Response; //jQuery.parseJSON(response.split('|')[1]);
                    var str = '';

                    //Location(s)
                    if (CtrlLocation !== '') {
                        if (CtrlLocation == '#ddlRotaLocations')
                            str = '<option value="0">All Locations</option>';
                        else
                            str = '<option value="0">Select Location</option>';
                        var mainlocation = 0;
                        $.each(obj.Location, function (key, value) {

                            str += "<option value=" + value.emp_location_id + " title='" + value.location_address + "'>" + value.emp_location_name + "</option>";
                            if (parseInt(value.main_location) > 0)
                                mainlocation = value.emp_location_id;
                        });

                        $(CtrlLocation).html(str);
                        if (CtrlLocation == '#ddlRotaLocations')
                            $(CtrlLocation).val(mainlocation);
                        else
                            $(CtrlLocation).val(location_id);
                    }

                    //Job Role(s)  
                    if (CtrlRole !== '') {
                        str = '<option data-role-id="0" data-rate="0" value="0" >Select Role</option>';
                        $.each(obj.JobRole, function (key, value) {
                            /* style = 'color:" + value.cnd_custom_role_color + "'*/
                            str += "<option data-role-id='" + value.role_id + "' data-rate=" + value.cnd_custom_role_rate + " value=" + value.cnd_custom_role_id + " title='" + value.cnd_custom_role_name + "' >" + value.cnd_custom_role_alias + "</option>";
                        });
                        $(CtrlRole).html(str);
                        $("#ddlRolesDragdrop").html(str);
                        $(CtrlRole).val(role_id);
                        var rate = $('#ddlRole option:selected').attr('data-rate');
                        $('#spnDefaultRate').html(rate);
                        $('#ddlRolesDragdropEmp').html(str);

                    }                  

                    //Candidate(s) List

                    $('.list-candidate-dragdrop').empty();
                    if (obj.CandidateList.length > 0) {
                        $.each(obj.CandidateList, function (key, value) {
                            var wpJson = value.cnd_workingPatternJson == '' ? "" : value.cnd_workingPatternJson;
                            var wpJson2 = value.cnd_workingPatternJson2 == '' ? "" : value.cnd_workingPatternJson2;
                            var absenceJson = value.cnd_absenceJson == '' ? "" : value.cnd_absenceJson;
                            var objWpJson2 = value.cnd_workingPatternJson2 == '' ? "" : value.cnd_workingPatternJson2.replace(/ /g, '');

                            var list = '<li id="' + value.cnd_id + '" data-cnd_role_id="' + value.cnd_role_id + '" data-cnd_sub_type="' + value.cnd_sub_type + '" ondragstart="dragstartToPostAssignJob_handler(event);" data-action="jobpost_and_assign" data-workingPatternJson2=' + objWpJson2 + ' style="cursor: move;" draggable="true" class="list-group-item list-shifttiming p-2 p-t-1 p-b-1" data-workingPatternJson=' + wpJson + '>' +
                                '<span><img src="/images/profile.jpg" alt="avatar" class="img-responsive rounded-circle img" width="38" style="border:1px solid #ccc"><b style="padding-left:10px;color:#161cc5">' + value.cnd_full_name + '</b></span>' +
                                '<div class="col-grey" style="padding-left:50px;margin-top: -8px;font-size:14px">' + value.cnd_sub_type_name + ' (<b style="color:' + value.cnd_role_color + '">' + value.cnd_role_name + '</b>)</div>' +
                                '<div class="col-grey" style="padding-left:50px;padding-top:10px;font-size:14px; color:#313131; display:' + ((value.cnd_sub_type == 'P' || value.cnd_sub_type == 'T') ? 'block' : 'none') + '"><a style="color: #313131;"  data-candidate="' + value.cnd_full_name + '##' + value.cnd_sub_type_name + '##' + value.cnd_role_name + '"  class="clsWorkpatternAbsence"  data-json=' + wpJson + '><div style="display:none">' + wpJson2 + '</div><span style="display:none">' + absenceJson + '</span><i class="fa fa-external-link">&nbsp;</i>View work pattern</a></div>' +
                                '</li>';
                            $('.list-candidate-dragdrop').append(list);
                        });
                    }
                    else {
                        $('.list-candidate-dragdrop').append('<li style="padding:50px;padding: 50px;border: 1px solid #ded5d5!important; text-align: center;">Not Available</li>');
                    }                  
                }
            });
    },
}


$(document).on('click', '.toggle-password2', function () {
    $(this).toggleClass("zmdi-eye zmdi-eye-off");
    var input = $($(this).attr("toggle"));
    if (input.attr("type") == "password") {
        input.attr("type", "text");
    } else {
        input.attr("type", "password");
    }
});